#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end

    class ImportError < Racc::ParseError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..ida8beb1d339', 'grammar.ra', 637
require 'puppet/parser/functions'

attr_reader :file, :interp
attr_accessor :files

# Add context to a message; useful for error messages and such.
def addcontext(message, obj = nil)
    obj ||= @lexer

    message += " on line %s" % obj.line
    if file = obj.file
        message += " in file %s" % file
    end

    return message
end

# Create an AST array out of all of the args
def aryfy(*args)
    if args[0].instance_of?(AST::ASTArray)
        result = args.shift
        args.each { |arg|
            result.push arg
        }
    else
        result = ast AST::ASTArray, :children => args
    end

    return result
end

# Create an AST object, and automatically add the file and line information if
# available.
def ast(klass, hash = nil)
    hash ||= {}
    unless hash.include?(:line)
        hash[:line] = @lexer.line
    end

    unless hash.include?(:file)
        if file = @lexer.file
            hash[:file] = file
        end
    end

    return klass.new(hash)
end

# Raise a Parse error.
def error(message)
    if brace = @lexer.expected
        message += "; expected '%s'"
    end
    except = Puppet::ParseError.new(message)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

def file=(file)
    unless FileTest.exists?(file)
        unless file =~ /\.pp$/
            file = file + ".pp"
        end
        unless FileTest.exists?(file)
            raise Puppet::Error, "Could not find file %s" % file
        end
    end
    if @files.detect { |f| f.file == file }
        raise Puppet::ImportError.new("Import loop detected")
    else
        @files << Puppet::Util::LoadedFile.new(file)
        @lexer.file = file
    end
end

# Import our files.
def import(file)
    if Puppet[:ignoreimport]
        return AST::ASTArray.new(:children => [])
    end
    # use a path relative to the file doing the importing
    if @lexer.file
        dir = @lexer.file.sub(%r{[^/]+$},'').sub(/\/$/, '')
    else
        dir = "."
    end
    if dir == ""
        dir = "."
    end
    result = ast AST::ASTArray

    # We can't interpolate at this point since we don't have any
    # scopes set up. Warn the user if they use a variable reference
    pat = file
    if pat.index("$")
        Puppet.warning(
           "The import of #{pat} contains a variable reference;" +
           " variables are not interpolated for imports " +
           "in file #{@lexer.file} at line #{@lexer.line}"
        )
    end
    files = Puppet::Module::find_manifests(pat, dir)
    if files.size == 0
        raise Puppet::ImportError.new("No file(s) found for import " +
                                      "of '#{pat}'")
    end

    files.collect { |file|
        parser = Puppet::Parser::Parser.new(interp)
        parser.files = self.files
        Puppet.debug("importing '%s'" % file)

        unless file =~ /^#{File::SEPARATOR}/
            file = File.join(dir, file)
        end
        begin
            parser.file = file
        rescue Puppet::ImportError
            Puppet.warning(
                "Importing %s would result in an import loop" %
                    File.join(dir, file)
            )
            next
        end

        # This will normally add code to the 'main' class.
        parser.parse
    }
end

def initialize(interpreter)
    @interp = interpreter
    initvars()
end

# Initialize or reset all of our variables.
def initvars
    @lexer = Puppet::Parser::Lexer.new()
    @files = []
end

# The fully qualifed name, with the full namespace.
def classname(name)
    [@lexer.namespace, name].join("::").sub(/^::/, '')
end

def on_error(token,value,stack)
    #on '%s' at '%s' in\n'%s'" % [token,value,stack]
    #error = "line %s: parse error after '%s'" %
    #    [@lexer.line,@lexer.last]
    error = "Syntax error at '%s'" % [value]

    if brace = @lexer.expected
        error += "; expected '%s'" % brace
    end

    except = Puppet::ParseError.new(error)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

# how should I do error handling here?
def parse(string = nil)
    if string
        self.string = string
    end
    begin
        main = yyparse(@lexer,:scan)
    rescue Racc::ParseError => except
        error = Puppet::ParseError.new(except)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    rescue Puppet::ParseError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::Error => except
        # and this is a framework error
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::DevError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue => except
        error = Puppet::DevError.new(except.message)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    end
    if main
        # Store the results as the top-level class.
        interp.newclass("", :code => main)
        return main
    end
ensure
    @lexer.clear
end

# See if any of the files have changed.
def reparse?
    if file = @files.detect { |file| file.changed?  }
        return file.stamp
    else
        return false
    end
end

def string=(string)
    @lexer.string = string
end

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..ida8beb1d339

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 53, :_reduce_1,
 1, 53, :_reduce_none,
 1, 54, :_reduce_none,
 2, 54, :_reduce_4,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 4, 64, :_reduce_17,
 3, 64, :_reduce_18,
 2, 64, :_reduce_19,
 1, 69, :_reduce_none,
 1, 69, :_reduce_none,
 1, 70, :_reduce_none,
 3, 70, :_reduce_23,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_31,
 1, 71, :_reduce_none,
 3, 71, :_reduce_33,
 5, 57, :_reduce_34,
 5, 57, :_reduce_35,
 5, 57, :_reduce_36,
 5, 68, :_reduce_37,
 2, 58, :_reduce_38,
 1, 87, :_reduce_39,
 2, 87, :_reduce_40,
 2, 59, :_reduce_41,
 1, 88, :_reduce_none,
 1, 88, :_reduce_none,
 3, 89, :_reduce_44,
 3, 89, :_reduce_45,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 3, 90, :_reduce_48,
 1, 91, :_reduce_none,
 3, 91, :_reduce_50,
 1, 92, :_reduce_none,
 1, 92, :_reduce_none,
 3, 93, :_reduce_53,
 3, 93, :_reduce_54,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 4, 96, :_reduce_57,
 1, 82, :_reduce_none,
 3, 82, :_reduce_59,
 0, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 98, :_reduce_62,
 1, 73, :_reduce_63,
 1, 75, :_reduce_64,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 3, 60, :_reduce_71,
 0, 84, :_reduce_72,
 1, 84, :_reduce_73,
 3, 84, :_reduce_74,
 3, 101, :_reduce_75,
 3, 102, :_reduce_76,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 0, 86, :_reduce_79,
 1, 86, :_reduce_80,
 3, 86, :_reduce_81,
 1, 104, :_reduce_none,
 3, 104, :_reduce_83,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 4, 77, :_reduce_100,
 3, 77, :_reduce_101,
 1, 79, :_reduce_102,
 1, 79, :_reduce_103,
 1, 76, :_reduce_104,
 4, 80, :_reduce_105,
 4, 80, :_reduce_106,
 6, 62, :_reduce_107,
 0, 107, :_reduce_none,
 4, 107, :_reduce_109,
 1, 106, :_reduce_none,
 5, 61, :_reduce_111,
 1, 108, :_reduce_none,
 2, 108, :_reduce_113,
 5, 109, :_reduce_114,
 4, 109, :_reduce_115,
 1, 110, :_reduce_none,
 3, 110, :_reduce_117,
 3, 78, :_reduce_118,
 1, 112, :_reduce_none,
 4, 112, :_reduce_120,
 1, 114, :_reduce_none,
 3, 114, :_reduce_122,
 3, 113, :_reduce_123,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_131,
 1, 115, :_reduce_132,
 3, 115, :_reduce_133,
 2, 63, :_reduce_134,
 6, 65, :_reduce_135,
 5, 65, :_reduce_136,
 6, 66, :_reduce_137,
 5, 66, :_reduce_138,
 6, 67, :_reduce_139,
 5, 67, :_reduce_140,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 118, :_reduce_none,
 3, 118, :_reduce_144,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 0, 55, :_reduce_149,
 0, 121, :_reduce_150,
 1, 116, :_reduce_none,
 3, 116, :_reduce_152,
 3, 116, :_reduce_153,
 1, 122, :_reduce_none,
 3, 122, :_reduce_155,
 3, 123, :_reduce_156,
 1, 123, :_reduce_157,
 3, 123, :_reduce_158,
 1, 123, :_reduce_159,
 1, 119, :_reduce_none,
 2, 119, :_reduce_161,
 1, 117, :_reduce_none,
 2, 117, :_reduce_163,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 74, :_reduce_166,
 3, 99, :_reduce_167,
 2, 99, :_reduce_168,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 0, 85, :_reduce_none,
 1, 85, :_reduce_172 ]

racc_reduce_n = 173

racc_shift_n = 276

racc_action_table = [
    75,    54,    58,    93,   169,   157,    75,    54,    58,    38,
    39,   159,   206,   112,   169,  -126,    64,   210,    38,    39,
   158,   176,    64,    37,    75,    54,    58,   138,    34,   177,
     5,    46,   212,   154,   156,    57,    60,    46,   110,    66,
   126,    57,    60,   143,    40,    66,   168,    41,    62,    75,
    54,    58,    35,    40,    62,    46,    41,   154,   156,    57,
   123,    52,   193,    66,   249,    64,   187,    75,    54,    58,
   141,    37,    62,    75,    54,    58,  -126,   248,     5,    96,
    46,   138,   192,    64,    57,    60,  -128,   242,    66,   126,
    46,    75,    54,    58,   241,   100,   206,    62,    46,    54,
    58,   210,    57,    60,    46,  -127,    66,    64,    57,   182,
    38,    39,    66,   175,   126,    62,    52,    54,    58,   194,
  -141,    62,    46,   196,   197,  -129,    57,    60,    37,    46,
    66,   163,    64,    57,   182,     5,    48,    66,    96,    62,
    75,    54,    58,    37,  -125,    40,    62,    46,    41,    46,
     5,    57,    60,   160,   100,    66,    64,   154,   156,    50,
   203,    75,    54,    58,    62,   169,    85,    75,    54,    58,
    86,    46,   175,    96,  -124,    57,    60,    64,   172,    66,
    54,    58,   211,    64,    46,    75,    54,    58,    62,   100,
    54,    58,    46,   196,   259,  -126,    57,    60,    46,   171,
    66,    64,    57,    60,  -127,  -124,    66,    96,    85,    62,
    75,    54,    58,   139,  -124,    62,    46,   137,    46,   228,
    57,    60,   116,   100,    66,  -126,    64,   231,    75,    54,
    58,   232,   146,    62,    75,    54,    58,   146,   235,   138,
   135,    46,   238,  -128,    64,    57,    60,    85,   116,    66,
    64,    54,    58,    54,    58,  -127,   166,   107,    62,    46,
   245,   246,   247,    57,    60,    46,   126,    66,   126,    57,
    60,  -125,   250,    66,   164,  -125,    62,    54,    58,    54,
    58,    46,    62,    46,  -124,    57,   182,    57,   182,    66,
  -127,    66,   126,  -125,    64,  -129,  -130,    91,    62,   189,
    62,    54,    58,    54,    58,   243,   175,    46,    90,    46,
   144,    57,   182,    57,    60,    66,   126,    66,    64,    54,
    58,    50,   260,   133,    62,   262,    62,    86,   152,    54,
    58,    46,   183,    46,   126,    57,   182,    57,    60,    66,
   149,    66,   148,    45,   126,    50,    44,   269,    62,    46,
    62,  -172,   270,    57,   182,    54,    58,    66,   146,    46,
  -129,    50,    32,    57,   182,    52,    62,    66,   nil,   nil,
   126,    54,    58,   nil,   nil,   nil,    62,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    46,   126,   nil,   nil,    57,
   182,   nil,   nil,    66,   nil,   nil,   275,   nil,   nil,   nil,
   nil,    46,    62,   nil,   nil,    57,   182,    21,   nil,    66,
   nil,   nil,   nil,   nil,   nil,   240,   nil,    18,    62,    23,
    25,   nil,     1,     6,   nil,    11,    21,    16,   nil,    20,
   nil,    26,   nil,   nil,     5,   nil,    18,   nil,    23,    25,
   251,     1,     6,   nil,    11,   nil,    16,   nil,    20,   nil,
    26,    21,   nil,     5,   nil,   nil,   nil,   nil,   nil,   253,
   nil,    18,   nil,    23,    25,   nil,     1,     6,   nil,    11,
    21,    16,   nil,    20,   nil,    26,   nil,   nil,     5,   nil,
    18,   nil,    23,    25,   224,     1,     6,   nil,    11,   nil,
    16,   nil,    20,   nil,    26,    21,   nil,     5,   nil,   nil,
   nil,   nil,   nil,   222,   nil,    18,   nil,    23,    25,   nil,
     1,     6,   nil,    11,    21,    16,   nil,    20,   nil,    26,
   nil,   nil,     5,   nil,    18,   nil,    23,    25,   254,     1,
     6,   nil,    11,   nil,    16,   nil,    20,   nil,    26,    21,
   nil,     5,   nil,   nil,   nil,   nil,   nil,   274,   nil,    18,
   nil,    23,    25,   nil,     1,     6,   nil,    11,    21,    16,
   nil,    20,   nil,    26,   nil,   nil,     5,   nil,    18,   nil,
    23,    25,   267,     1,     6,   nil,    11,   nil,    16,   nil,
    20,   nil,    26,    21,   nil,     5,   nil,   nil,   nil,   nil,
   nil,   271,   nil,    18,   nil,    23,    25,   nil,     1,     6,
   nil,    11,    21,    16,   nil,    20,   nil,    26,   nil,   nil,
     5,   nil,    18,   nil,    23,    25,   nil,     1,     6,   nil,
    11,    21,    16,   nil,    20,   nil,    26,   nil,   nil,     5,
   nil,    18,   nil,    23,    25,   nil,     1,     6,   nil,    11,
    21,    16,   nil,    20,   nil,    26,   nil,   nil,     5,   nil,
    18,   nil,    23,    25,   nil,     1,     6,   nil,    11,    21,
    16,   nil,    20,   nil,    26,   nil,   nil,     5,   nil,    18,
   nil,    23,    25,   nil,     1,     6,   nil,    11,    21,    16,
   nil,    20,   nil,    26,   nil,   nil,     5,   nil,    18,   nil,
    23,    25,   nil,     1,     6,   nil,    11,   nil,    16,   nil,
    20,   nil,    26,   nil,   nil,     5 ]

racc_action_check = [
   195,   195,   195,    29,   116,    98,    85,    85,    85,   110,
   110,   102,   249,    42,   123,   215,   195,   249,   112,   112,
   102,   131,    85,    29,    45,    45,    45,   123,     2,   134,
    29,   195,   153,    98,    98,   195,   195,    85,    42,   195,
    45,    85,    85,    78,   110,    85,   116,   110,   195,    52,
    52,    52,     2,   112,    85,    45,   112,   153,   153,    45,
    45,    60,   139,    45,   208,    52,   136,    75,    75,    75,
    75,     6,    45,   172,   172,   172,    76,   208,     6,    35,
    52,    60,   139,    75,    52,    52,    71,   199,    52,   172,
    35,   169,   169,   169,   199,    35,   149,    52,    75,   158,
   158,   149,    75,    75,   172,   128,    75,   169,   172,   172,
    11,    11,   172,   127,   158,    75,    16,    16,    16,   142,
    16,   172,   169,   142,   142,    70,   169,   169,   107,   158,
   169,   107,    16,   158,   158,   107,    16,   158,    96,   169,
    18,    18,    18,    25,    68,    11,   158,    16,    11,    96,
    25,    16,    16,   105,    96,    16,    18,   105,   105,    16,
   145,    20,    20,    20,    16,   146,    21,   250,   250,   250,
    21,    18,   147,    34,   125,    18,    18,    20,   124,    18,
    23,    23,   151,   250,    34,   246,   246,   246,    18,    34,
   148,   148,    20,   237,   237,   122,    20,    20,   250,   117,
    20,   246,   250,   250,    67,    65,   250,   155,    64,    20,
   168,   168,   168,    61,    79,   250,   246,    59,   155,   170,
   246,   246,   171,   155,   246,    53,   168,   173,    32,    32,
    32,   174,   175,   246,   235,   235,   235,   176,   178,   182,
    49,   168,   190,    47,    32,   168,   168,   193,    44,   168,
   235,   159,   159,   144,   144,    80,   111,    36,   168,    32,
   204,   206,   207,    32,    32,   235,   159,    32,   144,   235,
   235,    81,   210,   235,   108,   130,    32,   242,   242,   138,
   138,   159,   235,   144,   216,   159,   159,   144,   144,   159,
   218,   144,   242,   219,   138,   220,    82,    28,   159,   138,
   144,   201,   201,    48,    48,   201,   234,   242,    26,   138,
    84,   242,   242,   138,   138,   242,   201,   138,    48,   137,
   137,   138,   240,    48,   242,   241,   138,    93,    91,   135,
   135,   201,   135,    48,   137,   201,   201,    48,    48,   201,
    89,    48,    88,    14,   135,    48,    12,   258,   201,   137,
    48,   259,   260,   137,   137,   183,   183,   137,    86,   135,
    83,   137,     1,   135,   135,   192,   137,   135,   nil,   nil,
   183,   257,   257,   nil,   nil,   nil,   135,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   183,   257,   nil,   nil,   183,
   183,   nil,   nil,   183,   nil,   nil,   273,   nil,   nil,   nil,
   nil,   257,   183,   nil,   nil,   257,   257,   273,   nil,   257,
   nil,   nil,   nil,   nil,   nil,   198,   nil,   273,   257,   273,
   273,   nil,   273,   273,   nil,   273,   198,   273,   nil,   273,
   nil,   273,   nil,   nil,   273,   nil,   198,   nil,   198,   198,
   211,   198,   198,   nil,   198,   nil,   198,   nil,   198,   nil,
   198,   211,   nil,   198,   nil,   nil,   nil,   nil,   nil,   223,
   nil,   211,   nil,   211,   211,   nil,   211,   211,   nil,   211,
   223,   211,   nil,   211,   nil,   211,   nil,   nil,   211,   nil,
   223,   nil,   223,   223,   166,   223,   223,   nil,   223,   nil,
   223,   nil,   223,   nil,   223,   166,   nil,   223,   nil,   nil,
   nil,   nil,   nil,   164,   nil,   166,   nil,   166,   166,   nil,
   166,   166,   nil,   166,   164,   166,   nil,   166,   nil,   166,
   nil,   nil,   166,   nil,   164,   nil,   164,   164,   225,   164,
   164,   nil,   164,   nil,   164,   nil,   164,   nil,   164,   225,
   nil,   164,   nil,   nil,   nil,   nil,   nil,   272,   nil,   225,
   nil,   225,   225,   nil,   225,   225,   nil,   225,   272,   225,
   nil,   225,   nil,   225,   nil,   nil,   225,   nil,   272,   nil,
   272,   272,   252,   272,   272,   nil,   272,   nil,   272,   nil,
   272,   nil,   272,   252,   nil,   272,   nil,   nil,   nil,   nil,
   nil,   262,   nil,   252,   nil,   252,   252,   nil,   252,   252,
   nil,   252,   262,   252,   nil,   252,   nil,   252,   nil,   nil,
   252,   nil,   262,   nil,   262,   262,   nil,   262,   262,   nil,
   262,   270,   262,   nil,   262,   nil,   262,   nil,   nil,   262,
   nil,   270,   nil,   270,   270,   nil,   270,   270,   nil,   270,
    31,   270,   nil,   270,   nil,   270,   nil,   nil,   270,   nil,
    31,   nil,    31,    31,   nil,    31,    31,   nil,    31,   143,
    31,   nil,    31,   nil,    31,   nil,   nil,    31,   nil,   143,
   nil,   143,   143,   nil,   143,   143,   nil,   143,     0,   143,
   nil,   143,   nil,   143,   nil,   nil,   143,   nil,     0,   nil,
     0,     0,   nil,     0,     0,   nil,     0,   nil,     0,   nil,
     0,   nil,     0,   nil,   nil,     0 ]

racc_action_pointer = [
   660,   349,     9,   nil,   nil,   nil,    33,   nil,   nil,   nil,
   nil,   107,   340,   nil,   337,   nil,   114,   nil,   138,   nil,
   159,   164,   nil,   177,   nil,   105,   266,   nil,   297,   -15,
   nil,   622,   226,   nil,   151,    57,   222,   nil,   nil,   nil,
   nil,   nil,     3,   nil,   210,    22,   nil,   222,   300,   219,
   nil,   nil,    47,   204,   nil,   nil,   nil,   nil,   nil,   207,
    59,   203,   nil,   nil,   206,   184,   nil,   183,   123,   nil,
   104,    65,   nil,   nil,   nil,    65,    55,   nil,    37,   193,
   234,   250,   275,   339,   304,     4,   320,   nil,   332,   318,
   nil,   328,   nil,   321,   nil,   nil,   116,   nil,   -15,   nil,
   nil,   nil,    -4,   nil,   nil,   109,   nil,    90,   268,   nil,
     6,   250,    15,   nil,   nil,   nil,    -5,   189,   nil,   nil,
   nil,   nil,   174,     5,   139,   153,   nil,   103,    84,   nil,
   254,     4,   nil,   nil,     6,   326,    61,   316,   276,    44,
   nil,   nil,   114,   641,   250,   155,   156,   162,   187,    63,
   nil,   176,   nil,     9,   nil,   185,   nil,   nil,    96,   248,
   nil,   nil,   nil,   nil,   496,   nil,   477,   nil,   208,    89,
   212,   184,    71,   220,   224,   194,   199,   nil,   229,   nil,
   nil,   nil,   217,   352,   nil,   nil,   nil,   nil,   nil,   nil,
   219,   nil,   363,   245,   nil,    -2,   nil,   nil,   408,    77,
   nil,   298,   nil,   nil,   253,   nil,   248,   239,    54,   nil,
   259,   433,   nil,   nil,   nil,    -6,   263,   nil,   269,   272,
   274,   nil,   nil,   452,   nil,   521,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   296,   232,   nil,   184,   nil,   nil,
   293,   319,   274,   nil,   nil,   nil,   183,   nil,   nil,   -21,
   165,   nil,   565,   nil,   nil,   nil,   nil,   368,   340,   344,
   346,   nil,   584,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   603,   nil,   540,   389,   nil,   nil ]

racc_action_default = [
  -149,  -173,  -173,   -14,    -2,  -142,  -173,   -15,    -3,   -16,
    -5,  -173,  -173,    -6,  -173,    -7,   -43,    -8,  -173,    -9,
  -173,   -42,   -10,  -173,   -11,  -173,   -39,   -12,  -173,  -173,
   -13,    -1,  -173,   -41,  -149,  -149,  -149,  -141,  -147,  -146,
  -145,  -148,  -149,  -143,   -79,   -72,  -166,   -28,  -173,  -173,
   -31,   -29,  -173,   -30,  -102,   -32,   -19,  -104,  -103,   -20,
   -63,   -21,   -62,   -22,   -64,   -24,  -131,   -25,   -26,  -130,
   -27,   -98,   -96,  -110,   -94,  -173,   -90,   -97,  -173,   -91,
   -95,   -92,   -99,   -93,  -173,  -173,   -72,  -132,  -134,  -149,
   -40,  -173,   -38,  -173,    -4,   -71,  -149,   -46,  -173,   -47,
   -63,   -49,  -173,   -56,   -55,  -173,  -162,  -173,  -173,  -160,
  -173,  -173,  -173,   -77,   -78,   -80,  -173,  -171,  -128,   -70,
   -68,   -73,   -65,   -63,   -60,   -66,   -64,  -171,   -69,   -58,
   -67,  -173,  -129,   -18,  -173,  -173,  -173,  -173,  -173,  -173,
   -82,  -168,  -173,  -173,  -173,  -173,  -173,  -171,  -173,  -150,
  -151,  -173,   276,  -173,   -52,  -173,   -51,   -45,  -173,  -173,
   -44,  -163,  -164,  -165,  -173,  -161,  -173,  -144,  -173,  -173,
  -173,  -172,   -61,  -173,  -173,  -172,   -72,   -17,  -173,  -126,
  -118,  -119,   -63,  -173,  -124,  -127,  -125,  -105,   -23,  -101,
  -173,   -33,  -173,  -173,  -167,  -173,  -169,  -170,  -173,  -173,
  -116,  -173,  -112,  -106,  -173,  -133,  -159,  -173,  -173,  -154,
  -157,  -173,   -50,   -48,   -88,   -84,   -85,   -53,   -89,   -86,
   -87,   -54,  -138,  -173,  -140,  -173,   -76,   -75,   -37,   -81,
   -59,   -34,   -35,   -74,  -171,  -173,  -121,  -171,  -100,   -83,
  -108,  -173,  -173,  -111,  -113,   -36,  -173,  -152,  -153,  -173,
  -173,  -136,  -173,  -137,  -139,   -57,  -123,  -173,  -173,  -170,
  -173,  -107,  -173,  -117,  -158,  -155,  -156,  -135,  -122,  -120,
  -173,  -115,  -173,  -173,  -114,  -109 ]

racc_goto_table = [
    31,    94,    36,    68,   127,   178,    56,    43,   202,   119,
   209,    67,   195,     4,   200,   115,    28,   113,   213,    70,
   142,    89,   129,    98,   105,   217,   221,    33,    78,   104,
   104,   261,   130,   181,   201,    68,   117,   173,   134,   180,
   128,   124,   237,    67,    88,   147,   151,   108,   132,   106,
    42,    70,   111,   178,   170,   109,   188,   207,   208,    92,
   161,   nil,   nil,   nil,   174,   244,   nil,   nil,   nil,   nil,
   nil,   200,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   236,   nil,   nil,   204,   153,   nil,   nil,   nil,   nil,
   nil,   104,   nil,   nil,   nil,   nil,   nil,    65,   nil,   nil,
   nil,   nil,   150,   162,   nil,    47,   165,   257,   167,   nil,
   265,   nil,   263,   nil,   nil,   103,   103,   nil,   nil,   nil,
   nil,   nil,   186,   nil,    68,    68,   125,   178,   190,    65,
   185,   186,    67,    67,   118,   234,   119,    47,   132,   185,
    70,    70,   229,   198,   113,   219,   219,   132,   233,   230,
   104,   nil,   nil,   218,   218,   268,   nil,   nil,    51,   130,
   nil,   220,   220,   nil,   223,    53,   225,   128,    94,   nil,
   186,   255,    87,   nil,   258,   132,   nil,   103,   185,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   132,   120,   186,   nil,
    51,   nil,   nil,    94,   122,    94,   185,    53,    82,   nil,
    82,    73,   nil,    84,   132,   nil,   nil,   nil,   nil,   nil,
   nil,   252,    82,   nil,   nil,    95,   184,   nil,    65,    65,
   nil,   nil,    94,   nil,   118,   184,    47,    47,   nil,   186,
   nil,   nil,    82,   118,   nil,   136,   103,   185,   nil,   216,
   216,   nil,    94,    94,   186,   132,   nil,   118,   118,   nil,
   nil,   nil,   185,   125,   nil,    82,   nil,   nil,   140,   nil,
   132,   118,   272,   nil,   184,    82,   nil,    55,   145,    77,
   273,    77,   118,   nil,   nil,   nil,   nil,   nil,   nil,    51,
    51,   nil,   184,    77,   179,   nil,    53,    53,   nil,   nil,
   118,   nil,   nil,   179,   nil,   nil,   nil,   205,   nil,    55,
   214,   214,   nil,    77,   nil,   nil,   nil,   215,   215,   nil,
   nil,   nil,   nil,   nil,   120,   nil,   nil,   nil,   nil,   nil,
   nil,   122,   nil,   184,   nil,   nil,    77,   nil,   nil,   nil,
   nil,   118,   179,   nil,   nil,   nil,    77,   nil,   184,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   118,   nil,    82,    82,
   179,   226,   227,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    82,   nil,   nil,   239,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    55,
   191,   179,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   179,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    82,   nil,   nil,   256,    77,
    77,   nil,   nil,   nil,   nil,   nil,    82,   nil,   nil,   264,
    82,   nil,   nil,   266,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    77,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    77,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    77,   nil,   nil,
   nil,    77 ]

racc_goto_check = [
     2,     4,    29,    23,    32,    59,    17,    68,    57,    47,
    71,    22,    53,     3,    59,    51,     1,    49,    39,    24,
    52,    29,    44,    38,    38,    43,    43,    37,    54,    22,
    22,    55,    23,    61,    56,    23,    34,    31,    17,    60,
    22,    30,    62,    22,    63,    32,    64,    65,    24,     3,
    66,    24,    67,    59,    33,     3,    20,    69,    70,     5,
    72,   nil,   nil,   nil,    33,    57,   nil,   nil,   nil,   nil,
   nil,    59,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    61,   nil,   nil,    33,    38,   nil,   nil,   nil,   nil,
   nil,    22,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,
   nil,   nil,     3,    29,   nil,    25,    68,    53,    68,   nil,
    71,   nil,    59,   nil,   nil,    21,    21,   nil,   nil,   nil,
   nil,   nil,    23,   nil,    23,    23,    21,    59,    17,    21,
    22,    23,    22,    22,    25,    32,    47,    25,    24,    22,
    24,    24,    51,     2,    49,    23,    23,    24,    49,    44,
    22,   nil,   nil,    22,    22,    61,   nil,   nil,    26,    23,
   nil,    24,    24,   nil,     2,    27,     2,    22,     4,   nil,
    23,    33,    27,   nil,    33,    24,   nil,    21,    22,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    24,    26,    23,   nil,
    26,   nil,   nil,     4,    27,     4,    22,    27,    46,   nil,
    46,    48,   nil,    48,    24,   nil,   nil,   nil,   nil,   nil,
   nil,     2,    46,   nil,   nil,    48,    21,   nil,    21,    21,
   nil,   nil,     4,   nil,    25,    21,    25,    25,   nil,    23,
   nil,   nil,    46,    25,   nil,    48,    21,    22,   nil,    21,
    21,   nil,     4,     4,    23,    24,   nil,    25,    25,   nil,
   nil,   nil,    22,    21,   nil,    46,   nil,   nil,    48,   nil,
    24,    25,     2,   nil,    21,    46,   nil,    28,    48,    28,
     2,    28,    25,   nil,   nil,   nil,   nil,   nil,   nil,    26,
    26,   nil,    21,    28,    27,   nil,    27,    27,   nil,   nil,
    25,   nil,   nil,    27,   nil,   nil,   nil,    27,   nil,    28,
    26,    26,   nil,    28,   nil,   nil,   nil,    27,    27,   nil,
   nil,   nil,   nil,   nil,    26,   nil,   nil,   nil,   nil,   nil,
   nil,    27,   nil,    21,   nil,   nil,    28,   nil,   nil,   nil,
   nil,    25,    27,   nil,   nil,   nil,    28,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    25,   nil,    46,    46,
    27,    48,    48,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    46,   nil,   nil,    48,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,
    28,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    27,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    46,   nil,   nil,    48,    28,
    28,   nil,   nil,   nil,   nil,   nil,    46,   nil,   nil,    48,
    46,   nil,   nil,    48,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,   nil,   nil,
   nil,    28 ]

racc_goto_pointer = [
   nil,    16,     0,    13,   -30,    30,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   -10,   nil,   nil,
   -81,    81,    -5,   -13,     3,    89,   142,   149,   251,    -4,
    -4,   -87,   -41,   -63,    -8,   nil,   nil,    25,   -11,  -137,
   nil,   nil,   nil,  -133,   -23,   nil,   180,   -36,   183,   -27,
   nil,   -29,   -55,  -130,    10,  -209,  -110,  -136,   nil,  -130,
   -96,  -102,  -141,    21,   -43,    11,    39,    10,    -4,   -92,
   -91,  -139,   -47 ]

racc_goto_default = [
   nil,   nil,   nil,    97,     8,    10,    13,    15,    17,    19,
    22,    24,    27,    30,     3,     7,     9,   nil,    59,    61,
    63,    79,    80,    81,    83,    71,    74,    76,    12,    14,
   nil,   nil,   nil,   nil,   nil,    29,     2,   nil,   nil,    99,
   155,   101,   102,   nil,   nil,   131,    69,    72,   nil,   121,
   114,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   199,    49,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :LESSEQUAL => 14,
 :NOTEQUAL => 15,
 :DOT => 16,
 :COLON => 17,
 :TYPE => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51 }

racc_use_result_var = true

racc_nt_base = 52

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'TYPE',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'anyparams',
'at',
'collectname',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'rvalue',
'param',
'addparam',
'anyparam',
'rvalues',
'comma',
'iftest',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 30
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 46
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'grammar.ra', 68
  def _reduce_17( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 74
  def _reduce_18( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_19( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_23( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_31( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 115
  def _reduce_33( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 136
  def _reduce_34( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInst)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInst)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::ResourceDef,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 139
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 142
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 147
  def _reduce_37( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 174
  def _reduce_38( val, _values, result )
    type = val[0]

    if type == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect without storeconfigs being set"
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 175
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 176
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 199
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect exported resources without storeconfigs being set"
    end
    result = ast AST::Collection, args
   result
  end
.,.,

 # reduce 42 omitted

 # reduce 43 omitted

module_eval <<'.,.,', 'grammar.ra', 210
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 218
  def _reduce_45( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 46 omitted

 # reduce 47 omitted

module_eval <<'.,.,', 'grammar.ra', 226
  def _reduce_48( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 49 omitted

module_eval <<'.,.,', 'grammar.ra', 232
  def _reduce_50( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 51 omitted

 # reduce 52 omitted

module_eval <<'.,.,', 'grammar.ra', 240
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 245
  def _reduce_54( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 55 omitted

 # reduce 56 omitted

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_57( val, _values, result )
    result = ast AST::ResourceInst, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 58 omitted

module_eval <<'.,.,', 'grammar.ra', 262
  def _reduce_59( val, _values, result )
    if val[0].instance_of?(AST::ResourceInst)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 60 omitted

 # reduce 61 omitted

module_eval <<'.,.,', 'grammar.ra', 269
  def _reduce_62( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 273
  def _reduce_63( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 277
  def _reduce_64( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

 # reduce 70 omitted

module_eval <<'.,.,', 'grammar.ra', 293
  def _reduce_71( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 298
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 298
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 307
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 311
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 316
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 333
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 342
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 369
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 374
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 378
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 380
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 384
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 389
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 404
  def _reduce_107( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 108 omitted

module_eval <<'.,.,', 'grammar.ra', 409
  def _reduce_109( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 110 omitted

module_eval <<'.,.,', 'grammar.ra', 421
  def _reduce_111( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 431
  def _reduce_113( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 435
  def _reduce_114( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 440
  def _reduce_115( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 116 omitted

module_eval <<'.,.,', 'grammar.ra', 450
  def _reduce_117( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 454
  def _reduce_118( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 119 omitted

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_120( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 121 omitted

module_eval <<'.,.,', 'grammar.ra', 467
  def _reduce_122( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 471
  def _reduce_123( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 124 omitted

 # reduce 125 omitted

 # reduce 126 omitted

 # reduce 127 omitted

 # reduce 128 omitted

 # reduce 129 omitted

 # reduce 130 omitted

module_eval <<'.,.,', 'grammar.ra', 482
  def _reduce_131( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 484
  def _reduce_132( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 488
  def _reduce_133( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 496
  def _reduce_134( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 506
  def _reduce_135( val, _values, result )
    interp.newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 510
  def _reduce_136( val, _values, result )
    interp.newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 518
  def _reduce_137( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 523
  def _reduce_138( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 528
  def _reduce_139( val, _values, result )
    interp.newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 531
  def _reduce_140( val, _values, result )
    interp.newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 141 omitted

 # reduce 142 omitted

 # reduce 143 omitted

module_eval <<'.,.,', 'grammar.ra', 543
  def _reduce_144( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

module_eval <<'.,.,', 'grammar.ra', 552
  def _reduce_149( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 556
  def _reduce_150( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 151 omitted

module_eval <<'.,.,', 'grammar.ra', 561
  def _reduce_152( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 565
  def _reduce_153( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 154 omitted

module_eval <<'.,.,', 'grammar.ra', 572
  def _reduce_155( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 577
  def _reduce_156( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 581
  def _reduce_157( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 583
  def _reduce_158( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 585
  def _reduce_159( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 160 omitted

module_eval <<'.,.,', 'grammar.ra', 590
  def _reduce_161( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 595
  def _reduce_163( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 164 omitted

 # reduce 165 omitted

module_eval <<'.,.,', 'grammar.ra', 601
  def _reduce_166( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 609
  def _reduce_167( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 611
  def _reduce_168( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 169 omitted

 # reduce 170 omitted

 # reduce 171 omitted

module_eval <<'.,.,', 'grammar.ra', 616
  def _reduce_172( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
