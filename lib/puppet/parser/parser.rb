#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end

    class ImportError < Racc::ParseError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id39abb47ee4', 'grammar.ra', 640
require 'puppet/parser/functions'

attr_reader :file, :interp
attr_accessor :files

# Add context to a message; useful for error messages and such.
def addcontext(message, obj = nil)
    obj ||= @lexer

    message += " on line %s" % obj.line
    if file = obj.file
        message += " in file %s" % file
    end

    return message
end

# Create an AST array out of all of the args
def aryfy(*args)
    if args[0].instance_of?(AST::ASTArray)
        result = args.shift
        args.each { |arg|
            result.push arg
        }
    else
        result = ast AST::ASTArray, :children => args
    end

    return result
end

# Create an AST object, and automatically add the file and line information if
# available.
def ast(klass, hash = nil)
    hash ||= {}
    unless hash.include?(:line)
        hash[:line] = @lexer.line
    end

    unless hash.include?(:file)
        if file = @lexer.file
            hash[:file] = file
        end
    end

    return klass.new(hash)
end

# Raise a Parse error.
def error(message)
    if brace = @lexer.expected
        message += "; expected '%s'"
    end
    except = Puppet::ParseError.new(message)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

def file=(file)
    unless FileTest.exists?(file)
        unless file =~ /\.pp$/
            file = file + ".pp"
        end
        unless FileTest.exists?(file)
            raise Puppet::Error, "Could not find file %s" % file
        end
    end
    if @files.detect { |f| f.file == file }
        raise Puppet::ImportError.new("Import loop detected")
    else
        @files << Puppet::Util::LoadedFile.new(file)
        @lexer.file = file
    end
end

# Import our files.
def import(file)
    if Puppet[:ignoreimport]
        return AST::ASTArray.new(:children => [])
    end
    # use a path relative to the file doing the importing
    if @lexer.file
        dir = @lexer.file.sub(%r{[^/]+$},'').sub(/\/$/, '')
    else
        dir = "."
    end
    if dir == ""
        dir = "."
    end
    result = ast AST::ASTArray

    # We can't interpolate at this point since we don't have any
    # scopes set up. Warn the user if they use a variable reference
    pat = file
    if pat.index("$")
        Puppet.warning(
           "The import of #{pat} contains a variable reference;" +
           " variables are not interpolated for imports " +
           "in file #{@lexer.file} at line #{@lexer.line}"
        )
    end
    files = Puppet::Module::find_manifests(pat, dir)
    if files.size == 0
        raise Puppet::ImportError.new("No file(s) found for import " +
                                      "of '#{pat}'")
    end

    files.collect { |file|
        parser = Puppet::Parser::Parser.new(interp)
        parser.files = self.files
        Puppet.debug("importing '%s'" % file)

        unless file =~ /^#{File::SEPARATOR}/
            file = File.join(dir, file)
        end
        begin
            parser.file = file
        rescue Puppet::ImportError
            Puppet.warning(
                "Importing %s would result in an import loop" %
                    File.join(dir, file)
            )
            next
        end

        # This will normally add code to the 'main' class.
        parser.parse
    }
end

def initialize(interpreter)
    @interp = interpreter
    initvars()
end

# Initialize or reset all of our variables.
def initvars
    @lexer = Puppet::Parser::Lexer.new()
    @files = []
end

# The fully qualifed name, with the full namespace.
def classname(name)
    [@lexer.namespace, name].join("::").sub(/^::/, '')
end

def on_error(token,value,stack)
    #on '%s' at '%s' in\n'%s'" % [token,value,stack]
    #error = "line %s: parse error after '%s'" %
    #    [@lexer.line,@lexer.last]
    error = "Syntax error at '%s'" % [value]

    if brace = @lexer.expected
        error += "; expected '%s'" % brace
    end

    except = Puppet::ParseError.new(error)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

# how should I do error handling here?
def parse(string = nil)
    if string
        self.string = string
    end
    begin
        main = yyparse(@lexer,:scan)
    rescue Racc::ParseError => except
        error = Puppet::ParseError.new(except)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    rescue Puppet::ParseError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::Error => except
        # and this is a framework error
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::DevError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue => except
        error = Puppet::DevError.new(except.message)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    end
    if main
        # Store the results as the top-level class.
        interp.newclass("", :code => main)
        return main
    end
ensure
    @lexer.clear
end

# See if any of the files have changed.
def reparse?
    if file = @files.detect { |file| file.changed?  }
        return file.stamp
    else
        return false
    end
end

def string=(string)
    @lexer.string = string
end

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id39abb47ee4

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 53, :_reduce_1,
 1, 53, :_reduce_none,
 1, 54, :_reduce_none,
 2, 54, :_reduce_4,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 4, 64, :_reduce_17,
 3, 64, :_reduce_18,
 2, 64, :_reduce_19,
 1, 69, :_reduce_none,
 1, 69, :_reduce_none,
 1, 70, :_reduce_none,
 3, 70, :_reduce_23,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_31,
 1, 71, :_reduce_none,
 3, 71, :_reduce_33,
 5, 57, :_reduce_34,
 5, 57, :_reduce_35,
 5, 57, :_reduce_36,
 5, 68, :_reduce_37,
 2, 58, :_reduce_38,
 1, 87, :_reduce_39,
 2, 87, :_reduce_40,
 2, 59, :_reduce_41,
 1, 88, :_reduce_none,
 1, 88, :_reduce_none,
 3, 89, :_reduce_44,
 3, 89, :_reduce_45,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 3, 90, :_reduce_48,
 1, 91, :_reduce_none,
 3, 91, :_reduce_50,
 1, 92, :_reduce_none,
 1, 92, :_reduce_none,
 3, 93, :_reduce_53,
 3, 93, :_reduce_54,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 4, 96, :_reduce_57,
 1, 82, :_reduce_none,
 3, 82, :_reduce_59,
 0, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 98, :_reduce_62,
 1, 73, :_reduce_63,
 1, 75, :_reduce_64,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 3, 60, :_reduce_71,
 0, 84, :_reduce_72,
 1, 84, :_reduce_73,
 3, 84, :_reduce_74,
 3, 101, :_reduce_75,
 3, 102, :_reduce_76,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 0, 86, :_reduce_79,
 1, 86, :_reduce_80,
 3, 86, :_reduce_81,
 1, 104, :_reduce_none,
 3, 104, :_reduce_83,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 4, 77, :_reduce_100,
 3, 77, :_reduce_101,
 1, 79, :_reduce_102,
 1, 79, :_reduce_103,
 1, 76, :_reduce_104,
 4, 80, :_reduce_105,
 4, 80, :_reduce_106,
 6, 62, :_reduce_107,
 0, 108, :_reduce_none,
 4, 108, :_reduce_109,
 1, 107, :_reduce_none,
 5, 61, :_reduce_111,
 1, 109, :_reduce_none,
 2, 109, :_reduce_113,
 5, 110, :_reduce_114,
 4, 110, :_reduce_115,
 1, 111, :_reduce_none,
 3, 111, :_reduce_117,
 3, 78, :_reduce_118,
 1, 113, :_reduce_none,
 4, 113, :_reduce_120,
 1, 115, :_reduce_none,
 3, 115, :_reduce_122,
 3, 114, :_reduce_123,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_131,
 1, 116, :_reduce_132,
 3, 116, :_reduce_133,
 2, 63, :_reduce_134,
 6, 65, :_reduce_135,
 5, 65, :_reduce_136,
 6, 66, :_reduce_137,
 5, 66, :_reduce_138,
 6, 67, :_reduce_139,
 5, 67, :_reduce_140,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 119, :_reduce_none,
 3, 119, :_reduce_146,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 0, 55, :_reduce_151,
 0, 122, :_reduce_152,
 1, 117, :_reduce_none,
 3, 117, :_reduce_154,
 3, 117, :_reduce_155,
 1, 123, :_reduce_none,
 3, 123, :_reduce_157,
 3, 124, :_reduce_158,
 1, 124, :_reduce_159,
 3, 124, :_reduce_160,
 1, 124, :_reduce_161,
 1, 120, :_reduce_none,
 2, 120, :_reduce_163,
 1, 118, :_reduce_none,
 2, 118, :_reduce_165,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 74, :_reduce_168,
 3, 99, :_reduce_169,
 2, 99, :_reduce_170,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 0, 85, :_reduce_none,
 1, 85, :_reduce_174 ]

racc_reduce_n = 175

racc_shift_n = 278

racc_action_table = [
    77,    56,    60,   214,   171,   159,    77,    56,    60,  -141,
   195,   161,   208,    88,   251,  -126,    66,   212,    41,    42,
   160,  -125,   128,    36,    77,    56,    60,   250,   156,   158,
   194,    48,   113,   156,   158,    59,    62,    48,     9,    68,
   128,    59,   184,   178,     9,    68,   170,    37,    64,    77,
    56,    60,   143,    43,    64,    48,    44,   112,   171,    59,
   125,    54,   179,    68,  -126,    66,    98,    77,    56,    60,
   189,   140,    64,    77,    56,    60,  -128,    48,    41,    42,
    48,   140,   102,    66,    59,    62,   162,    95,    68,    66,
   156,   158,    39,     9,    77,    56,    60,    64,    48,     5,
   208,  -129,    59,    62,    48,   212,    68,    39,    59,    62,
    66,     9,    68,    43,     5,    64,    44,     9,   196,    39,
  -125,    64,   198,   199,   244,    48,     5,    41,    42,    59,
    62,   243,    98,    68,   177,    54,    56,    60,     9,  -143,
    56,    60,    64,    48,  -127,    77,    56,    60,   102,    56,
    60,    66,    98,    98,  -124,    50,    77,    56,    60,   198,
   261,    66,    43,    48,    48,    44,    48,   205,   102,   102,
    59,    62,    66,   171,    68,   177,    48,  -124,    51,     9,
    59,    62,   174,    64,    68,   213,  -126,    48,   173,     9,
  -141,    59,    62,    64,   141,    68,    77,    56,    60,  -124,
     9,   139,    39,  -126,    64,   165,    77,    56,    60,     5,
   137,   230,    66,   118,  -128,   233,   234,    77,    56,    60,
   148,   148,    66,   237,   140,   118,   169,    48,    54,   109,
   145,    59,    62,    66,  -127,    68,   166,    48,   247,   248,
     9,    59,    62,   249,    64,    68,  -125,   252,    48,  -129,
     9,  -127,    59,    62,    64,  -124,    68,    77,    56,    60,
  -127,     9,  -125,  -129,    93,    64,    92,    77,    56,    60,
   177,    88,   154,    66,    56,    60,   262,   264,   151,   150,
   148,    87,    47,    66,    56,    60,    46,   271,    48,   128,
  -174,   272,    59,    62,  -130,   146,    68,    34,    48,   128,
   240,     9,    59,    62,    48,    64,    68,   nil,    59,   184,
   nil,     9,    68,   nil,    48,    64,   nil,   nil,    59,   184,
   nil,    64,    68,    56,    60,    56,    60,   nil,   nil,   nil,
   nil,    64,   nil,   nil,   nil,   nil,   nil,   nil,   128,   nil,
   128,    56,    60,   nil,   nil,   246,   nil,    56,    60,   nil,
   nil,   nil,   nil,    48,   nil,    48,   128,    59,   184,    59,
   184,    68,    66,    68,   nil,   nil,   nil,   191,   nil,   nil,
    64,    48,    64,   nil,   nil,    59,   184,    48,   nil,    68,
   nil,    59,    62,    56,    60,    68,   nil,   nil,    64,    51,
     9,   nil,   nil,   nil,    64,   nil,   nil,   nil,    66,    56,
    60,    56,    60,   135,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    48,   128,   nil,   128,    59,    62,   nil,
   nil,    68,   nil,   nil,   nil,    51,     9,   nil,   nil,    48,
    64,    48,   nil,    59,   184,    59,   184,    68,   nil,    68,
   nil,    51,    56,    60,   nil,   185,    64,   nil,    64,    56,
    60,   nil,   nil,   nil,   nil,   nil,   nil,   128,   nil,   nil,
   nil,   nil,   nil,   nil,   128,   nil,   nil,   nil,   nil,   nil,
   nil,   277,    48,   nil,   nil,   nil,    59,   184,   nil,    48,
    68,   nil,    23,    59,   184,   nil,   nil,    68,   nil,    64,
   242,   nil,    19,   nil,    25,    27,    64,     1,     6,   nil,
    12,    23,    17,   nil,    21,   nil,    28,   nil,   nil,     5,
     9,    19,   nil,    25,    27,   273,     1,     6,   nil,    12,
   nil,    17,   nil,    21,   nil,    28,    23,   nil,     5,     9,
   nil,   nil,   nil,   nil,   226,   nil,    19,   nil,    25,    27,
   nil,     1,     6,   nil,    12,    23,    17,   nil,    21,   nil,
    28,   nil,   nil,     5,     9,    19,   nil,    25,    27,   224,
     1,     6,   nil,    12,   nil,    17,   nil,    21,   nil,    28,
    23,   nil,     5,     9,   nil,   nil,   nil,   nil,   253,   nil,
    19,   nil,    25,    27,   nil,     1,     6,   nil,    12,    23,
    17,   nil,    21,   nil,    28,   nil,   nil,     5,     9,    19,
   nil,    25,    27,   255,     1,     6,   nil,    12,   nil,    17,
   nil,    21,   nil,    28,    23,   nil,     5,     9,   nil,   nil,
   nil,   nil,   276,   nil,    19,   nil,    25,    27,   nil,     1,
     6,   nil,    12,    23,    17,   nil,    21,   nil,    28,   nil,
   nil,     5,     9,    19,   nil,    25,    27,   269,     1,     6,
   nil,    12,   nil,    17,   nil,    21,   nil,    28,    23,   nil,
     5,     9,   nil,   nil,   nil,   nil,   256,   nil,    19,   nil,
    25,    27,   nil,     1,     6,   nil,    12,    23,    17,   nil,
    21,   nil,    28,   nil,   nil,     5,     9,    19,   nil,    25,
    27,   nil,     1,     6,   nil,    12,    23,    17,   nil,    21,
   nil,    28,   nil,   nil,     5,     9,    19,   nil,    25,    27,
   nil,     1,     6,   nil,    12,    23,    17,   nil,    21,   nil,
    28,   nil,   nil,     5,     9,    19,   nil,    25,    27,   nil,
     1,     6,   nil,    12,    23,    17,   nil,    21,   nil,    28,
   nil,   nil,     5,     9,    19,   nil,    25,    27,   nil,     1,
     6,   nil,    12,    23,    17,   nil,    21,   nil,    28,   nil,
   nil,     5,     9,    19,   nil,    25,    27,   nil,     1,     6,
   nil,    12,   nil,    17,   nil,    21,   nil,    28,   nil,   nil,
     5,     9 ]

racc_action_check = [
    87,    87,    87,   155,   118,   100,   174,   174,   174,    23,
   141,   104,   151,    23,   210,   217,    87,   151,   113,   113,
   104,   132,   174,     2,    47,    47,    47,   210,   155,   155,
   141,    87,    45,   100,   100,    87,    87,   174,   141,    87,
    47,   174,   174,   133,    87,   174,   118,     2,    87,    77,
    77,    77,    77,   113,   174,    47,   113,    45,   125,    47,
    47,    62,   136,    47,    78,    77,   157,   171,   171,   171,
   138,   125,    47,   197,   197,   197,    73,   157,    12,    12,
    77,    62,   157,   171,    77,    77,   107,    31,    77,   197,
   107,   107,    27,    77,    54,    54,    54,    77,   171,    27,
   251,    72,   171,   171,   197,   251,   171,    31,   197,   197,
    54,   171,   197,    12,    31,   171,    12,   197,   144,     6,
    70,   197,   144,   144,   202,    54,     6,   112,   112,    54,
    54,   202,    98,    54,   129,    17,    17,    17,    54,    17,
   150,   150,    54,    98,    69,    19,    19,    19,    98,    25,
    25,    17,    37,    36,    67,    17,    21,    21,    21,   239,
   239,    19,   112,    37,    36,   112,    17,   147,    37,    36,
    17,    17,    21,   148,    17,   149,    19,   127,    17,    17,
    19,    19,   126,    17,    19,   153,   124,    21,   119,    19,
    66,    21,    21,    19,    63,    21,   252,   252,   252,    80,
    21,    61,   109,    55,    21,   109,   248,   248,   248,   109,
    53,   172,   252,   173,    49,   175,   176,    34,    34,    34,
   177,   178,   248,   181,   184,    46,   114,   252,   194,    38,
    81,   252,   252,    34,    82,   252,   110,   248,   206,   208,
   252,   248,   248,   209,   252,   248,    83,   212,    34,    85,
   248,   130,    34,    34,   248,   218,    34,   170,   170,   170,
   220,    34,   221,   222,    30,    34,    28,   237,   237,   237,
   236,    95,    93,   170,   160,   160,   242,   243,    91,    90,
    88,    22,    15,   237,   161,   161,    13,   260,   170,   160,
   261,   262,   170,   170,    84,    86,   170,     1,   237,   161,
   192,   170,   237,   237,   160,   170,   237,   nil,   160,   160,
   nil,   237,   160,   nil,   161,   237,   nil,   nil,   161,   161,
   nil,   160,   161,   146,   146,   244,   244,   nil,   nil,   nil,
   nil,   161,   nil,   nil,   nil,   nil,   nil,   nil,   146,   nil,
   244,   204,   204,   nil,   nil,   204,   nil,   140,   140,   nil,
   nil,   nil,   nil,   146,   nil,   244,   204,   146,   146,   244,
   244,   146,   140,   244,   nil,   nil,   nil,   140,   nil,   nil,
   146,   204,   244,   nil,   nil,   204,   204,   140,   nil,   204,
   nil,   140,   140,    50,    50,   140,   nil,   nil,   204,   140,
   140,   nil,   nil,   nil,   140,   nil,   nil,   nil,    50,   139,
   139,   185,   185,    50,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    50,   139,   nil,   185,    50,    50,   nil,
   nil,    50,   nil,   nil,   nil,    50,    50,   nil,   nil,   139,
    50,   185,   nil,   139,   139,   185,   185,   139,   nil,   185,
   nil,   139,   137,   137,   nil,   137,   139,   nil,   185,   259,
   259,   nil,   nil,   nil,   nil,   nil,   nil,   137,   nil,   nil,
   nil,   nil,   nil,   nil,   259,   nil,   nil,   nil,   nil,   nil,
   nil,   275,   137,   nil,   nil,   nil,   137,   137,   nil,   259,
   137,   nil,   275,   259,   259,   nil,   nil,   259,   nil,   137,
   200,   nil,   275,   nil,   275,   275,   259,   275,   275,   nil,
   275,   200,   275,   nil,   275,   nil,   275,   nil,   nil,   275,
   275,   200,   nil,   200,   200,   264,   200,   200,   nil,   200,
   nil,   200,   nil,   200,   nil,   200,   264,   nil,   200,   200,
   nil,   nil,   nil,   nil,   169,   nil,   264,   nil,   264,   264,
   nil,   264,   264,   nil,   264,   169,   264,   nil,   264,   nil,
   264,   nil,   nil,   264,   264,   169,   nil,   169,   169,   166,
   169,   169,   nil,   169,   nil,   169,   nil,   169,   nil,   169,
   166,   nil,   169,   169,   nil,   nil,   nil,   nil,   213,   nil,
   166,   nil,   166,   166,   nil,   166,   166,   nil,   166,   213,
   166,   nil,   166,   nil,   166,   nil,   nil,   166,   166,   213,
   nil,   213,   213,   225,   213,   213,   nil,   213,   nil,   213,
   nil,   213,   nil,   213,   225,   nil,   213,   213,   nil,   nil,
   nil,   nil,   274,   nil,   225,   nil,   225,   225,   nil,   225,
   225,   nil,   225,   274,   225,   nil,   225,   nil,   225,   nil,
   nil,   225,   225,   274,   nil,   274,   274,   254,   274,   274,
   nil,   274,   nil,   274,   nil,   274,   nil,   274,   254,   nil,
   274,   274,   nil,   nil,   nil,   nil,   227,   nil,   254,   nil,
   254,   254,   nil,   254,   254,   nil,   254,   227,   254,   nil,
   254,   nil,   254,   nil,   nil,   254,   254,   227,   nil,   227,
   227,   nil,   227,   227,   nil,   227,   272,   227,   nil,   227,
   nil,   227,   nil,   nil,   227,   227,   272,   nil,   272,   272,
   nil,   272,   272,   nil,   272,   145,   272,   nil,   272,   nil,
   272,   nil,   nil,   272,   272,   145,   nil,   145,   145,   nil,
   145,   145,   nil,   145,    33,   145,   nil,   145,   nil,   145,
   nil,   nil,   145,   145,    33,   nil,    33,    33,   nil,    33,
    33,   nil,    33,     0,    33,   nil,    33,   nil,    33,   nil,
   nil,    33,    33,     0,   nil,     0,     0,   nil,     0,     0,
   nil,     0,   nil,     0,   nil,     0,   nil,     0,   nil,   nil,
     0,     0 ]

racc_action_pointer = [
   735,   284,     4,   nil,   nil,   nil,    81,   nil,   nil,   nil,
   nil,   nil,    75,   280,   nil,   276,   nil,   133,   nil,   143,
   nil,   154,   279,     7,   nil,   146,   nil,    54,   224,   nil,
   264,    69,   nil,   716,   215,   nil,   131,   130,   194,   nil,
   nil,   nil,   nil,   nil,   nil,    22,   187,    22,   nil,   193,
   380,   nil,   nil,   189,    92,   182,   nil,   nil,   nil,   nil,
   nil,   191,    59,   184,   nil,   nil,   188,   133,   nil,   123,
    99,   nil,    80,    55,   nil,   nil,   nil,    47,    43,   nil,
   178,   224,   213,   225,   273,   228,   289,    -2,   242,   nil,
   269,   256,   nil,   272,   nil,   265,   nil,   nil,   110,   nil,
   -15,   nil,   nil,   nil,    -4,   nil,   nil,    42,   nil,   164,
   230,   nil,   124,    15,   220,   nil,   nil,   nil,    -5,   178,
   nil,   nil,   nil,   nil,   165,    49,   143,   156,   nil,   124,
   230,   nil,     0,    26,   nil,   nil,    39,   439,    65,   396,
   344,    -8,   nil,   nil,   113,   697,   320,   162,   164,   165,
   137,   -21,   nil,   179,   nil,   -20,   nil,    44,   nil,   nil,
   271,   281,   nil,   nil,   nil,   nil,   552,   nil,   nil,   527,
   255,    65,   204,   175,     4,   208,   209,   182,   183,   nil,
   nil,   214,   nil,   nil,   202,   398,   nil,   nil,   nil,   nil,
   nil,   nil,   277,   nil,   226,   nil,   nil,    71,   nil,   nil,
   483,   nil,   114,   nil,   338,   nil,   231,   nil,   226,   220,
     4,   nil,   234,   571,   nil,   nil,   nil,    -6,   234,   nil,
   239,   241,   242,   nil,   nil,   596,   nil,   659,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   260,   265,   nil,   150,
   nil,   nil,   247,   271,   322,   nil,   nil,   nil,   204,   nil,
   nil,    67,   194,   nil,   640,   nil,   nil,   nil,   nil,   446,
   280,   283,   285,   nil,   508,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   678,   nil,   615,   464,   nil,   nil ]

racc_action_default = [
  -151,  -175,  -175,   -14,    -2,  -144,  -175,   -15,    -3,  -142,
   -16,    -5,  -175,  -175,    -6,  -175,    -7,   -43,    -8,  -175,
    -9,  -175,  -175,   -42,   -10,  -175,   -11,  -175,   -39,   -12,
  -175,  -175,   -13,    -1,  -175,   -41,  -151,  -151,  -151,  -143,
  -145,  -149,  -148,  -147,  -150,  -151,   -79,   -72,  -168,   -28,
  -175,   -31,   -29,  -175,  -175,   -30,  -102,   -32,   -19,  -104,
  -103,   -20,   -63,   -21,   -62,   -22,   -64,   -24,  -131,   -25,
   -26,  -130,   -27,   -98,   -96,  -110,   -94,  -175,   -90,   -97,
   -91,  -175,   -95,   -92,   -99,   -93,  -175,  -175,   -72,  -132,
  -134,  -151,   -40,  -175,   -38,  -175,    -4,   -71,  -151,   -46,
  -175,   -47,   -63,   -49,  -175,   -56,   -55,  -175,  -164,  -175,
  -175,  -162,  -175,  -175,  -175,   -77,   -78,   -80,  -175,  -173,
  -128,   -70,   -68,   -73,   -65,   -63,   -60,   -66,   -64,  -173,
   -69,   -58,   -67,  -175,  -129,   -18,  -175,  -175,  -175,  -175,
  -175,  -175,   -82,  -170,  -175,  -175,  -175,  -175,  -175,  -173,
  -175,  -152,  -153,  -175,   278,  -175,   -52,  -175,   -51,   -45,
  -175,  -175,   -44,  -166,  -165,  -167,  -175,  -163,  -146,  -175,
  -175,  -175,  -175,  -174,   -61,  -175,  -175,  -174,   -72,   -17,
  -126,  -175,  -118,  -119,   -63,  -175,  -124,  -127,  -125,  -105,
   -23,  -101,  -175,   -33,  -175,  -141,  -169,  -175,  -171,  -172,
  -175,  -112,  -175,  -116,  -175,  -106,  -175,  -133,  -161,  -175,
  -175,  -156,  -159,  -175,   -50,   -48,   -88,   -84,   -85,   -53,
   -89,   -86,   -87,   -54,  -138,  -175,  -140,  -175,   -76,   -75,
   -37,   -81,   -59,   -34,   -35,   -74,  -173,  -175,  -121,  -173,
  -100,   -83,  -108,  -175,  -175,  -113,  -111,   -36,  -175,  -154,
  -155,  -175,  -175,  -136,  -175,  -137,  -139,   -57,  -123,  -175,
  -175,  -172,  -175,  -107,  -175,  -117,  -160,  -157,  -158,  -135,
  -122,  -120,  -175,  -115,  -175,  -175,  -114,  -109 ]

racc_goto_table = [
    33,    96,   129,    69,   115,    38,    84,    70,    84,    40,
   197,    58,   211,   121,    30,   201,     4,   117,   215,    72,
   144,    84,   106,   106,    35,   131,    91,   100,   107,   219,
   223,   183,    81,   130,   263,   204,    69,   132,   119,   175,
    70,    84,   182,   149,   136,   126,   239,    90,   153,   134,
   110,    45,    72,    75,   108,    86,   114,    67,    57,   190,
    79,   111,    79,   209,    84,   210,    94,   164,    97,   nil,
   nil,   nil,   172,   245,    84,    79,   105,   105,   nil,   238,
   nil,   nil,   176,   nil,   106,   nil,   nil,   127,   138,   155,
    67,    57,   nil,   nil,   nil,    79,   nil,   nil,   nil,   nil,
   nil,   nil,   206,   nil,   nil,   259,   nil,   152,   163,   167,
   168,   142,   267,   nil,   nil,   nil,   nil,   nil,    79,   nil,
   nil,   147,   nil,   187,   nil,    69,    69,   188,    79,    70,
    70,   115,   187,   236,   192,   235,   188,    49,   105,   134,
   121,    72,    72,   106,   231,   200,   220,   220,   134,   nil,
   221,   221,   232,   270,   nil,   nil,   nil,    84,    84,   nil,
   130,   nil,   222,   222,   132,   nil,   225,   120,    96,   227,
    49,   187,   nil,   nil,   nil,   188,   134,   186,   nil,    67,
    67,    57,   193,   nil,    84,   nil,   186,   134,    55,   257,
   187,   nil,   260,    96,   188,    96,    89,   105,   nil,   nil,
   218,   218,   nil,    52,   228,   229,   134,   181,   nil,   nil,
   nil,    79,    79,   254,   127,   nil,   203,   nil,   124,   nil,
   nil,    55,    96,   nil,    84,   186,   nil,   nil,   nil,   nil,
   187,   241,   nil,   122,   188,    84,    52,   nil,    79,    84,
   nil,   nil,    96,    96,   186,   187,   134,   nil,   nil,   188,
   nil,   nil,   nil,   nil,   nil,   181,   nil,   120,   nil,    49,
    49,   134,   nil,   nil,   274,   nil,   120,   nil,   nil,   nil,
   nil,   258,   275,   nil,   203,   nil,   nil,   nil,    79,   nil,
   120,   120,   266,   nil,   186,   nil,   268,   nil,   nil,    79,
   nil,   nil,   nil,    79,   120,   nil,   nil,   nil,   nil,   186,
   nil,   nil,   nil,   nil,   nil,   120,   nil,   nil,   180,   nil,
    55,    55,   nil,   nil,   265,   nil,   nil,   180,   nil,   nil,
   nil,   207,   nil,   nil,   120,    52,    52,   nil,   nil,   181,
   nil,   217,   217,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   124,   216,   216,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   180,   nil,   nil,   nil,
   122,   nil,   nil,   nil,   120,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   180,   nil,   nil,   nil,   120,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   180,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   180 ]

racc_goto_check = [
     2,     4,    32,    22,    49,    29,    46,    23,    46,    69,
    53,    17,    72,    47,     1,    58,     3,    51,    39,    24,
    52,    46,    22,    22,    37,    44,    29,    38,    38,    43,
    43,    62,    55,    22,    56,    57,    22,    23,    34,    31,
    23,    46,    61,    32,    17,    30,    63,    64,    65,    24,
    66,    67,    24,    48,     3,    48,    68,    21,    28,    20,
    28,     3,    28,    70,    46,    71,     5,    73,    48,   nil,
   nil,   nil,    33,    58,    46,    28,    21,    21,   nil,    62,
   nil,   nil,    33,   nil,    22,   nil,   nil,    21,    48,    38,
    21,    28,   nil,   nil,   nil,    28,   nil,   nil,   nil,   nil,
   nil,   nil,    33,   nil,   nil,    53,   nil,     3,    29,    69,
    69,    48,    72,   nil,   nil,   nil,   nil,   nil,    28,   nil,
   nil,    48,   nil,    22,   nil,    22,    22,    23,    28,    23,
    23,    49,    22,    32,    17,    49,    23,    25,    21,    24,
    47,    24,    24,    22,    51,     2,    22,    22,    24,   nil,
    23,    23,    44,    62,   nil,   nil,   nil,    46,    46,   nil,
    22,   nil,    24,    24,    23,   nil,     2,    25,     4,     2,
    25,    22,   nil,   nil,   nil,    23,    24,    21,   nil,    21,
    21,    28,    28,   nil,    46,   nil,    21,    24,    27,    33,
    22,   nil,    33,     4,    23,     4,    27,    21,   nil,   nil,
    21,    21,   nil,    26,    48,    48,    24,    60,   nil,   nil,
   nil,    28,    28,     2,    21,   nil,    60,   nil,    27,   nil,
   nil,    27,     4,   nil,    46,    21,   nil,   nil,   nil,   nil,
    22,    48,   nil,    26,    23,    46,    26,   nil,    28,    46,
   nil,   nil,     4,     4,    21,    22,    24,   nil,   nil,    23,
   nil,   nil,   nil,   nil,   nil,    60,   nil,    25,   nil,    25,
    25,    24,   nil,   nil,     2,   nil,    25,   nil,   nil,   nil,
   nil,    48,     2,   nil,    60,   nil,   nil,   nil,    28,   nil,
    25,    25,    48,   nil,    21,   nil,    48,   nil,   nil,    28,
   nil,   nil,   nil,    28,    25,   nil,   nil,   nil,   nil,    21,
   nil,   nil,   nil,   nil,   nil,    25,   nil,   nil,    27,   nil,
    27,    27,   nil,   nil,    60,   nil,   nil,    27,   nil,   nil,
   nil,    27,   nil,   nil,    25,    26,    26,   nil,   nil,    60,
   nil,    27,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    27,    26,    26,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    27,   nil,   nil,   nil,
    26,   nil,   nil,   nil,    25,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    27,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    27,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    27 ]

racc_goto_pointer = [
   nil,    14,     0,    16,   -32,    35,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -6,   nil,   nil,
   -80,    40,   -14,   -10,     2,   120,   186,   171,    41,    -1,
    -2,   -87,   -45,   -47,    -8,   nil,   nil,    22,    -9,  -139,
   nil,   nil,   nil,  -131,   -22,   nil,   -13,   -34,    34,   -42,
   nil,   -29,   -57,  -134,   nil,    13,  -208,  -111,  -131,   nil,
    70,   -95,  -106,  -139,    22,   -43,    12,    39,    11,    -3,
   -88,   -86,  -139,   -42 ]

racc_goto_default = [
   nil,   nil,   nil,    99,     8,    11,    14,    16,    18,    20,
    24,    26,    29,    32,     3,     7,    10,   nil,    61,    63,
    65,    80,    82,    83,    85,    73,    76,    78,    13,    15,
   nil,   nil,   nil,   nil,   nil,    31,     2,   nil,   nil,   101,
   157,   103,   104,   nil,   nil,   133,    71,    74,   nil,   123,
   116,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   202,
    53,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :LESSEQUAL => 14,
 :NOTEQUAL => 15,
 :DOT => 16,
 :COLON => 17,
 :TYPE => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51 }

racc_use_result_var = true

racc_nt_base = 52

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'TYPE',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'anyparams',
'at',
'collectname',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'rvalue',
'param',
'addparam',
'anyparam',
'rvalues',
'comma',
'classref',
'iftest',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 30
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 46
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'grammar.ra', 68
  def _reduce_17( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 74
  def _reduce_18( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_19( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_23( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_31( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 115
  def _reduce_33( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 136
  def _reduce_34( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInst)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInst)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::ResourceDef,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 139
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 142
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 147
  def _reduce_37( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 174
  def _reduce_38( val, _values, result )
    type = val[0]

    if type == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect without storeconfigs being set"
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 175
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 176
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 199
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect exported resources without storeconfigs being set"
    end
    result = ast AST::Collection, args
   result
  end
.,.,

 # reduce 42 omitted

 # reduce 43 omitted

module_eval <<'.,.,', 'grammar.ra', 210
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 218
  def _reduce_45( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 46 omitted

 # reduce 47 omitted

module_eval <<'.,.,', 'grammar.ra', 226
  def _reduce_48( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 49 omitted

module_eval <<'.,.,', 'grammar.ra', 232
  def _reduce_50( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 51 omitted

 # reduce 52 omitted

module_eval <<'.,.,', 'grammar.ra', 240
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 245
  def _reduce_54( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 55 omitted

 # reduce 56 omitted

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_57( val, _values, result )
    result = ast AST::ResourceInst, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 58 omitted

module_eval <<'.,.,', 'grammar.ra', 262
  def _reduce_59( val, _values, result )
    if val[0].instance_of?(AST::ResourceInst)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 60 omitted

 # reduce 61 omitted

module_eval <<'.,.,', 'grammar.ra', 269
  def _reduce_62( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 273
  def _reduce_63( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 277
  def _reduce_64( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

 # reduce 70 omitted

module_eval <<'.,.,', 'grammar.ra', 293
  def _reduce_71( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 298
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 298
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 307
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 311
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 316
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 333
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 342
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 369
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 374
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 378
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 380
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 384
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 389
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 404
  def _reduce_107( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 108 omitted

module_eval <<'.,.,', 'grammar.ra', 409
  def _reduce_109( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 110 omitted

module_eval <<'.,.,', 'grammar.ra', 421
  def _reduce_111( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 431
  def _reduce_113( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 435
  def _reduce_114( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 440
  def _reduce_115( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 116 omitted

module_eval <<'.,.,', 'grammar.ra', 450
  def _reduce_117( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 454
  def _reduce_118( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 119 omitted

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_120( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 121 omitted

module_eval <<'.,.,', 'grammar.ra', 467
  def _reduce_122( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 471
  def _reduce_123( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 124 omitted

 # reduce 125 omitted

 # reduce 126 omitted

 # reduce 127 omitted

 # reduce 128 omitted

 # reduce 129 omitted

 # reduce 130 omitted

module_eval <<'.,.,', 'grammar.ra', 482
  def _reduce_131( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 484
  def _reduce_132( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 488
  def _reduce_133( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 496
  def _reduce_134( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 506
  def _reduce_135( val, _values, result )
    interp.newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 510
  def _reduce_136( val, _values, result )
    interp.newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 518
  def _reduce_137( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 523
  def _reduce_138( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 528
  def _reduce_139( val, _values, result )
    interp.newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 531
  def _reduce_140( val, _values, result )
    interp.newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 141 omitted

 # reduce 142 omitted

 # reduce 143 omitted

 # reduce 144 omitted

 # reduce 145 omitted

module_eval <<'.,.,', 'grammar.ra', 546
  def _reduce_146( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 147 omitted

 # reduce 148 omitted

 # reduce 149 omitted

 # reduce 150 omitted

module_eval <<'.,.,', 'grammar.ra', 555
  def _reduce_151( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 559
  def _reduce_152( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 153 omitted

module_eval <<'.,.,', 'grammar.ra', 564
  def _reduce_154( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 568
  def _reduce_155( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 156 omitted

module_eval <<'.,.,', 'grammar.ra', 575
  def _reduce_157( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 580
  def _reduce_158( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 584
  def _reduce_159( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 586
  def _reduce_160( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 588
  def _reduce_161( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 593
  def _reduce_163( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 164 omitted

module_eval <<'.,.,', 'grammar.ra', 598
  def _reduce_165( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 166 omitted

 # reduce 167 omitted

module_eval <<'.,.,', 'grammar.ra', 604
  def _reduce_168( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 612
  def _reduce_169( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 614
  def _reduce_170( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 171 omitted

 # reduce 172 omitted

 # reduce 173 omitted

module_eval <<'.,.,', 'grammar.ra', 619
  def _reduce_174( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
