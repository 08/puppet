#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end

    class ImportError < Racc::ParseError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..idcac66c31eb', 'grammar.ra', 630
require 'puppet/parser/functions'

attr_reader :file, :interp
attr_accessor :files

# Add context to a message; useful for error messages and such.
def addcontext(message, obj = nil)
    obj ||= @lexer

    message += " on line %s" % obj.line
    if file = obj.file
        message += " in file %s" % file
    end

    return message
end

# Create an AST array out of all of the args
def aryfy(*args)
    if args[0].instance_of?(AST::ASTArray)
        result = args.shift
        args.each { |arg|
            result.push arg
        }
    else
        result = ast AST::ASTArray, :children => args
    end

    return result
end

# Create an AST object, and automatically add the file and line information if
# available.
def ast(klass, hash = nil)
    hash ||= {}
    unless hash[:line]
        hash[:line] = @lexer.line
    end

    unless hash[:file]
        if file = @lexer.file
            hash[:file] = file
        end
    end

    return klass.new(hash)
end

# Raise a Parse error.
def error(message)
    except = Puppet::ParseError.new(message)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

def file=(file)
    unless FileTest.exists?(file)
        unless file =~ /\.pp$/
            file = file + ".pp"
        end
        unless FileTest.exists?(file)
            raise Puppet::Error, "Could not find file %s" % file
        end
    end
    if @files.detect { |f| f.file == file }
        raise Puppet::ImportError.new("Import loop detected")
    else
        @files << Puppet::LoadedFile.new(file)
        @lexer.file = file
    end
end

def initialize(interpreter)
    @interp = interpreter
    initvars()
end

# Initialize or reset all of our variables.
def initvars
    @lexer = Puppet::Parser::Lexer.new()
    @files = []
end

# The fully qualifed name, with the full namespace.
def fqname(name)
    [@lexer.namespace, name].join("::").sub(/^::/, '')
end

def on_error(token,value,stack)
    #on '%s' at '%s' in\n'%s'" % [token,value,stack]
    #error = "line %s: parse error after '%s'" %
    #    [@lexer.line,@lexer.last]
    error = "Syntax error at '%s'" % [value]

    except = Puppet::ParseError.new(error)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

# how should I do error handling here?
def parse(string = nil)
    if string
        self.string = string
    end
    begin
        main = yyparse(@lexer,:scan)
    rescue Racc::ParseError => except
        error = Puppet::ParseError.new(except)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    rescue Puppet::ParseError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::Error => except
        # and this is a framework error
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::DevError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue => except
        error = Puppet::DevError.new(except.message)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    end
    if main
        # Store the results as the top-level class.
        interp.newclass("", :code => main)
        return main
    end
ensure
    @lexer.clear
end

# See if any of the files have changed.
def reparse?
    if file = @files.detect { |file| file.changed?  }
        return file.stamp
    else
        return false
    end
end

def string=(string)
    @lexer.string = string
end

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..idcac66c31eb

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 51, :_reduce_1,
 1, 51, :_reduce_none,
 1, 52, :_reduce_none,
 2, 52, :_reduce_4,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 1, 54, :_reduce_none,
 4, 62, :_reduce_17,
 2, 62, :_reduce_18,
 1, 67, :_reduce_none,
 1, 67, :_reduce_none,
 1, 68, :_reduce_none,
 3, 68, :_reduce_22,
 1, 70, :_reduce_none,
 1, 70, :_reduce_none,
 1, 70, :_reduce_none,
 1, 69, :_reduce_none,
 3, 69, :_reduce_27,
 5, 55, :_reduce_28,
 5, 55, :_reduce_29,
 5, 55, :_reduce_30,
 5, 66, :_reduce_31,
 2, 56, :_reduce_32,
 1, 80, :_reduce_33,
 2, 80, :_reduce_34,
 2, 57, :_reduce_35,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 3, 82, :_reduce_38,
 3, 82, :_reduce_39,
 1, 83, :_reduce_none,
 1, 83, :_reduce_none,
 3, 83, :_reduce_42,
 1, 84, :_reduce_none,
 3, 84, :_reduce_44,
 1, 85, :_reduce_none,
 1, 85, :_reduce_none,
 3, 86, :_reduce_47,
 3, 86, :_reduce_48,
 1, 87, :_reduce_none,
 1, 87, :_reduce_none,
 4, 89, :_reduce_51,
 1, 76, :_reduce_none,
 3, 76, :_reduce_53,
 0, 77, :_reduce_none,
 1, 77, :_reduce_none,
 1, 71, :_reduce_56,
 1, 91, :_reduce_57,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 3, 58, :_reduce_64,
 0, 78, :_reduce_65,
 1, 78, :_reduce_66,
 3, 78, :_reduce_67,
 3, 95, :_reduce_68,
 1, 96, :_reduce_none,
 3, 96, :_reduce_70,
 1, 88, :_reduce_none,
 1, 88, :_reduce_none,
 1, 88, :_reduce_none,
 1, 88, :_reduce_none,
 1, 88, :_reduce_none,
 1, 88, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 4, 99, :_reduce_86,
 1, 73, :_reduce_87,
 1, 73, :_reduce_88,
 1, 98, :_reduce_89,
 4, 74, :_reduce_90,
 4, 74, :_reduce_91,
 6, 60, :_reduce_92,
 0, 101, :_reduce_none,
 4, 101, :_reduce_94,
 1, 100, :_reduce_none,
 5, 59, :_reduce_96,
 1, 102, :_reduce_none,
 2, 102, :_reduce_98,
 5, 103, :_reduce_99,
 4, 103, :_reduce_100,
 1, 104, :_reduce_none,
 3, 104, :_reduce_102,
 3, 92, :_reduce_103,
 1, 106, :_reduce_none,
 3, 106, :_reduce_105,
 1, 108, :_reduce_none,
 3, 108, :_reduce_107,
 3, 107, :_reduce_108,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 1, 105, :_reduce_115,
 2, 61, :_reduce_116,
 6, 63, :_reduce_117,
 5, 63, :_reduce_118,
 6, 64, :_reduce_119,
 5, 64, :_reduce_120,
 6, 65, :_reduce_121,
 5, 65, :_reduce_122,
 1, 75, :_reduce_none,
 1, 75, :_reduce_none,
 1, 111, :_reduce_none,
 3, 111, :_reduce_126,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 1, 113, :_reduce_none,
 0, 53, :_reduce_130,
 0, 114, :_reduce_131,
 1, 109, :_reduce_none,
 3, 109, :_reduce_133,
 3, 109, :_reduce_134,
 1, 115, :_reduce_none,
 3, 115, :_reduce_136,
 3, 116, :_reduce_137,
 1, 116, :_reduce_138,
 3, 116, :_reduce_139,
 1, 116, :_reduce_140,
 1, 112, :_reduce_none,
 2, 112, :_reduce_142,
 1, 110, :_reduce_none,
 2, 110, :_reduce_144,
 1, 117, :_reduce_none,
 1, 117, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 72, :_reduce_149,
 3, 93, :_reduce_150,
 2, 93, :_reduce_151,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 0, 79, :_reduce_none,
 1, 79, :_reduce_155 ]

racc_reduce_n = 156

racc_shift_n = 255

racc_action_table = [
    62,    50,    52,    50,    52,    94,    62,    50,    52,   110,
   183,    78,    62,    50,    52,    79,    73,    89,    62,    50,
    52,   183,    73,   113,    62,    50,    52,   190,    73,   182,
    91,    45,    43,    45,    73,    64,    68,    45,    96,    74,
    73,    64,    68,    45,   192,    74,   152,    64,    68,    45,
  -110,    74,  -109,    64,    68,    45,    44,    74,   182,    64,
    68,    50,    52,    74,    62,    50,    52,    41,   227,  -112,
    62,    50,    52,    48,   149,   150,    62,    50,    52,  -111,
    73,   226,    62,    50,    52,   194,   136,    33,    62,    50,
    52,    45,    73,   113,     4,    45,    96,   107,    73,    64,
    68,    45,  -109,    74,    73,    64,   169,    45,  -110,    74,
   211,    64,    68,    45,   180,    74,   154,    64,    68,    45,
   114,    74,   254,    64,    68,   153,   185,    74,    62,    50,
    52,   187,    33,    18,    62,    50,    52,   109,    57,     4,
    62,    50,    52,    15,    73,    21,    25,    37,     1,     5,
    73,     8,    37,    13,   218,    17,   136,    26,   159,    45,
     4,   217,   199,    64,    68,    45,  -113,    74,    48,    64,
    68,    45,    78,    74,    95,    64,   133,    50,    52,    74,
    48,    38,  -112,    95,    39,    45,    38,   149,   150,    39,
    96,    33,   136,   246,    45,    50,    52,    95,     4,    96,
   143,   185,    33,   145,    18,   140,   187,    45,    45,     4,
    57,    64,   169,    96,    15,    74,    21,    25,   235,     1,
     5,    95,     8,   113,    13,    45,    17,   212,    26,    18,
    54,     4,    45,    50,    52,    50,    52,    96,   108,    15,
   107,    21,    25,  -111,     1,     5,   219,     8,   136,    13,
   118,    17,    78,    26,   234,   155,     4,   157,   223,   149,
   150,    50,    52,    45,   172,    18,   224,    64,   169,   162,
   225,    74,   156,   163,   165,    15,   136,    21,    25,   228,
     1,     5,    79,     8,   230,    13,   118,    17,   232,    26,
    18,    45,     4,  -114,   182,    64,   169,    86,   250,    74,
    15,  -110,    21,    25,  -109,     1,     5,  -112,     8,    18,
    13,  -111,    17,  -114,    26,    50,    52,     4,   237,    15,
    85,    21,    25,   115,     1,     5,   241,     8,   146,    13,
   136,    17,    82,    26,   120,   195,     4,   239,   139,   163,
   165,    80,   182,   248,   118,    45,    18,   122,   118,    64,
   169,    32,   222,    74,   197,   nil,    15,   nil,    21,    25,
   nil,     1,     5,   nil,     8,    18,    13,   nil,    17,   nil,
    26,    50,    52,     4,   nil,    15,   nil,    21,    25,   nil,
     1,     5,   nil,     8,   nil,    13,   136,    17,   nil,    26,
   nil,   253,     4,    50,    52,   nil,   nil,   nil,   nil,   nil,
   nil,    45,    18,   nil,   nil,    64,   169,   nil,   136,    74,
   nil,   nil,    15,   nil,    21,    25,   nil,     1,     5,   209,
     8,   nil,    13,    45,    17,   nil,    26,    64,   169,     4,
    18,    74,    50,    52,    50,    52,   nil,   nil,   216,   nil,
    15,   nil,    21,    25,   nil,     1,     5,   136,     8,   136,
    13,   nil,    17,   nil,    26,   nil,   nil,     4,   nil,    48,
    50,    52,    45,  -123,    45,   nil,    64,   169,    64,   169,
    74,   nil,    74,   nil,   nil,    57,    18,   nil,   nil,    46,
   nil,   nil,   nil,   nil,   nil,   nil,    15,   nil,    21,    25,
    45,     1,     5,   nil,     8,    54,    13,    18,    17,   nil,
    26,   nil,   nil,     4,   nil,   nil,   nil,    15,   nil,    21,
    25,   nil,     1,     5,   nil,     8,    18,    13,   nil,    17,
   nil,    26,   nil,   nil,     4,   nil,    15,   nil,    21,    25,
   nil,     1,     5,   nil,     8,    18,    13,   nil,    17,   nil,
    26,   nil,   nil,     4,   nil,    15,   nil,    21,    25,   nil,
     1,     5,   nil,     8,   nil,    13,   nil,    17,   nil,    26,
   nil,   nil,     4 ]

racc_action_check = [
    78,    78,    78,   113,   113,    35,    62,    62,    62,    62,
   133,    18,   164,   164,   164,    18,    78,    34,    48,    48,
    48,   118,    62,   133,   183,   183,   183,   124,   164,   127,
    35,    78,    11,   113,    48,    78,    78,    62,   113,    78,
   183,    62,    62,   164,   128,    62,    99,   164,   164,    48,
   129,   164,   132,    48,    48,   183,    11,    48,   117,   183,
   183,   107,   107,   183,   223,   223,   223,     9,   188,   134,
   194,   194,   194,    68,    99,    99,    15,    15,    15,   135,
   223,   188,    17,    17,    17,   138,   194,     9,    32,    32,
    32,   107,    15,    68,     9,   223,   107,   166,    17,   223,
   223,   194,    67,   223,    32,   194,   194,    15,    63,   194,
   166,    15,    15,    17,   116,    15,   103,    17,    17,    32,
    69,    17,   252,    32,    32,   103,   227,    32,   212,   212,
   212,   227,    25,   252,   225,   225,   225,    61,   108,    25,
    86,    86,    86,   252,   212,   252,   252,    94,   252,   252,
   225,   252,     8,   252,   178,   252,    86,   252,   108,   212,
   252,   178,   148,   212,   212,   225,    60,   212,   159,   225,
   225,    86,    57,   225,    43,    86,    86,   218,   218,    86,
    54,    94,    71,   151,    94,    43,     8,   148,   148,     8,
    43,     5,   218,   229,   151,    46,    46,    95,     5,   151,
    91,   122,    89,    91,   229,    89,   122,   218,    95,    89,
    46,   218,   218,    95,   229,   218,   229,   229,   198,   229,
   229,    44,   229,   169,   229,    46,   229,   171,   229,   198,
    46,   229,    44,   240,   240,    21,    21,    44,    51,   198,
    49,   198,   198,    72,   198,   198,   181,   198,   240,   198,
   182,   198,    73,   198,   196,   104,   198,   106,   185,   104,
   104,   114,   114,   240,   114,   196,   186,   240,   240,   112,
   187,   240,   105,   112,   112,   196,   114,   196,   196,   190,
   196,   196,    41,   196,   191,   196,   192,   196,   193,   196,
   190,   114,   196,    76,   121,   114,   114,    27,   241,   114,
   190,   202,   190,   190,   204,   190,   190,   205,   190,   241,
   190,   206,   190,   207,   190,   115,   115,   190,   209,   241,
    26,   241,   241,    77,   241,   241,   217,   241,    92,   241,
   115,   241,    22,   241,    80,   139,   241,   214,    88,   214,
   214,    20,   231,   237,    79,   115,   139,    84,    82,   115,
   115,     1,   184,   115,   146,   nil,   139,   nil,   139,   139,
   nil,   139,   139,   nil,   139,   146,   139,   nil,   139,   nil,
   139,   153,   153,   139,   nil,   146,   nil,   146,   146,   nil,
   146,   146,   nil,   146,   nil,   146,   153,   146,   nil,   146,
   nil,   251,   146,   172,   172,   nil,   nil,   nil,   nil,   nil,
   nil,   153,   251,   nil,   nil,   153,   153,   nil,   172,   153,
   nil,   nil,   251,   nil,   251,   251,   nil,   251,   251,   161,
   251,   nil,   251,   172,   251,   nil,   251,   172,   172,   251,
   161,   172,   154,   154,   176,   176,   nil,   nil,   176,   nil,
   161,   nil,   161,   161,   nil,   161,   161,   154,   161,   176,
   161,   nil,   161,   nil,   161,   nil,   nil,   161,   nil,    13,
    13,    13,   154,    13,   176,   nil,   154,   154,   176,   176,
   154,   nil,   176,   nil,   nil,    13,   248,   nil,   nil,    13,
   nil,   nil,   nil,   nil,   nil,   nil,   248,   nil,   248,   248,
    13,   248,   248,   nil,   248,    13,   248,   109,   248,   nil,
   248,   nil,   nil,   248,   nil,   nil,   nil,   109,   nil,   109,
   109,   nil,   109,   109,   nil,   109,    24,   109,   nil,   109,
   nil,   109,   nil,   nil,   109,   nil,    24,   nil,    24,    24,
   nil,    24,    24,   nil,    24,     0,    24,   nil,    24,   nil,
    24,   nil,   nil,    24,   nil,     0,   nil,     0,     0,   nil,
     0,     0,   nil,     0,   nil,     0,   nil,     0,   nil,     0,
   nil,   nil,     0 ]

racc_action_pointer = [
   517,   338,   nil,   nil,   nil,   153,   nil,   nil,   148,    49,
   nil,    13,   nil,   457,   nil,    74,   nil,    80,     9,   nil,
   341,   232,   326,   nil,   498,    94,   278,   291,   nil,   nil,
   nil,   nil,    86,   nil,   -18,    -5,   nil,   nil,   nil,   nil,
   nil,   276,   nil,   152,   199,   nil,   192,   nil,    16,   230,
   nil,   228,   nil,   nil,   178,   nil,   nil,   170,   nil,   nil,
   145,   131,     4,    87,   nil,   nil,   nil,    81,    71,    99,
   nil,   161,   222,   250,   nil,   nil,   272,   317,    -2,   306,
   334,   nil,   310,   nil,   325,   nil,   138,   nil,   332,   164,
   nil,   162,   322,   nil,   143,   175,   nil,   nil,   nil,    26,
   nil,   nil,   nil,   101,   211,   249,   252,    58,   120,   479,
   nil,   nil,   264,     0,   258,   312,   109,    48,    12,   nil,
   nil,   284,   168,   nil,    21,   nil,   nil,    19,    27,    29,
   nil,   nil,    31,     1,    48,    58,   nil,   nil,    46,   328,
   nil,   nil,   nil,   nil,   nil,   nil,   347,   nil,   139,   nil,
   nil,   161,   nil,   368,   429,   nil,   nil,   nil,   nil,   166,
   nil,   412,   nil,   nil,    10,   nil,    87,   nil,   nil,   201,
   nil,   218,   390,   nil,   nil,   nil,   431,   nil,   144,   nil,
   nil,   239,   212,    22,   345,   245,   243,   257,    58,   nil,
   272,   277,   248,   281,    68,   nil,   247,   nil,   211,   nil,
   nil,   nil,   280,   nil,   283,   286,   290,   292,   nil,   289,
   nil,   nil,   126,   nil,   330,   nil,   nil,   320,   174,   nil,
   nil,   nil,   nil,    62,   nil,   132,   nil,    93,   nil,   186,
   nil,   332,   nil,   nil,   nil,   nil,   nil,   337,   nil,   nil,
   230,   291,   nil,   nil,   nil,   nil,   nil,   nil,   458,   nil,
   nil,   384,   115,   nil,   nil ]

racc_action_default = [
  -130,  -156,   -16,    -5,  -124,  -156,    -6,    -7,  -156,  -156,
    -8,  -156,    -9,   -37,   -10,  -156,   -11,  -156,   -36,   -12,
  -156,  -156,  -156,   -13,    -1,  -156,   -33,  -156,   -14,    -2,
   -15,    -3,  -156,  -123,  -130,  -130,  -125,  -128,  -127,  -129,
   -32,  -156,   -35,  -130,  -130,  -149,  -156,   -18,  -156,   -19,
   -87,   -20,   -88,   -21,   -56,   -23,   -24,  -156,   -25,   -26,
   -85,  -156,  -156,   -79,   -89,   -81,   -83,   -78,   -56,  -156,
   -95,   -82,   -77,   -57,  -115,   -84,   -80,  -156,  -156,   -65,
  -156,  -116,   -65,    -4,  -130,   -34,   -65,   -64,  -156,  -156,
  -143,  -156,  -156,  -141,  -156,  -130,   -56,   -50,   -49,  -156,
   -41,   -43,   -40,  -156,  -156,  -156,  -156,  -156,  -156,  -156,
  -151,   -69,  -156,  -156,  -156,  -156,  -156,  -154,  -156,   -66,
   255,  -154,  -131,  -132,  -156,  -113,   -52,  -154,  -156,   -60,
   -61,   -63,   -59,   -56,   -62,   -58,   -57,  -114,   -54,  -156,
  -148,  -144,  -147,  -145,  -142,  -146,  -156,  -126,  -156,   -46,
   -45,  -156,   -39,  -156,  -156,   -38,   -17,   -90,   -22,  -156,
   -27,  -156,  -150,  -152,  -156,  -153,  -156,  -110,  -109,   -56,
  -112,  -156,  -156,  -111,  -103,  -104,  -156,   -97,  -156,  -101,
   -91,  -156,  -155,  -156,  -156,  -140,  -156,  -138,  -156,  -135,
  -156,  -156,   -65,  -156,   -55,  -120,  -156,  -122,  -156,   -44,
   -42,   -47,   -73,   -75,   -72,   -76,   -71,   -74,   -48,   -93,
   -70,   -86,  -156,  -106,  -156,   -98,   -96,  -156,  -156,   -30,
   -67,   -68,   -31,  -156,  -133,  -156,  -134,  -156,  -118,  -156,
   -29,  -154,   -28,   -53,  -119,  -121,   -92,  -156,  -108,  -105,
  -156,  -156,  -102,  -139,  -137,  -136,  -117,   -51,  -156,  -107,
  -100,  -156,  -156,   -99,   -94 ]

racc_goto_table = [
    24,    83,   175,    58,    59,   189,    75,    36,    75,   126,
   177,    81,    70,    56,    77,    20,   130,   131,    55,   171,
   179,   181,    34,    75,   164,   184,   112,   117,    47,    87,
   121,   191,    29,   220,   127,   200,    58,    59,    42,    75,
    99,   104,    84,    98,    98,   106,    56,    61,    97,    97,
   236,    55,   176,    75,   201,   208,   193,   138,   174,   111,
   213,   105,   158,   214,   124,    88,    90,    93,    35,    75,
    92,   215,   166,   186,   188,   116,   135,   171,    40,   144,
   141,   179,   nil,   203,   203,   nil,   134,   nil,   nil,   nil,
   nil,   132,   148,   147,   nil,    98,   nil,    58,   nil,   160,
    97,   nil,   125,    58,   173,   173,   142,    56,   nil,   161,
   245,   nil,    55,    56,   170,   170,   123,   233,    55,   168,
   168,   nil,   nil,   242,   130,   131,   240,   nil,   249,   nil,
   125,   125,   nil,   nil,   nil,   247,   nil,   nil,    83,   196,
   231,   nil,   nil,   206,   206,   171,   198,   nil,   nil,   nil,
   nil,    98,   nil,   205,   205,    75,    97,   137,   204,   204,
   nil,   210,   173,   nil,   nil,   nil,   173,   nil,   129,   125,
   125,   nil,   170,    83,    75,    83,   170,   168,   nil,   nil,
   221,   168,   nil,   nil,   135,   137,   137,   nil,   125,   nil,
   229,   nil,   125,   nil,   134,   nil,   167,   167,   nil,   132,
   nil,   nil,   nil,    75,   nil,   nil,    83,   nil,   173,   238,
   125,   nil,   nil,   nil,    75,   nil,    75,   nil,   170,   nil,
   243,   nil,   244,   168,   207,   207,   nil,   nil,    83,    83,
   173,   nil,   nil,   nil,   125,   202,   202,   nil,   nil,   nil,
   170,   251,   nil,   137,   nil,   168,   nil,   137,   252,   nil,
   nil,   nil,   nil,   nil,   167,   nil,   125,   nil,   167,   nil,
   nil,   nil,   nil,   nil,   nil,   137,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   129,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   137,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   167,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   137,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   167 ]

racc_goto_check = [
     2,     4,    57,    23,    24,    66,    24,    63,    24,    39,
    53,    23,    44,    22,    44,     1,    42,    43,    21,    55,
    55,    29,    25,    24,    47,    29,    46,    28,    17,    44,
    28,    29,     3,    45,    28,    34,    23,    24,    32,    24,
    33,    33,    25,    22,    22,    44,    22,    50,    21,    21,
    51,    21,    52,    24,    38,    38,    27,    26,    56,    44,
    57,    17,    20,    58,    59,    60,     3,     3,    61,    24,
    62,    53,    18,    64,    65,    44,    23,    55,     5,    67,
    68,    55,   nil,    42,    42,   nil,    22,   nil,   nil,   nil,
   nil,    21,    33,    63,   nil,    22,   nil,    23,   nil,    24,
    21,   nil,    49,    23,    23,    23,    25,    22,   nil,     2,
    66,   nil,    21,    22,    22,    22,     3,    39,    21,    21,
    21,   nil,   nil,    55,    42,    43,    47,   nil,    57,   nil,
    49,    49,   nil,   nil,   nil,    29,   nil,   nil,     4,     2,
    28,   nil,   nil,    23,    23,    55,     2,   nil,   nil,   nil,
   nil,    22,   nil,    22,    22,    24,    21,    48,    21,    21,
   nil,    44,    23,   nil,   nil,   nil,    23,   nil,    41,    49,
    49,   nil,    22,     4,    24,     4,    22,    21,   nil,   nil,
    44,    21,   nil,   nil,    23,    48,    48,   nil,    49,   nil,
     2,   nil,    49,   nil,    22,   nil,    41,    41,   nil,    21,
   nil,   nil,   nil,    24,   nil,   nil,     4,   nil,    23,    44,
    49,   nil,   nil,   nil,    24,   nil,    24,   nil,    22,   nil,
    44,   nil,    44,    21,    48,    48,   nil,   nil,     4,     4,
    23,   nil,   nil,   nil,    49,    41,    41,   nil,   nil,   nil,
    22,     2,   nil,    48,   nil,    21,   nil,    48,     2,   nil,
   nil,   nil,   nil,   nil,    41,   nil,    49,   nil,    41,   nil,
   nil,   nil,   nil,   nil,   nil,    48,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    41,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    48,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    41,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    48,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    41 ]

racc_goto_pointer = [
   nil,    15,     0,    32,   -23,    69,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,   -41,   nil,
   -45,     5,     0,   -10,    -9,    17,   -29,   -82,   -52,   -96,
   nil,   nil,    27,    -3,  -116,   nil,   nil,   nil,   -99,   -77,
   nil,    82,   -70,   -69,    -3,  -149,   -36,   -88,    71,    16,
    32,  -159,   -63,  -105,   nil,   -95,   -56,  -112,  -109,   -20,
    31,    60,    35,    -1,   -49,   -48,  -117,   -12,    -9 ]

racc_goto_default = [
   nil,   nil,   nil,   102,    31,     3,     6,     7,    10,    12,
    14,    16,    19,    23,    28,    30,     2,   nil,    49,    51,
    53,    67,    71,    72,    22,    27,   nil,   nil,   nil,   nil,
     9,    11,   nil,   nil,   100,   151,   101,   103,   nil,   nil,
   128,    63,    65,    66,   nil,   119,   nil,   nil,    76,    60,
   nil,   nil,   nil,   nil,   178,    69,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :LESSEQUAL => 14,
 :NOTEQUAL => 15,
 :DOT => 16,
 :COLON => 17,
 :TYPE => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49 }

racc_use_result_var = true

racc_nt_base = 50

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'TYPE',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'quotedtext',
'resourceref',
'fqname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'at',
'collectname',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'type',
'selector',
'array',
'rvalue',
'param',
'rvalues',
'comma',
'boolean',
'funcrvalue',
'iftest',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'nameordefault',
'fqnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 33
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 49
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'grammar.ra', 71
  def _reduce_17( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 78
  def _reduce_18( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 19 omitted

 # reduce 20 omitted

 # reduce 21 omitted

module_eval <<'.,.,', 'grammar.ra', 88
  def _reduce_22( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 23 omitted

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

module_eval <<'.,.,', 'grammar.ra', 103
  def _reduce_27( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 124
  def _reduce_28( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInst)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInst)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::ResourceDef,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 127
  def _reduce_29( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 130
  def _reduce_30( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 135
  def _reduce_31( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 162
  def _reduce_32( val, _values, result )
    type = val[0]

    if type == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect without storeconfigs being set"
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 163
  def _reduce_33( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 164
  def _reduce_34( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 187
  def _reduce_35( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect exported resources without storeconfigs being set"
    end
    result = ast AST::Collection, args
   result
  end
.,.,

 # reduce 36 omitted

 # reduce 37 omitted

module_eval <<'.,.,', 'grammar.ra', 198
  def _reduce_38( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 206
  def _reduce_39( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 40 omitted

 # reduce 41 omitted

module_eval <<'.,.,', 'grammar.ra', 214
  def _reduce_42( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 43 omitted

module_eval <<'.,.,', 'grammar.ra', 220
  def _reduce_44( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

module_eval <<'.,.,', 'grammar.ra', 228
  def _reduce_47( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 233
  def _reduce_48( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 49 omitted

 # reduce 50 omitted

module_eval <<'.,.,', 'grammar.ra', 240
  def _reduce_51( val, _values, result )
    result = ast AST::ResourceInst, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 52 omitted

module_eval <<'.,.,', 'grammar.ra', 250
  def _reduce_53( val, _values, result )
    if val[0].instance_of?(AST::ResourceInst)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 54 omitted

 # reduce 55 omitted

module_eval <<'.,.,', 'grammar.ra', 257
  def _reduce_56( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 261
  def _reduce_57( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 58 omitted

 # reduce 59 omitted

 # reduce 60 omitted

 # reduce 61 omitted

 # reduce 62 omitted

 # reduce 63 omitted

module_eval <<'.,.,', 'grammar.ra', 274
  def _reduce_64( val, _values, result )
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 279
  def _reduce_65( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 279
  def _reduce_66( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 288
  def _reduce_67( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 292
  def _reduce_68( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 69 omitted

module_eval <<'.,.,', 'grammar.ra', 301
  def _reduce_70( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 71 omitted

 # reduce 72 omitted

 # reduce 73 omitted

 # reduce 74 omitted

 # reduce 75 omitted

 # reduce 76 omitted

 # reduce 77 omitted

 # reduce 78 omitted

 # reduce 79 omitted

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

module_eval <<'.,.,', 'grammar.ra', 327
  def _reduce_86( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 331
  def _reduce_87( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 333
  def _reduce_88( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 337
  def _reduce_89( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 342
  def _reduce_90( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 344
  def _reduce_91( val, _values, result )
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 357
  def _reduce_92( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 93 omitted

module_eval <<'.,.,', 'grammar.ra', 362
  def _reduce_94( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 95 omitted

module_eval <<'.,.,', 'grammar.ra', 374
  def _reduce_96( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 97 omitted

module_eval <<'.,.,', 'grammar.ra', 384
  def _reduce_98( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 388
  def _reduce_99( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 393
  def _reduce_100( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 101 omitted

module_eval <<'.,.,', 'grammar.ra', 403
  def _reduce_102( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 407
  def _reduce_103( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 104 omitted

module_eval <<'.,.,', 'grammar.ra', 409
  def _reduce_105( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 106 omitted

module_eval <<'.,.,', 'grammar.ra', 420
  def _reduce_107( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 424
  def _reduce_108( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 109 omitted

 # reduce 110 omitted

 # reduce 111 omitted

 # reduce 112 omitted

 # reduce 113 omitted

 # reduce 114 omitted

module_eval <<'.,.,', 'grammar.ra', 434
  def _reduce_115( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 489
  def _reduce_116( val, _values, result )
    # importing files
    # yuk, i hate keywords
    # we'll probably have to have some kind of search path eventually
    # but for now, just use a path relative to the file doing the importing
    dir = @lexer.file.sub(%r{[^/]+$},'').sub(/\/$/, '')
    if dir == ""
        dir = "."
    end
    result = ast AST::ASTArray

    Dir.chdir(dir) {
        # We can't interpolate at this point since we don't have any 
        # scopes set up. Warn the user if they use a variable reference
        pat = val[1].value
        if pat.index("$")
             Puppet.warning(
                 "The import of #{pat} contains a variable reference;" +
                 " variables are not interpolated for imports " +
                 "in file #{@lexer.file} at line #{@lexer.line}"
             )
        end
        files = Dir.glob(pat)
        if files.size == 0
            files = Dir.glob(pat + ".pp")
            if files.size == 0
                raise Puppet::ImportError.new("No file(s) found for import " + 
                                              "of '#{pat}'")
            end
        end

        files.each { |file|
            parser = Puppet::Parser::Parser.new(interp)
            parser.files = self.files
            Puppet.debug("importing '%s'" % file)

            unless file =~ /^#{File::SEPARATOR}/
                file = File.join(dir, file)
            end
            begin
                parser.file = file
            rescue Puppet::ImportError
                Puppet.warning(
                    "Importing %s would result in an import loop" %
                        File.join(dir, file)
                )
                next
            end

            # This will normally add code to the 'main' class.
            parser.parse
        }
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 499
  def _reduce_117( val, _values, result )
    interp.newdefine fqname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 503
  def _reduce_118( val, _values, result )
    interp.newdefine fqname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 511
  def _reduce_119( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass fqname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 516
  def _reduce_120( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass fqname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 521
  def _reduce_121( val, _values, result )
    interp.newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 524
  def _reduce_122( val, _values, result )
    interp.newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 123 omitted

 # reduce 124 omitted

 # reduce 125 omitted

module_eval <<'.,.,', 'grammar.ra', 536
  def _reduce_126( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 127 omitted

 # reduce 128 omitted

 # reduce 129 omitted

module_eval <<'.,.,', 'grammar.ra', 544
  def _reduce_130( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 548
  def _reduce_131( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 132 omitted

module_eval <<'.,.,', 'grammar.ra', 553
  def _reduce_133( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 557
  def _reduce_134( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 135 omitted

module_eval <<'.,.,', 'grammar.ra', 564
  def _reduce_136( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 569
  def _reduce_137( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 573
  def _reduce_138( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 575
  def _reduce_139( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 577
  def _reduce_140( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 141 omitted

module_eval <<'.,.,', 'grammar.ra', 582
  def _reduce_142( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 143 omitted

module_eval <<'.,.,', 'grammar.ra', 587
  def _reduce_144( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

module_eval <<'.,.,', 'grammar.ra', 594
  def _reduce_149( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 602
  def _reduce_150( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 604
  def _reduce_151( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 152 omitted

 # reduce 153 omitted

 # reduce 154 omitted

module_eval <<'.,.,', 'grammar.ra', 609
  def _reduce_155( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
