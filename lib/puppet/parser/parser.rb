#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end

    class ImportError < Racc::ParseError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..idec1116a64f', 'grammar.ra', 608
require 'puppet/parser/functions'

attr_reader :file, :interp
attr_accessor :files

# Add context to a message; useful for error messages and such.
def addcontext(message, obj = nil)
    obj ||= @lexer

    message += " on line %s" % obj.line
    if file = obj.file
        message += " in file %s" % file
    end

    return message
end

# Create an AST array out of all of the args
def aryfy(*args)
    if args[0].instance_of?(AST::ASTArray)
        result = args.shift
        args.each { |arg|
            result.push arg
        }
    else
        result = ast AST::ASTArray, :children => args
    end

    return result
end

# Create an AST object, and automatically add the file and line information if
# available.
def ast(klass, hash = nil)
    hash ||= {}
    unless hash.include?(:line)
        hash[:line] = @lexer.line
    end

    unless hash.include?(:file)
        if file = @lexer.file
            hash[:file] = file
        end
    end

    return klass.new(hash)
end

# Raise a Parse error.
def error(message)
    if brace = @lexer.expected
        message += "; expected '%s'"
    end
    except = Puppet::ParseError.new(message)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

def file=(file)
    unless FileTest.exists?(file)
        unless file =~ /\.pp$/
            file = file + ".pp"
        end
        unless FileTest.exists?(file)
            raise Puppet::Error, "Could not find file %s" % file
        end
    end
    if @files.detect { |f| f.file == file }
        raise Puppet::ImportError.new("Import loop detected")
    else
        @files << Puppet::Util::LoadedFile.new(file)
        @lexer.file = file
    end
end

# Import our files.
def import(file)
    if Puppet[:ignoreimport]
        return AST::ASTArray.new(:children => [])
    end
    # use a path relative to the file doing the importing
    if @lexer.file
        dir = @lexer.file.sub(%r{[^/]+$},'').sub(/\/$/, '')
    else
        dir = "."
    end
    if dir == ""
        dir = "."
    end
    result = ast AST::ASTArray

    # We can't interpolate at this point since we don't have any
    # scopes set up. Warn the user if they use a variable reference
    pat = file
    if pat.index("$")
        Puppet.warning(
           "The import of #{pat} contains a variable reference;" +
           " variables are not interpolated for imports " +
           "in file #{@lexer.file} at line #{@lexer.line}"
        )
    end
    files = Puppet::Module::find_manifests(pat, dir)
    if files.size == 0
        raise Puppet::ImportError.new("No file(s) found for import " +
                                      "of '#{pat}'")
    end

    files.collect { |file|
        parser = Puppet::Parser::Parser.new(interp)
        parser.files = self.files
        Puppet.debug("importing '%s'" % file)

        unless file =~ /^#{File::SEPARATOR}/
            file = File.join(dir, file)
        end
        begin
            parser.file = file
        rescue Puppet::ImportError
            Puppet.warning(
                "Importing %s would result in an import loop" %
                    File.join(dir, file)
            )
            next
        end

        # This will normally add code to the 'main' class.
        parser.parse
    }
end

def initialize(interpreter)
    @interp = interpreter
    initvars()
end

# Initialize or reset all of our variables.
def initvars
    @lexer = Puppet::Parser::Lexer.new()
    @files = []
end

# The fully qualifed name, with the full namespace.
def classname(name)
    [@lexer.namespace, name].join("::").sub(/^::/, '')
end

def on_error(token,value,stack)
    #on '%s' at '%s' in\n'%s'" % [token,value,stack]
    #error = "line %s: parse error after '%s'" %
    #    [@lexer.line,@lexer.last]
    error = "Syntax error at '%s'" % [value]

    if brace = @lexer.expected
        error += "; expected '%s'" % brace
    end

    except = Puppet::ParseError.new(error)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

# how should I do error handling here?
def parse(string = nil)
    if string
        self.string = string
    end
    begin
        main = yyparse(@lexer,:scan)
    rescue Racc::ParseError => except
        error = Puppet::ParseError.new(except)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    rescue Puppet::ParseError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::Error => except
        # and this is a framework error
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::DevError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue => except
        error = Puppet::DevError.new(except.message)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    end
    if main
        # Store the results as the top-level class.
        interp.newclass("", :code => main)
        return main
    end
ensure
    @lexer.clear
end

# See if any of the files have changed.
def reparse?
    if file = @files.detect { |file| file.changed?  }
        return file.stamp
    else
        return false
    end
end

def string=(string)
    @lexer.string = string
end

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..idec1116a64f

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 52, :_reduce_1,
 1, 52, :_reduce_none,
 1, 53, :_reduce_none,
 2, 53, :_reduce_4,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 4, 63, :_reduce_17,
 3, 63, :_reduce_18,
 2, 63, :_reduce_19,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 69, :_reduce_none,
 3, 69, :_reduce_23,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_27,
 1, 70, :_reduce_none,
 3, 70, :_reduce_29,
 5, 56, :_reduce_30,
 5, 56, :_reduce_31,
 5, 56, :_reduce_32,
 5, 67, :_reduce_33,
 2, 57, :_reduce_34,
 1, 81, :_reduce_35,
 2, 81, :_reduce_36,
 2, 58, :_reduce_37,
 1, 82, :_reduce_none,
 1, 82, :_reduce_none,
 3, 83, :_reduce_40,
 3, 83, :_reduce_41,
 1, 84, :_reduce_none,
 1, 84, :_reduce_none,
 3, 84, :_reduce_44,
 1, 85, :_reduce_none,
 3, 85, :_reduce_46,
 1, 86, :_reduce_none,
 1, 86, :_reduce_none,
 3, 87, :_reduce_49,
 3, 87, :_reduce_50,
 1, 88, :_reduce_none,
 1, 88, :_reduce_none,
 4, 90, :_reduce_53,
 1, 77, :_reduce_none,
 3, 77, :_reduce_55,
 0, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 92, :_reduce_58,
 1, 72, :_reduce_59,
 1, 93, :_reduce_60,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 3, 59, :_reduce_67,
 0, 79, :_reduce_68,
 1, 79, :_reduce_69,
 3, 79, :_reduce_70,
 3, 97, :_reduce_71,
 1, 98, :_reduce_none,
 3, 98, :_reduce_73,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 4, 101, :_reduce_90,
 3, 101, :_reduce_91,
 1, 74, :_reduce_92,
 1, 74, :_reduce_93,
 1, 100, :_reduce_94,
 4, 75, :_reduce_95,
 4, 75, :_reduce_96,
 6, 61, :_reduce_97,
 0, 103, :_reduce_none,
 4, 103, :_reduce_99,
 1, 102, :_reduce_none,
 5, 60, :_reduce_101,
 1, 104, :_reduce_none,
 2, 104, :_reduce_103,
 5, 105, :_reduce_104,
 4, 105, :_reduce_105,
 1, 106, :_reduce_none,
 3, 106, :_reduce_107,
 3, 94, :_reduce_108,
 1, 108, :_reduce_none,
 4, 108, :_reduce_110,
 1, 110, :_reduce_none,
 3, 110, :_reduce_112,
 3, 109, :_reduce_113,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_121,
 1, 111, :_reduce_122,
 3, 111, :_reduce_123,
 2, 62, :_reduce_124,
 6, 64, :_reduce_125,
 5, 64, :_reduce_126,
 6, 65, :_reduce_127,
 5, 65, :_reduce_128,
 6, 66, :_reduce_129,
 5, 66, :_reduce_130,
 1, 76, :_reduce_none,
 1, 76, :_reduce_none,
 1, 114, :_reduce_none,
 3, 114, :_reduce_134,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 0, 54, :_reduce_138,
 0, 117, :_reduce_139,
 1, 112, :_reduce_none,
 3, 112, :_reduce_141,
 3, 112, :_reduce_142,
 1, 118, :_reduce_none,
 3, 118, :_reduce_144,
 3, 119, :_reduce_145,
 1, 119, :_reduce_146,
 3, 119, :_reduce_147,
 1, 119, :_reduce_148,
 1, 115, :_reduce_none,
 2, 115, :_reduce_150,
 1, 113, :_reduce_none,
 2, 113, :_reduce_152,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 73, :_reduce_155,
 3, 95, :_reduce_156,
 2, 95, :_reduce_157,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 0, 80, :_reduce_none,
 1, 80, :_reduce_161 ]

racc_reduce_n = 162

racc_shift_n = 264

racc_action_table = [
    62,    50,    52,    41,   159,    43,    62,    50,    52,   114,
    35,   154,    33,    98,    48,   189,    74,    81,    90,     4,
   153,    82,    74,    33,    62,    50,    52,    35,   118,    44,
     4,    45,   156,   157,   118,    65,    68,    45,    95,    75,
    74,    65,    68,   233,    37,    75,    57,    39,    71,    62,
    50,    52,    50,    52,    71,    45,   232,   188,   112,    65,
    68,    37,    35,    75,    39,    74,   164,    62,    50,    52,
   100,   218,    71,    62,    50,    52,   168,   247,   186,   100,
    45,    45,    45,    74,    65,    68,   101,   101,    75,    74,
    45,    62,    50,    52,    47,   101,    37,    71,    45,    39,
   191,   196,    65,    68,    45,   192,    75,   144,    65,    68,
    50,    52,    75,   100,   188,    71,    62,    50,    52,   214,
   191,    71,    45,   199,    45,   192,    65,   174,   188,   101,
    75,   225,    74,   201,    62,    50,    52,   100,   224,    71,
    62,    50,    52,  -115,   156,   157,  -115,    45,    45,  -114,
    74,    65,    68,   101,    33,    75,    74,   146,    62,    50,
    52,     4,   167,  -117,    71,    45,   168,   169,  -116,    65,
    68,    45,  -120,    75,    74,    65,    68,    50,    52,    75,
    33,   117,    71,    62,    50,    52,   160,     4,    71,    45,
   156,   157,   144,    65,    68,    50,    52,    75,  -118,    74,
  -119,    62,    50,    52,    50,    52,    71,    45,  -114,  -117,
   144,    65,   174,    48,    45,    75,    81,   144,    65,    68,
    50,    52,    75,   176,    71,    45,    50,    52,    48,    65,
   174,    71,    45,    75,    81,   144,    65,   139,   118,   113,
    75,   144,    71,   221,    50,    52,   112,   162,   226,    71,
    45,    50,    52,   123,    65,   174,    45,   161,    75,   144,
    65,   174,   119,   230,    75,   231,   144,    71,    48,    50,
    52,  -116,  -131,    71,    45,    82,   236,   237,    65,   174,
   151,    45,    75,   239,    57,    65,   174,   123,    46,    75,
    92,    71,    50,    52,    50,    52,   223,   189,    71,    45,
  -119,    50,    52,  -115,    54,    50,    52,   144,  -114,   144,
  -117,    47,  -116,   244,   120,    88,   249,    87,   149,    85,
    57,   171,    45,   125,    45,   109,    65,   174,    65,   174,
    75,    45,    75,   259,   123,    45,   101,   188,   256,    71,
    54,    71,   123,    47,    19,   258,  -161,    47,   127,   126,
    32,   229,   234,   nil,    16,   nil,    21,    24,   nil,     1,
     5,   nil,     9,    19,    14,   nil,    18,   nil,    25,   nil,
   nil,     4,   nil,    16,   nil,    21,    24,   217,     1,     5,
   nil,     9,   nil,    14,   nil,    18,   nil,    25,    19,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   241,   nil,    16,   nil,
    21,    24,   nil,     1,     5,   nil,     9,    19,    14,   nil,
    18,   nil,    25,   nil,   nil,     4,   nil,    16,   nil,    21,
    24,   242,     1,     5,   nil,     9,   nil,    14,   nil,    18,
   nil,    25,    19,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   262,   nil,    16,   nil,    21,    24,   nil,     1,     5,   nil,
     9,    19,    14,   nil,    18,   nil,    25,   nil,   nil,     4,
   nil,    16,   nil,    21,    24,   254,     1,     5,   nil,     9,
   nil,    14,   nil,    18,   nil,    25,    19,   nil,     4,   nil,
   nil,   nil,   nil,   nil,   204,   nil,    16,   nil,    21,    24,
   nil,     1,     5,   nil,     9,    19,    14,   nil,    18,   nil,
    25,   nil,   nil,     4,   nil,    16,   nil,    21,    24,   202,
     1,     5,   nil,     9,   nil,    14,   nil,    18,   nil,    25,
    19,   nil,     4,   nil,   nil,   nil,   nil,   nil,   263,   nil,
    16,   nil,    21,    24,   nil,     1,     5,   nil,     9,    19,
    14,   nil,    18,   nil,    25,   nil,   nil,     4,   nil,    16,
   nil,    21,    24,   nil,     1,     5,   nil,     9,    19,    14,
   nil,    18,   nil,    25,   nil,   nil,     4,   nil,    16,   nil,
    21,    24,   nil,     1,     5,   nil,     9,    19,    14,   nil,
    18,   nil,    25,   nil,   nil,     4,   nil,    16,   nil,    21,
    24,   nil,     1,     5,   nil,     9,    19,    14,   nil,    18,
   nil,    25,   nil,   nil,     4,   nil,    16,   nil,    21,    24,
   nil,     1,     5,   nil,     9,    19,    14,   nil,    18,   nil,
    25,   nil,   nil,     4,   nil,    16,   nil,    21,    24,   nil,
     1,     5,   nil,     9,   nil,    14,   nil,    18,   nil,    25,
   nil,   nil,     4 ]

racc_action_check = [
    81,    81,    81,    11,   104,    13,    62,    62,    62,    62,
     9,    99,     5,    36,    68,   139,    81,    19,    29,     5,
    99,    19,    62,    11,   166,   166,   166,    95,   139,    13,
    11,    81,   104,   104,    68,    81,    81,    62,    36,    81,
   166,    62,    62,   194,     9,    62,   113,     9,    81,    48,
    48,    48,   112,   112,    62,   166,   194,   122,   172,   166,
   166,    95,    98,   166,    95,    48,   113,   189,   189,   189,
    43,   172,   166,   229,   229,   229,   219,   219,   121,   158,
    48,    43,   112,   189,    48,    48,    43,   112,    48,   229,
   158,   199,   199,   199,   112,   158,    98,    48,   189,    98,
   127,   128,   189,   189,   229,   127,   189,   199,   229,   229,
    21,    21,   229,   100,   130,   189,    16,    16,    16,   155,
   233,   229,   199,   131,   100,   233,   199,   199,   135,   100,
   199,   184,    16,   136,    18,    18,    18,    44,   184,   199,
    32,    32,    32,   138,   155,   155,    67,    16,    44,   141,
    18,    16,    16,    44,    92,    16,    32,    92,   221,   221,
   221,    92,   116,   143,    16,    18,   116,   116,   145,    18,
    18,    32,    66,    18,   221,    32,    32,   225,   225,    32,
    24,    64,    18,   230,   230,   230,   108,    24,    32,   221,
   108,   108,   225,   221,   221,   153,   153,   221,    63,   230,
    61,    90,    90,    90,   125,   125,   221,   225,    70,    73,
   153,   225,   225,   164,   230,   225,    57,    90,   230,   230,
   119,   119,   230,   119,   225,   153,   154,   154,    54,   153,
   153,   230,    90,   153,    74,   119,    90,    90,   174,    53,
    90,   154,   153,   179,   245,   245,    51,   111,   187,    90,
   119,   176,   176,   188,   119,   119,   154,   110,   119,   245,
   154,   154,    76,   192,   154,   193,   176,   119,    14,    14,
    14,    78,    14,   154,   245,    41,   197,   198,   245,   245,
    96,   176,   245,   200,    14,   176,   176,   201,    14,   176,
    34,   245,   182,   182,   120,   120,   182,   123,   176,    14,
   206,   118,   118,   208,    14,    46,    46,   182,   210,   120,
   211,    14,   212,   217,    80,    26,   224,    25,    93,    23,
    46,   118,   182,    83,   120,    46,   182,   182,   120,   120,
   182,   118,   120,   249,    82,    46,   118,   240,   244,   182,
    46,   120,    88,   118,   249,   246,   247,    46,    86,    85,
     1,   191,   196,   nil,   249,   nil,   249,   249,   nil,   249,
   249,   nil,   249,   196,   249,   nil,   249,   nil,   249,   nil,
   nil,   249,   nil,   196,   nil,   196,   196,   170,   196,   196,
   nil,   196,   nil,   196,   nil,   196,   nil,   196,   170,   nil,
   196,   nil,   nil,   nil,   nil,   nil,   203,   nil,   170,   nil,
   170,   170,   nil,   170,   170,   nil,   170,   203,   170,   nil,
   170,   nil,   170,   nil,   nil,   170,   nil,   203,   nil,   203,
   203,   205,   203,   203,   nil,   203,   nil,   203,   nil,   203,
   nil,   203,   205,   nil,   203,   nil,   nil,   nil,   nil,   nil,
   260,   nil,   205,   nil,   205,   205,   nil,   205,   205,   nil,
   205,   260,   205,   nil,   205,   nil,   205,   nil,   nil,   205,
   nil,   260,   nil,   260,   260,   235,   260,   260,   nil,   260,
   nil,   260,   nil,   260,   nil,   260,   235,   nil,   260,   nil,
   nil,   nil,   nil,   nil,   151,   nil,   235,   nil,   235,   235,
   nil,   235,   235,   nil,   235,   151,   235,   nil,   235,   nil,
   235,   nil,   nil,   235,   nil,   151,   nil,   151,   151,   149,
   151,   151,   nil,   151,   nil,   151,   nil,   151,   nil,   151,
   149,   nil,   151,   nil,   nil,   nil,   nil,   nil,   261,   nil,
   149,   nil,   149,   149,   nil,   149,   149,   nil,   149,   261,
   149,   nil,   149,   nil,   149,   nil,   nil,   149,   nil,   261,
   nil,   261,   261,   nil,   261,   261,   nil,   261,    28,   261,
   nil,   261,   nil,   261,   nil,   nil,   261,   nil,    28,   nil,
    28,    28,   nil,    28,    28,   nil,    28,   117,    28,   nil,
    28,   nil,    28,   nil,   nil,    28,   nil,   117,   nil,   117,
   117,   nil,   117,   117,   nil,   117,   256,   117,   nil,   117,
   nil,   117,   nil,   nil,   117,   nil,   256,   nil,   256,   256,
   nil,   256,   256,   nil,   256,     0,   256,   nil,   256,   nil,
   256,   nil,   nil,   256,   nil,     0,   nil,     0,     0,   nil,
     0,     0,   nil,     0,   nil,     0,   nil,     0,   nil,     0,
   nil,   nil,     0 ]

racc_action_pointer = [
   597,   337,   nil,   nil,   nil,   -26,   nil,   nil,   nil,     6,
   nil,   -15,   nil,   -14,   266,   nil,   114,   nil,   132,    15,
   nil,   107,   nil,   319,   142,   275,   309,   nil,   540,    12,
   nil,   nil,   138,   nil,   255,   nil,     3,   nil,   nil,   nil,
   nil,   269,   nil,    48,   115,   nil,   302,   nil,    47,   nil,
   nil,   236,   nil,   229,   226,   nil,   nil,   214,   nil,   nil,
   nil,   179,     4,   177,   175,   nil,   151,   125,    12,   nil,
   187,   nil,   nil,   188,   232,   nil,   241,   nil,   250,   nil,
   308,    -2,   296,   313,   nil,   349,   326,   nil,   304,   nil,
   199,   nil,   116,   312,   nil,    23,   274,   nil,    58,    -4,
    91,   nil,   nil,   nil,   -16,   nil,   nil,   nil,   142,   nil,
   234,   242,    49,    28,   nil,   nil,   157,   559,   298,   217,
   291,    73,    47,   288,   nil,   201,   nil,    67,    95,   nil,
   104,    84,   nil,   nil,   nil,   118,   116,   nil,   122,     6,
   nil,   128,   nil,   142,   nil,   147,   nil,   nil,   nil,   502,
   nil,   477,   nil,   192,   223,    96,   nil,   nil,    57,   nil,
   nil,   nil,   nil,   nil,   211,   nil,    22,   nil,   nil,   nil,
   370,   nil,    48,   nil,   216,   nil,   248,   nil,   nil,   234,
   nil,   nil,   289,   nil,   121,   nil,   nil,   241,   215,    65,
   nil,   338,   250,   242,    33,   nil,   345,   269,   270,    89,
   276,   249,   nil,   389,   nil,   414,   279,   nil,   282,   nil,
   287,   289,   291,   nil,   nil,   nil,   nil,   284,   nil,    67,
   nil,   156,   nil,   nil,   310,   174,   nil,   nil,   nil,    71,
   181,   nil,   nil,    87,   nil,   458,   nil,   nil,   nil,   nil,
   327,   nil,   nil,   nil,   332,   241,   338,   339,   nil,   326,
   nil,   nil,   nil,   nil,   nil,   nil,   578,   nil,   nil,   nil,
   433,   521,   nil,   nil ]

racc_action_default = [
  -138,  -162,   -15,    -3,  -132,  -162,   -16,    -5,    -6,  -162,
    -7,  -162,    -8,  -162,   -39,    -9,  -162,   -10,  -162,   -38,
   -11,  -162,   -12,  -162,  -162,   -35,  -162,   -13,    -1,  -162,
   -14,    -2,  -162,  -131,  -138,  -136,  -138,  -135,  -133,  -137,
   -34,  -162,   -37,  -138,  -138,  -155,  -162,   -27,  -162,   -19,
   -92,   -20,   -93,   -21,   -59,   -22,   -24,  -162,   -25,   -26,
   -28,   -83,  -162,   -88,  -162,   -94,   -89,   -82,   -59,   -84,
   -81,   -58,   -86,   -85,   -60,  -121,  -162,  -100,   -80,   -87,
  -162,  -162,   -68,  -124,  -122,  -162,  -138,   -36,   -68,    -4,
   -68,   -67,  -162,  -162,  -151,  -162,  -162,  -149,  -162,  -162,
  -138,   -59,   -52,   -51,  -162,   -43,   -45,   -42,  -162,   -18,
  -162,  -162,  -162,  -162,  -157,   -72,  -162,  -162,  -162,  -162,
  -162,  -162,  -160,  -162,   -69,  -162,   264,  -139,  -162,  -140,
  -160,   -56,  -119,  -118,   -54,  -160,  -162,  -120,   -63,   -59,
   -64,   -62,   -66,   -65,   -60,   -61,  -154,  -153,  -152,  -162,
  -150,  -162,  -134,  -162,  -162,  -162,   -48,   -47,  -162,   -41,
   -40,   -17,   -95,   -23,  -162,   -29,  -162,  -156,  -158,  -159,
  -162,   -91,  -162,  -115,   -59,  -114,  -162,  -117,  -116,  -162,
  -108,  -109,  -162,  -102,  -162,  -106,   -96,  -162,  -161,  -162,
  -123,  -148,  -146,  -162,  -162,  -143,  -162,  -162,  -162,   -57,
  -162,   -68,  -128,  -162,  -130,  -162,   -77,   -49,   -76,   -78,
   -75,   -79,   -74,   -50,   -46,   -44,   -73,   -98,   -90,  -160,
  -111,  -162,  -103,  -101,  -162,  -162,   -32,   -70,   -71,  -162,
  -162,  -141,  -142,  -162,  -126,  -162,   -33,   -30,   -55,   -31,
  -160,  -127,  -129,   -97,  -162,  -162,  -162,  -159,  -113,  -162,
  -107,  -147,  -145,  -144,  -125,   -53,  -162,  -112,  -110,  -105,
  -162,  -162,  -104,   -99 ]

racc_goto_table = [
    28,    89,   181,   122,   183,    59,    60,    49,    79,   130,
    79,   135,    84,    23,    77,    58,    80,   142,   104,   108,
   134,   179,   185,   116,    79,   227,    56,   215,   187,   140,
    91,   195,   166,   207,   213,    42,   197,    59,    60,   110,
    79,   200,    64,   243,   103,   103,   111,    58,   182,   198,
    38,   131,   180,   163,    79,   102,   102,   219,    56,   220,
   115,    34,    83,   128,    93,    36,   222,    96,   172,   193,
   133,   194,    40,    79,   148,   155,   nil,   132,   179,   121,
    86,   145,   nil,   nil,   185,   nil,   nil,   nil,   nil,   nil,
   nil,   143,   209,   209,   nil,   nil,   nil,   nil,   nil,   133,
   133,   103,   141,    59,   nil,   165,   132,   132,   nil,    59,
   178,   178,   102,    58,   nil,   nil,   190,   170,   nil,    58,
   177,   177,   240,   nil,    56,   246,   142,   250,   257,   238,
    56,   175,   175,   133,   133,   245,   150,   253,   140,   152,
   206,   206,   nil,    89,   212,   212,   255,   179,   147,   203,
   nil,   205,   nil,   nil,   211,   211,   133,   nil,    79,   103,
   nil,    31,   133,   132,   216,   210,   210,   178,   nil,   132,
   102,   nil,   nil,   178,   nil,   nil,    89,   177,    89,   133,
   138,    79,   nil,   177,   nil,   nil,   132,   228,   175,   nil,
   145,   nil,   nil,   nil,   175,    94,   235,    97,   nil,   nil,
   143,   137,   nil,   nil,   nil,   133,   nil,   nil,    89,   173,
   173,   141,   132,    79,   nil,   nil,   178,   nil,   nil,   248,
   nil,    79,    79,   nil,   nil,   133,   177,   251,   252,   nil,
   137,   137,   132,    89,    89,   nil,   178,   175,   nil,   nil,
   nil,   nil,   nil,   208,   208,   nil,   177,   129,   nil,   260,
   nil,   nil,   nil,   nil,   nil,   nil,   261,   175,   nil,   nil,
   nil,   nil,   nil,   nil,   137,   137,   173,   nil,   nil,   nil,
   nil,   nil,   173,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   137,   nil,   138,
   nil,   nil,   nil,   137,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   137,   nil,   nil,   nil,   nil,   173,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   173,   137,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   137 ]

racc_goto_check = [
     2,     4,    58,    28,    54,    23,    24,    17,    24,    28,
    24,    28,    23,     1,    45,    22,    45,    44,    33,    33,
    39,    56,    56,    47,    24,    46,    21,    34,    29,    43,
    45,    68,    48,    38,    38,    32,    29,    23,    24,    17,
    24,    29,    51,    52,    22,    22,    45,    22,    53,    27,
    65,    26,    57,    20,    24,    21,    21,    59,    21,    58,
    45,    25,    60,    61,    62,    63,    54,    64,    18,    66,
    50,    67,     5,    24,    69,    33,   nil,    49,    56,    45,
    25,    23,   nil,   nil,    56,   nil,   nil,   nil,   nil,   nil,
   nil,    22,    43,    43,   nil,   nil,   nil,   nil,   nil,    50,
    50,    22,    21,    23,   nil,    24,    49,    49,   nil,    23,
    23,    23,    21,    22,   nil,   nil,    23,     2,   nil,    22,
    22,    22,    28,   nil,    21,    29,    44,    56,    58,    39,
    21,    21,    21,    50,    50,    48,    65,    68,    43,    65,
    49,    49,   nil,     4,    23,    23,    29,    56,    25,     2,
   nil,     2,   nil,   nil,    22,    22,    50,   nil,    24,    22,
   nil,     3,    50,    49,    45,    21,    21,    23,   nil,    49,
    21,   nil,   nil,    23,   nil,   nil,     4,    22,     4,    50,
    42,    24,   nil,    22,   nil,   nil,    49,    45,    21,   nil,
    23,   nil,   nil,   nil,    21,     3,     2,     3,   nil,   nil,
    22,    41,   nil,   nil,   nil,    50,   nil,   nil,     4,    42,
    42,    21,    49,    24,   nil,   nil,    23,   nil,   nil,    45,
   nil,    24,    24,   nil,   nil,    50,    22,    45,    45,   nil,
    41,    41,    49,     4,     4,   nil,    23,    21,   nil,   nil,
   nil,   nil,   nil,    42,    42,   nil,    22,     3,   nil,     2,
   nil,   nil,   nil,   nil,   nil,   nil,     2,    21,   nil,   nil,
   nil,   nil,   nil,   nil,    41,    41,    42,   nil,   nil,   nil,
   nil,   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    41,   nil,    42,
   nil,   nil,   nil,    41,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    41,   nil,   nil,   nil,   nil,    42,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    42,    41,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    41 ]

racc_goto_pointer = [
   nil,    13,     0,   161,   -27,    61,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -7,   -50,   nil,
   -59,    12,     1,    -9,    -8,    56,   -39,   -82,   -79,   -94,
   nil,   nil,    22,   -25,  -131,   nil,   nil,   nil,  -120,   -70,
   nil,   111,    90,   -61,   -73,    -2,  -163,   -39,   -84,   -13,
   -20,    26,  -174,   -72,  -116,   nil,   -98,   -67,  -117,  -119,
    41,   -23,    30,    56,    31,    41,   -58,   -56,   -96,   -18 ]

racc_goto_default = [
   nil,   nil,   nil,   107,     3,     7,     8,    10,    12,    15,
    17,    20,    22,    27,    30,     2,     6,   nil,    51,    53,
    55,    70,    73,    78,    26,    29,   nil,   nil,   nil,   nil,
    11,    13,   nil,   nil,   105,   158,   106,    99,   nil,   nil,
   136,    66,    67,    69,    72,   nil,   124,   nil,   nil,    61,
    63,   nil,   nil,   nil,   nil,   184,    76,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :LESSEQUAL => 14,
 :NOTEQUAL => 15,
 :DOT => 16,
 :COLON => 17,
 :TYPE => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50 }

racc_use_result_var = true

racc_nt_base = 51

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'TYPE',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'at',
'collectname',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'type',
'selector',
'array',
'rvalue',
'param',
'rvalues',
'comma',
'boolean',
'funcrvalue',
'iftest',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 30
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 46
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'grammar.ra', 68
  def _reduce_17( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 74
  def _reduce_18( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_19( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_23( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

module_eval <<'.,.,', 'grammar.ra', 98
  def _reduce_27( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 28 omitted

module_eval <<'.,.,', 'grammar.ra', 109
  def _reduce_29( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 130
  def _reduce_30( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInst)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInst)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::ResourceDef,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 133
  def _reduce_31( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 136
  def _reduce_32( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 141
  def _reduce_33( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 168
  def _reduce_34( val, _values, result )
    type = val[0]

    if type == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect without storeconfigs being set"
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 169
  def _reduce_35( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 170
  def _reduce_36( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 193
  def _reduce_37( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect exported resources without storeconfigs being set"
    end
    result = ast AST::Collection, args
   result
  end
.,.,

 # reduce 38 omitted

 # reduce 39 omitted

module_eval <<'.,.,', 'grammar.ra', 204
  def _reduce_40( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 212
  def _reduce_41( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 42 omitted

 # reduce 43 omitted

module_eval <<'.,.,', 'grammar.ra', 220
  def _reduce_44( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 45 omitted

module_eval <<'.,.,', 'grammar.ra', 226
  def _reduce_46( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 47 omitted

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 234
  def _reduce_49( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 239
  def _reduce_50( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 51 omitted

 # reduce 52 omitted

module_eval <<'.,.,', 'grammar.ra', 246
  def _reduce_53( val, _values, result )
    result = ast AST::ResourceInst, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 54 omitted

module_eval <<'.,.,', 'grammar.ra', 256
  def _reduce_55( val, _values, result )
    if val[0].instance_of?(AST::ResourceInst)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 56 omitted

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 263
  def _reduce_58( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 267
  def _reduce_59( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 271
  def _reduce_60( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 61 omitted

 # reduce 62 omitted

 # reduce 63 omitted

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

module_eval <<'.,.,', 'grammar.ra', 287
  def _reduce_67( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 292
  def _reduce_68( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 292
  def _reduce_69( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 301
  def _reduce_70( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 305
  def _reduce_71( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 72 omitted

module_eval <<'.,.,', 'grammar.ra', 314
  def _reduce_73( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 74 omitted

 # reduce 75 omitted

 # reduce 76 omitted

 # reduce 77 omitted

 # reduce 78 omitted

 # reduce 79 omitted

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_90( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 346
  def _reduce_91( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 350
  def _reduce_92( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 352
  def _reduce_93( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 356
  def _reduce_94( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 361
  def _reduce_95( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 363
  def _reduce_96( val, _values, result )
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 376
  def _reduce_97( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 98 omitted

module_eval <<'.,.,', 'grammar.ra', 381
  def _reduce_99( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 100 omitted

module_eval <<'.,.,', 'grammar.ra', 393
  def _reduce_101( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 102 omitted

module_eval <<'.,.,', 'grammar.ra', 403
  def _reduce_103( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 407
  def _reduce_104( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 412
  def _reduce_105( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 106 omitted

module_eval <<'.,.,', 'grammar.ra', 422
  def _reduce_107( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 426
  def _reduce_108( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 109 omitted

module_eval <<'.,.,', 'grammar.ra', 428
  def _reduce_110( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 111 omitted

module_eval <<'.,.,', 'grammar.ra', 439
  def _reduce_112( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 443
  def _reduce_113( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 114 omitted

 # reduce 115 omitted

 # reduce 116 omitted

 # reduce 117 omitted

 # reduce 118 omitted

 # reduce 119 omitted

 # reduce 120 omitted

module_eval <<'.,.,', 'grammar.ra', 454
  def _reduce_121( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_122( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 460
  def _reduce_123( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 468
  def _reduce_124( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 478
  def _reduce_125( val, _values, result )
    interp.newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 482
  def _reduce_126( val, _values, result )
    interp.newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 490
  def _reduce_127( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 495
  def _reduce_128( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 500
  def _reduce_129( val, _values, result )
    interp.newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 503
  def _reduce_130( val, _values, result )
    interp.newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 131 omitted

 # reduce 132 omitted

 # reduce 133 omitted

module_eval <<'.,.,', 'grammar.ra', 515
  def _reduce_134( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 135 omitted

 # reduce 136 omitted

 # reduce 137 omitted

module_eval <<'.,.,', 'grammar.ra', 523
  def _reduce_138( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 527
  def _reduce_139( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 140 omitted

module_eval <<'.,.,', 'grammar.ra', 532
  def _reduce_141( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 536
  def _reduce_142( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 143 omitted

module_eval <<'.,.,', 'grammar.ra', 543
  def _reduce_144( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 548
  def _reduce_145( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 552
  def _reduce_146( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 554
  def _reduce_147( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 556
  def _reduce_148( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 149 omitted

module_eval <<'.,.,', 'grammar.ra', 561
  def _reduce_150( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 151 omitted

module_eval <<'.,.,', 'grammar.ra', 566
  def _reduce_152( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 153 omitted

 # reduce 154 omitted

module_eval <<'.,.,', 'grammar.ra', 572
  def _reduce_155( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 580
  def _reduce_156( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 582
  def _reduce_157( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 158 omitted

 # reduce 159 omitted

 # reduce 160 omitted

module_eval <<'.,.,', 'grammar.ra', 587
  def _reduce_161( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
