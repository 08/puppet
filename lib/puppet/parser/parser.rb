#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end

    class ImportError < Racc::ParseError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..iddb7b85f023', 'grammar.ra', 609
require 'puppet/parser/functions'

attr_reader :file, :interp
attr_accessor :files

# Add context to a message; useful for error messages and such.
def addcontext(message, obj = nil)
    obj ||= @lexer

    message += " on line %s" % obj.line
    if file = obj.file
        message += " in file %s" % file
    end

    return message
end

# Create an AST array out of all of the args
def aryfy(*args)
    if args[0].instance_of?(AST::ASTArray)
        result = args.shift
        args.each { |arg|
            result.push arg
        }
    else
        result = ast AST::ASTArray, :children => args
    end

    return result
end

# Create an AST object, and automatically add the file and line information if
# available.
def ast(klass, hash = nil)
    hash ||= {}
    unless hash.include?(:line)
        hash[:line] = @lexer.line
    end

    unless hash.include?(:file)
        if file = @lexer.file
            hash[:file] = file
        end
    end

    return klass.new(hash)
end

# Raise a Parse error.
def error(message)
    except = Puppet::ParseError.new(message)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

def file=(file)
    unless FileTest.exists?(file)
        unless file =~ /\.pp$/
            file = file + ".pp"
        end
        unless FileTest.exists?(file)
            raise Puppet::Error, "Could not find file %s" % file
        end
    end
    if @files.detect { |f| f.file == file }
        raise Puppet::ImportError.new("Import loop detected")
    else
        @files << Puppet::Util::LoadedFile.new(file)
        @lexer.file = file
    end
end

# Import our files.
def import(file)
    if Puppet[:ignoreimport]
        return AST::ASTArray.new(:children => [])
    end
    # use a path relative to the file doing the importing
    if @lexer.file
        dir = @lexer.file.sub(%r{[^/]+$},'').sub(/\/$/, '')
    else
        dir = "."
    end
    if dir == ""
        dir = "."
    end
    result = ast AST::ASTArray

    # We can't interpolate at this point since we don't have any
    # scopes set up. Warn the user if they use a variable reference
    pat = file
    if pat.index("$")
        Puppet.warning(
           "The import of #{pat} contains a variable reference;" +
           " variables are not interpolated for imports " +
           "in file #{@lexer.file} at line #{@lexer.line}"
        )
    end
    files = Puppet::Module::find_manifests(pat, dir)
    if files.size == 0
        raise Puppet::ImportError.new("No file(s) found for import " +
                                      "of '#{pat}'")
    end

    files.collect { |file|
        parser = Puppet::Parser::Parser.new(interp)
        parser.files = self.files
        Puppet.debug("importing '%s'" % file)

        unless file =~ /^#{File::SEPARATOR}/
            file = File.join(dir, file)
        end
        begin
            parser.file = file
        rescue Puppet::ImportError
            Puppet.warning(
                "Importing %s would result in an import loop" %
                    File.join(dir, file)
            )
            next
        end

        # This will normally add code to the 'main' class.
        parser.parse
    }
end

def initialize(interpreter)
    @interp = interpreter
    initvars()
end

# Initialize or reset all of our variables.
def initvars
    @lexer = Puppet::Parser::Lexer.new()
    @files = []
end

# The fully qualifed name, with the full namespace.
def classname(name)
    [@lexer.namespace, name].join("::").sub(/^::/, '')
end

def on_error(token,value,stack)
    #on '%s' at '%s' in\n'%s'" % [token,value,stack]
    #error = "line %s: parse error after '%s'" %
    #    [@lexer.line,@lexer.last]
    error = "Syntax error at '%s'" % [value]

    except = Puppet::ParseError.new(error)
    except.line = @lexer.line
    if @lexer.file
        except.file = @lexer.file
    end

    raise except
end

# how should I do error handling here?
def parse(string = nil)
    if string
        self.string = string
    end
    begin
        main = yyparse(@lexer,:scan)
    rescue Racc::ParseError => except
        error = Puppet::ParseError.new(except)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    rescue Puppet::ParseError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::Error => except
        # and this is a framework error
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue Puppet::DevError => except
        except.line ||= @lexer.line
        except.file ||= @lexer.file
        raise except
    rescue => except
        error = Puppet::DevError.new(except.message)
        error.line = @lexer.line
        error.file = @lexer.file
        error.set_backtrace except.backtrace
        raise error
    end
    if main
        # Store the results as the top-level class.
        interp.newclass("", :code => main)
        return main
    end
ensure
    @lexer.clear
end

# See if any of the files have changed.
def reparse?
    if file = @files.detect { |file| file.changed?  }
        return file.stamp
    else
        return false
    end
end

def string=(string)
    @lexer.string = string
end

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..iddb7b85f023

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 52, :_reduce_1,
 1, 52, :_reduce_none,
 1, 53, :_reduce_none,
 2, 53, :_reduce_4,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 1, 55, :_reduce_none,
 4, 63, :_reduce_17,
 3, 63, :_reduce_18,
 2, 63, :_reduce_19,
 1, 68, :_reduce_none,
 1, 68, :_reduce_none,
 1, 69, :_reduce_none,
 3, 69, :_reduce_23,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_none,
 1, 71, :_reduce_27,
 1, 70, :_reduce_none,
 3, 70, :_reduce_29,
 5, 56, :_reduce_30,
 5, 56, :_reduce_31,
 5, 56, :_reduce_32,
 5, 67, :_reduce_33,
 2, 57, :_reduce_34,
 1, 81, :_reduce_35,
 2, 81, :_reduce_36,
 2, 58, :_reduce_37,
 1, 82, :_reduce_none,
 1, 82, :_reduce_none,
 3, 83, :_reduce_40,
 3, 83, :_reduce_41,
 1, 84, :_reduce_none,
 1, 84, :_reduce_none,
 3, 84, :_reduce_44,
 1, 85, :_reduce_none,
 3, 85, :_reduce_46,
 1, 86, :_reduce_none,
 1, 86, :_reduce_none,
 3, 87, :_reduce_49,
 3, 87, :_reduce_50,
 1, 88, :_reduce_none,
 1, 88, :_reduce_none,
 4, 90, :_reduce_53,
 1, 77, :_reduce_none,
 3, 77, :_reduce_55,
 0, 78, :_reduce_none,
 1, 78, :_reduce_none,
 1, 92, :_reduce_58,
 1, 72, :_reduce_59,
 1, 93, :_reduce_60,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 3, 59, :_reduce_67,
 0, 79, :_reduce_68,
 1, 79, :_reduce_69,
 3, 79, :_reduce_70,
 3, 97, :_reduce_71,
 1, 98, :_reduce_none,
 3, 98, :_reduce_73,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 4, 101, :_reduce_90,
 3, 101, :_reduce_91,
 1, 74, :_reduce_92,
 1, 74, :_reduce_93,
 1, 100, :_reduce_94,
 4, 75, :_reduce_95,
 4, 75, :_reduce_96,
 6, 61, :_reduce_97,
 0, 103, :_reduce_none,
 4, 103, :_reduce_99,
 1, 102, :_reduce_none,
 5, 60, :_reduce_101,
 1, 104, :_reduce_none,
 2, 104, :_reduce_103,
 5, 105, :_reduce_104,
 4, 105, :_reduce_105,
 1, 106, :_reduce_none,
 3, 106, :_reduce_107,
 3, 94, :_reduce_108,
 1, 108, :_reduce_none,
 4, 108, :_reduce_110,
 1, 110, :_reduce_none,
 3, 110, :_reduce_112,
 3, 109, :_reduce_113,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_none,
 1, 107, :_reduce_121,
 1, 111, :_reduce_122,
 3, 111, :_reduce_123,
 2, 62, :_reduce_124,
 6, 64, :_reduce_125,
 5, 64, :_reduce_126,
 6, 65, :_reduce_127,
 5, 65, :_reduce_128,
 6, 66, :_reduce_129,
 5, 66, :_reduce_130,
 1, 76, :_reduce_none,
 1, 76, :_reduce_none,
 1, 114, :_reduce_none,
 3, 114, :_reduce_134,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 0, 54, :_reduce_138,
 0, 117, :_reduce_139,
 1, 112, :_reduce_none,
 3, 112, :_reduce_141,
 3, 112, :_reduce_142,
 1, 118, :_reduce_none,
 3, 118, :_reduce_144,
 3, 119, :_reduce_145,
 1, 119, :_reduce_146,
 3, 119, :_reduce_147,
 1, 119, :_reduce_148,
 1, 115, :_reduce_none,
 2, 115, :_reduce_150,
 1, 113, :_reduce_none,
 2, 113, :_reduce_152,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 73, :_reduce_157,
 3, 95, :_reduce_158,
 2, 95, :_reduce_159,
 1, 99, :_reduce_none,
 1, 99, :_reduce_none,
 0, 80, :_reduce_none,
 1, 80, :_reduce_163 ]

racc_reduce_n = 164

racc_shift_n = 266

racc_action_table = [
    62,    50,    52,    41,   161,    43,    62,    50,    52,   114,
    35,   156,    33,    98,    48,   112,   144,    81,  -119,     4,
   155,    82,    74,    33,    62,    50,    52,    35,   220,    44,
     4,    45,   158,   159,   118,    65,   139,    45,    95,    75,
    74,    65,    68,   235,    37,    75,    57,    39,    71,    62,
    50,    52,    50,    52,    71,    45,   234,   193,   191,    65,
    68,    37,   194,    75,    39,    74,   166,    62,    50,    52,
   216,   118,    71,    62,    50,    52,   193,   170,   249,    33,
    45,   194,    45,    74,    65,    68,     4,   101,    75,    74,
   190,    62,    50,    52,    47,   158,   159,    71,    45,    50,
    52,   188,    65,    68,    45,   198,    75,   144,    65,    68,
   190,   150,    75,   100,   151,    71,    62,    50,    52,    50,
    52,    71,    45,   201,    45,   190,    65,   176,   203,   101,
    75,   227,    74,   100,    62,    50,    52,   100,   226,    71,
    62,    50,    52,  -115,    45,  -115,   100,    45,    45,   101,
    74,    65,    68,   101,  -114,    75,    74,    45,    62,    50,
    52,  -117,   101,   162,    71,    45,  -116,   158,   159,    65,
    68,    45,  -120,    75,    74,    65,    68,    50,    52,    75,
   117,  -118,    71,    62,    50,    52,   169,  -119,    71,    45,
   170,   171,   144,    65,    68,    50,    52,    75,  -114,    74,
  -117,    62,    50,    52,    48,    81,    71,    45,    48,    81,
   144,    65,   176,   118,    45,    75,   113,    74,    65,    68,
    50,    52,    75,   223,    71,    45,   112,   164,   228,    65,
   176,    71,    45,    75,   123,   144,    65,    68,    50,    52,
    75,   178,    71,   163,    50,    52,   119,   232,   233,    71,
    45,    50,    52,   144,    65,   176,  -116,    82,    75,   144,
    50,    52,    50,    52,   238,   239,    57,    71,    45,   153,
   241,   109,    65,   176,    45,   144,    75,   144,    65,   176,
   123,    45,    75,    50,    52,    71,    54,    92,    90,   191,
    45,    71,    45,    47,    65,   176,    65,   176,    75,  -115,
    75,    50,    52,   173,  -114,   225,  -117,    71,  -116,    71,
    48,    50,    52,    45,  -131,   246,   144,    33,   101,   149,
   147,    88,   251,    87,     4,    47,    57,   123,    85,   120,
    46,    45,   123,   219,   190,    65,   176,   258,   127,    75,
   260,    45,  -163,   126,    19,   125,    54,    32,    71,   231,
   nil,   nil,   265,    47,    16,   nil,    21,    24,   nil,     1,
     5,   nil,     9,    19,    14,   nil,    18,   nil,    25,   nil,
   nil,     4,   nil,    16,   nil,    21,    24,   256,     1,     5,
   nil,     9,   nil,    14,   nil,    18,   nil,    25,    19,   nil,
     4,   nil,   nil,   nil,   nil,   nil,   244,   nil,    16,   nil,
    21,    24,   nil,     1,     5,   nil,     9,    19,    14,   nil,
    18,   nil,    25,   nil,   nil,     4,   nil,    16,   nil,    21,
    24,   261,     1,     5,   nil,     9,   nil,    14,   nil,    18,
   nil,    25,    19,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   264,   nil,    16,   nil,    21,    24,   nil,     1,     5,   nil,
     9,    19,    14,   nil,    18,   nil,    25,   nil,   nil,     4,
   nil,    16,   nil,    21,    24,   236,     1,     5,   nil,     9,
   nil,    14,   nil,    18,   nil,    25,    19,   nil,     4,   nil,
   nil,   nil,   nil,   nil,   206,   nil,    16,   nil,    21,    24,
   nil,     1,     5,   nil,     9,    19,    14,   nil,    18,   nil,
    25,   nil,   nil,     4,   nil,    16,   nil,    21,    24,   204,
     1,     5,   nil,     9,   nil,    14,   nil,    18,   nil,    25,
    19,   nil,     4,   nil,   nil,   nil,   nil,   nil,   243,   nil,
    16,   nil,    21,    24,   nil,     1,     5,   nil,     9,    19,
    14,   nil,    18,   nil,    25,   nil,   nil,     4,   nil,    16,
   nil,    21,    24,   nil,     1,     5,   nil,     9,    19,    14,
   nil,    18,   nil,    25,   nil,   nil,     4,   nil,    16,   nil,
    21,    24,   nil,     1,     5,   nil,     9,    19,    14,   nil,
    18,   nil,    25,   nil,   nil,     4,   nil,    16,   nil,    21,
    24,   nil,     1,     5,   nil,     9,    19,    14,   nil,    18,
   nil,    25,   nil,   nil,     4,   nil,    16,   nil,    21,    24,
   nil,     1,     5,   nil,     9,    19,    14,   nil,    18,   nil,
    25,   nil,   nil,     4,   nil,    16,   nil,    21,    24,   nil,
     1,     5,   nil,     9,   nil,    14,   nil,    18,   nil,    25,
   nil,   nil,     4 ]

racc_action_check = [
    90,    90,    90,    11,   104,    13,    62,    62,    62,    62,
     9,    99,     5,    36,    68,   174,    90,    19,   208,     5,
    99,    19,    62,    11,   168,   168,   168,    98,   174,    13,
    11,    90,   104,   104,    68,    90,    90,    62,    36,    90,
   168,    62,    62,   196,     9,    62,   113,     9,    90,    48,
    48,    48,   112,   112,    62,   168,   196,   127,   139,   168,
   168,    98,   127,   168,    98,    48,   113,   191,   191,   191,
   157,   139,   168,   231,   231,   231,   235,   221,   221,    24,
    48,   235,   112,   191,    48,    48,    24,   112,    48,   231,
   122,   201,   201,   201,   112,   157,   157,    48,   191,    21,
    21,   121,   191,   191,   231,   128,   191,   201,   231,   231,
   130,    95,   231,    43,    95,   191,    16,    16,    16,   125,
   125,   231,   201,   131,    43,   135,   201,   201,   136,    43,
   201,   186,    16,   160,    18,    18,    18,    44,   186,   201,
    32,    32,    32,   138,   160,    67,   100,    16,    44,   160,
    18,    16,    16,    44,   141,    16,    32,   100,   223,   223,
   223,   143,   100,   108,    16,    18,   145,   108,   108,    18,
    18,    32,    66,    18,   223,    32,    32,   227,   227,    32,
    64,    63,    18,   232,   232,   232,   116,    61,    32,   223,
   116,   116,   227,   223,   223,   178,   178,   223,    70,   232,
    73,    81,    81,    81,   166,    57,   223,   227,    54,    74,
   178,   227,   227,   176,   232,   227,    53,    81,   232,   232,
   156,   156,   232,   181,   227,   178,    51,   111,   189,   178,
   178,   232,    81,   178,   190,   156,    81,    81,   119,   119,
    81,   119,   178,   110,   247,   247,    76,   194,   195,    81,
   156,    46,    46,   119,   156,   156,    78,    41,   156,   247,
   120,   120,   155,   155,   199,   200,    46,   156,   119,    96,
   202,    46,   119,   119,   247,   120,   119,   155,   247,   247,
   203,    46,   247,   118,   118,   119,    46,    34,    29,   123,
   120,   247,   155,    46,   120,   120,   155,   155,   120,   210,
   155,   184,   184,   118,   212,   184,   213,   120,   214,   155,
    14,    14,    14,   118,    14,   219,   184,    92,   118,    93,
    92,    26,   226,    25,    92,   118,    14,    82,    23,    80,
    14,   184,    88,   172,   242,   184,   184,   246,    86,   184,
   248,    14,   249,    85,   172,    83,    14,     1,   184,   193,
   nil,   nil,   263,    14,   172,   nil,   172,   172,   nil,   172,
   172,   nil,   172,   263,   172,   nil,   172,   nil,   172,   nil,
   nil,   172,   nil,   263,   nil,   263,   263,   237,   263,   263,
   nil,   263,   nil,   263,   nil,   263,   nil,   263,   237,   nil,
   263,   nil,   nil,   nil,   nil,   nil,   207,   nil,   237,   nil,
   237,   237,   nil,   237,   237,   nil,   237,   207,   237,   nil,
   237,   nil,   237,   nil,   nil,   237,   nil,   207,   nil,   207,
   207,   251,   207,   207,   nil,   207,   nil,   207,   nil,   207,
   nil,   207,   251,   nil,   207,   nil,   nil,   nil,   nil,   nil,
   262,   nil,   251,   nil,   251,   251,   nil,   251,   251,   nil,
   251,   262,   251,   nil,   251,   nil,   251,   nil,   nil,   251,
   nil,   262,   nil,   262,   262,   198,   262,   262,   nil,   262,
   nil,   262,   nil,   262,   nil,   262,   198,   nil,   262,   nil,
   nil,   nil,   nil,   nil,   153,   nil,   198,   nil,   198,   198,
   nil,   198,   198,   nil,   198,   153,   198,   nil,   198,   nil,
   198,   nil,   nil,   198,   nil,   153,   nil,   153,   153,   149,
   153,   153,   nil,   153,   nil,   153,   nil,   153,   nil,   153,
   149,   nil,   153,   nil,   nil,   nil,   nil,   nil,   205,   nil,
   149,   nil,   149,   149,   nil,   149,   149,   nil,   149,   205,
   149,   nil,   149,   nil,   149,   nil,   nil,   149,   nil,   205,
   nil,   205,   205,   nil,   205,   205,   nil,   205,   258,   205,
   nil,   205,   nil,   205,   nil,   nil,   205,   nil,   258,   nil,
   258,   258,   nil,   258,   258,   nil,   258,   117,   258,   nil,
   258,   nil,   258,   nil,   nil,   258,   nil,   117,   nil,   117,
   117,   nil,   117,   117,   nil,   117,    28,   117,   nil,   117,
   nil,   117,   nil,   nil,   117,   nil,    28,   nil,    28,    28,
   nil,    28,    28,   nil,    28,     0,    28,   nil,    28,   nil,
    28,   nil,   nil,    28,   nil,     0,   nil,     0,     0,   nil,
     0,     0,   nil,     0,   nil,     0,   nil,     0,   nil,     0,
   nil,   nil,     0 ]

racc_action_pointer = [
   597,   334,   nil,   nil,   nil,   -26,   nil,   nil,   nil,     6,
   nil,   -15,   nil,   -14,   308,   nil,   114,   nil,   132,    15,
   nil,    96,   nil,   328,    41,   281,   315,   nil,   578,   282,
   nil,   nil,   138,   nil,   252,   nil,     3,   nil,   nil,   nil,
   nil,   251,   nil,    91,   115,   nil,   248,   nil,    47,   nil,
   nil,   216,   nil,   206,   206,   nil,   nil,   203,   nil,   nil,
   nil,   166,     4,   160,   174,   nil,   151,   124,    12,   nil,
   177,   nil,   nil,   179,   207,   nil,   225,   nil,   235,   nil,
   323,   199,   289,   335,   nil,   343,   316,   nil,   294,   nil,
    -2,   nil,   279,   313,   nil,    73,   263,   nil,    23,    -4,
   124,   nil,   nil,   nil,   -16,   nil,   nil,   nil,   119,   nil,
   220,   222,    49,    28,   nil,   nil,   181,   559,   280,   235,
   257,    96,    80,   280,   nil,   116,   nil,    24,    99,   nil,
   100,    84,   nil,   nil,   nil,   115,   111,   nil,   122,    49,
   nil,   133,   nil,   140,   nil,   145,   nil,   nil,   nil,   502,
   nil,   nil,   nil,   477,   nil,   259,   217,    47,   nil,   nil,
   111,   nil,   nil,   nil,   nil,   nil,   202,   nil,    22,   nil,
   nil,   nil,   326,   nil,     5,   nil,   191,   nil,   192,   nil,
   nil,   214,   nil,   nil,   298,   nil,   121,   nil,   nil,   221,
   196,    65,   nil,   336,   234,   225,    33,   nil,   458,   257,
   258,    89,   263,   242,   nil,   521,   nil,   389,    -3,   nil,
   278,   nil,   283,   285,   287,   nil,   nil,   nil,   nil,   286,
   nil,    68,   nil,   156,   nil,   nil,   316,   174,   nil,   nil,
   nil,    71,   181,   nil,   nil,    43,   nil,   370,   nil,   nil,
   nil,   nil,   324,   nil,   nil,   nil,   331,   241,   333,   335,
   nil,   414,   nil,   nil,   nil,   nil,   nil,   nil,   540,   nil,
   nil,   nil,   433,   345,   nil,   nil ]

racc_action_default = [
  -138,  -164,   -15,    -3,  -132,  -164,   -16,    -5,    -6,  -164,
    -7,  -164,    -8,  -164,   -39,    -9,  -164,   -10,  -164,   -38,
   -11,  -164,   -12,  -164,  -164,   -35,  -164,   -13,    -1,  -164,
   -14,    -2,  -164,  -131,  -138,  -136,  -138,  -135,  -133,  -137,
   -34,  -164,   -37,  -138,  -138,  -157,  -164,   -27,  -164,   -19,
   -92,   -20,   -93,   -21,   -59,   -22,   -24,  -164,   -25,   -26,
   -28,   -83,  -164,   -88,  -164,   -94,   -89,   -82,   -59,   -84,
   -81,   -58,   -86,   -85,   -60,  -121,  -164,  -100,   -80,   -87,
  -164,  -164,   -68,  -124,  -122,  -164,  -138,   -36,   -68,    -4,
   -68,   -67,  -164,  -164,  -151,  -164,  -164,  -149,  -164,  -164,
  -138,   -59,   -52,   -51,  -164,   -43,   -45,   -42,  -164,   -18,
  -164,  -164,  -164,  -164,  -159,   -72,  -164,  -164,  -164,  -164,
  -164,  -164,  -162,  -164,   -69,  -164,   266,  -139,  -164,  -140,
  -162,   -56,  -119,  -118,   -54,  -162,  -164,  -120,   -63,   -59,
   -64,   -62,   -66,   -65,   -60,   -61,  -152,  -156,  -155,  -164,
  -153,  -154,  -150,  -164,  -134,  -164,  -164,  -164,   -48,   -47,
  -164,   -41,   -40,   -17,   -95,   -23,  -164,   -29,  -164,  -158,
  -160,  -161,  -164,   -91,  -164,  -115,   -59,  -114,  -164,  -117,
  -116,  -164,  -108,  -109,  -164,  -102,  -164,  -106,   -96,  -164,
  -163,  -164,  -123,  -148,  -146,  -164,  -164,  -143,  -164,  -164,
  -164,   -57,  -164,   -68,  -128,  -164,  -130,  -164,   -77,   -49,
   -76,   -78,   -75,   -79,   -74,   -50,   -46,   -44,   -73,   -98,
   -90,  -162,  -111,  -164,  -103,  -101,  -164,  -164,   -32,   -70,
   -71,  -164,  -164,  -141,  -142,  -164,  -126,  -164,   -33,   -30,
   -55,   -31,  -162,  -127,  -129,   -97,  -164,  -164,  -164,  -161,
  -113,  -164,  -107,  -147,  -145,  -144,  -125,   -53,  -164,  -112,
  -110,  -105,  -164,  -164,  -104,   -99 ]

racc_goto_table = [
    28,    89,   183,   168,   197,    59,    23,   185,   122,    58,
    38,    34,    84,    77,   130,    80,   135,   140,   116,    31,
    56,   142,    60,   134,    79,    49,    79,   104,   108,    91,
    86,   229,   181,   187,   189,   209,   215,    59,   103,   103,
    79,    58,   199,   217,    42,   111,    64,   202,   245,   102,
   102,   184,    56,    94,    60,    97,    79,   110,   200,   115,
   131,   222,   182,   165,   221,    83,   128,    93,    36,    96,
    79,   224,   174,   195,   196,    40,   152,   146,   121,   nil,
   nil,   145,   211,   211,   157,   143,   nil,   nil,   nil,    79,
   nil,   181,   nil,   133,   nil,   103,   141,   187,   148,   154,
   nil,   nil,   nil,    59,   nil,   129,   102,    58,   247,    59,
   180,   180,   255,    58,   179,   179,   192,   172,    56,   nil,
   nil,   167,   133,   133,    56,   177,   177,   nil,   140,   242,
   259,   nil,   142,   248,   240,   nil,   nil,   nil,   nil,   nil,
   252,   nil,   nil,   nil,   nil,    89,   214,   214,   nil,   205,
   213,   213,   nil,   207,   257,   103,   nil,   nil,   133,   133,
   181,   212,   212,   nil,   nil,   218,   102,   nil,   nil,   180,
   nil,   nil,   nil,   179,   nil,   180,    79,   nil,    89,   179,
    89,   133,   132,   nil,   177,   nil,   nil,   133,   230,   nil,
   177,   nil,   145,   nil,   138,   nil,   143,   137,   237,    79,
   nil,   nil,   nil,   nil,   133,   nil,   nil,   141,   nil,   nil,
    89,   132,   132,   nil,   nil,   nil,   nil,   nil,   180,   nil,
   250,   nil,   179,   175,   175,   nil,   137,   137,   253,   254,
   133,    79,   nil,   177,   nil,    89,    89,   nil,   180,    79,
    79,   nil,   179,   nil,   nil,   nil,   nil,   208,   208,   nil,
   133,   262,   nil,   177,   nil,   nil,   nil,   nil,   263,   210,
   210,   nil,   137,   137,   nil,   nil,   nil,   nil,   nil,   nil,
   132,   nil,   nil,   nil,   nil,   nil,   132,   nil,   nil,   nil,
   nil,   nil,   175,   nil,   nil,   137,   nil,   nil,   175,   nil,
   nil,   137,   nil,   132,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   138,   nil,   nil,   137,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   132,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   175,   nil,   nil,   137,   nil,   nil,   nil,   nil,   132,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   175,   nil,   nil,   137 ]

racc_goto_check = [
     2,     4,    58,    48,    68,    23,     1,    54,    28,    22,
    65,    25,    23,    45,    28,    45,    28,    43,    47,     3,
    21,    44,    24,    39,    24,    17,    24,    33,    33,    45,
    25,    46,    56,    56,    29,    38,    38,    23,    22,    22,
    24,    22,    29,    34,    32,    45,    51,    29,    52,    21,
    21,    53,    21,     3,    24,     3,    24,    17,    27,    45,
    26,    58,    57,    20,    59,    60,    61,    62,    63,    64,
    24,    54,    18,    66,    67,     5,    69,    70,    45,   nil,
   nil,    23,    43,    43,    33,    22,   nil,   nil,   nil,    24,
   nil,    56,   nil,    50,   nil,    22,    21,    56,    25,    65,
   nil,   nil,   nil,    23,   nil,     3,    21,    22,    48,    23,
    23,    23,    68,    22,    22,    22,    23,     2,    21,   nil,
   nil,    24,    50,    50,    21,    21,    21,   nil,    43,    28,
    58,   nil,    44,    29,    39,   nil,   nil,   nil,   nil,   nil,
    56,   nil,   nil,   nil,   nil,     4,    23,    23,   nil,     2,
    22,    22,   nil,     2,    29,    22,   nil,   nil,    50,    50,
    56,    21,    21,   nil,   nil,    45,    21,   nil,   nil,    23,
   nil,   nil,   nil,    22,   nil,    23,    24,   nil,     4,    22,
     4,    50,    49,   nil,    21,   nil,   nil,    50,    45,   nil,
    21,   nil,    23,   nil,    42,   nil,    22,    41,     2,    24,
   nil,   nil,   nil,   nil,    50,   nil,   nil,    21,   nil,   nil,
     4,    49,    49,   nil,   nil,   nil,   nil,   nil,    23,   nil,
    45,   nil,    22,    42,    42,   nil,    41,    41,    45,    45,
    50,    24,   nil,    21,   nil,     4,     4,   nil,    23,    24,
    24,   nil,    22,   nil,   nil,   nil,   nil,    49,    49,   nil,
    50,     2,   nil,    21,   nil,   nil,   nil,   nil,     2,    42,
    42,   nil,    41,    41,   nil,   nil,   nil,   nil,   nil,   nil,
    49,   nil,   nil,   nil,   nil,   nil,    49,   nil,   nil,   nil,
   nil,   nil,    42,   nil,   nil,    41,   nil,   nil,    42,   nil,
   nil,    41,   nil,    49,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    42,   nil,   nil,    41,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    49,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    42,   nil,   nil,    41,   nil,   nil,   nil,   nil,    49,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    42,   nil,   nil,    41 ]

racc_goto_pointer = [
   nil,     6,     0,    19,   -27,    64,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    11,   -46,   nil,
   -49,     6,    -5,    -9,     8,     6,   -30,   -73,   -74,   -88,
   nil,   nil,    31,   -16,  -117,   nil,   nil,   nil,  -120,   -67,
   nil,   107,   104,   -73,   -69,    -3,  -159,   -44,  -113,    92,
     3,    30,  -171,   -69,  -113,   nil,   -87,   -57,  -117,  -114,
    44,   -20,    33,    59,    33,     1,   -54,   -53,  -123,   -19,
   -15 ]

racc_goto_default = [
   nil,   nil,   nil,   107,     3,     7,     8,    10,    12,    15,
    17,    20,    22,    27,    30,     2,     6,   nil,    51,    53,
    55,    70,    73,    78,    26,    29,   nil,   nil,   nil,   nil,
    11,    13,   nil,   nil,   105,   160,   106,    99,   nil,   nil,
   136,    66,    67,    69,    72,   nil,   124,   nil,   nil,    61,
    63,   nil,   nil,   nil,   nil,   186,    76,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :LESSEQUAL => 14,
 :NOTEQUAL => 15,
 :DOT => 16,
 :COLON => 17,
 :TYPE => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50 }

racc_use_result_var = true

racc_nt_base = 51

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'TYPE',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'at',
'collectname',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'type',
'selector',
'array',
'rvalue',
'param',
'rvalues',
'comma',
'boolean',
'funcrvalue',
'iftest',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'nameordefault',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 30
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 46
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'grammar.ra', 68
  def _reduce_17( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 74
  def _reduce_18( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_19( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_23( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

module_eval <<'.,.,', 'grammar.ra', 98
  def _reduce_27( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 28 omitted

module_eval <<'.,.,', 'grammar.ra', 109
  def _reduce_29( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 130
  def _reduce_30( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInst)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInst)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::ResourceDef,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 133
  def _reduce_31( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 136
  def _reduce_32( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 141
  def _reduce_33( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 168
  def _reduce_34( val, _values, result )
    type = val[0]

    if type == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect without storeconfigs being set"
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 169
  def _reduce_35( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 170
  def _reduce_36( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 193
  def _reduce_37( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect exported resources without storeconfigs being set"
    end
    result = ast AST::Collection, args
   result
  end
.,.,

 # reduce 38 omitted

 # reduce 39 omitted

module_eval <<'.,.,', 'grammar.ra', 204
  def _reduce_40( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 212
  def _reduce_41( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 42 omitted

 # reduce 43 omitted

module_eval <<'.,.,', 'grammar.ra', 220
  def _reduce_44( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 45 omitted

module_eval <<'.,.,', 'grammar.ra', 226
  def _reduce_46( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 47 omitted

 # reduce 48 omitted

module_eval <<'.,.,', 'grammar.ra', 234
  def _reduce_49( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 239
  def _reduce_50( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 51 omitted

 # reduce 52 omitted

module_eval <<'.,.,', 'grammar.ra', 246
  def _reduce_53( val, _values, result )
    result = ast AST::ResourceInst, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 54 omitted

module_eval <<'.,.,', 'grammar.ra', 256
  def _reduce_55( val, _values, result )
    if val[0].instance_of?(AST::ResourceInst)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 56 omitted

 # reduce 57 omitted

module_eval <<'.,.,', 'grammar.ra', 263
  def _reduce_58( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 267
  def _reduce_59( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 271
  def _reduce_60( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 61 omitted

 # reduce 62 omitted

 # reduce 63 omitted

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

module_eval <<'.,.,', 'grammar.ra', 287
  def _reduce_67( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 292
  def _reduce_68( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 292
  def _reduce_69( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 301
  def _reduce_70( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 305
  def _reduce_71( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 72 omitted

module_eval <<'.,.,', 'grammar.ra', 314
  def _reduce_73( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 74 omitted

 # reduce 75 omitted

 # reduce 76 omitted

 # reduce 77 omitted

 # reduce 78 omitted

 # reduce 79 omitted

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_90( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 346
  def _reduce_91( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 350
  def _reduce_92( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 352
  def _reduce_93( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 356
  def _reduce_94( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 361
  def _reduce_95( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 363
  def _reduce_96( val, _values, result )
    result = ast AST::ResourceRef, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 376
  def _reduce_97( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 98 omitted

module_eval <<'.,.,', 'grammar.ra', 381
  def _reduce_99( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 100 omitted

module_eval <<'.,.,', 'grammar.ra', 393
  def _reduce_101( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 102 omitted

module_eval <<'.,.,', 'grammar.ra', 403
  def _reduce_103( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 407
  def _reduce_104( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 412
  def _reduce_105( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 106 omitted

module_eval <<'.,.,', 'grammar.ra', 422
  def _reduce_107( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 426
  def _reduce_108( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 109 omitted

module_eval <<'.,.,', 'grammar.ra', 428
  def _reduce_110( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 111 omitted

module_eval <<'.,.,', 'grammar.ra', 439
  def _reduce_112( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 443
  def _reduce_113( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 114 omitted

 # reduce 115 omitted

 # reduce 116 omitted

 # reduce 117 omitted

 # reduce 118 omitted

 # reduce 119 omitted

 # reduce 120 omitted

module_eval <<'.,.,', 'grammar.ra', 454
  def _reduce_121( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_122( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 460
  def _reduce_123( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 468
  def _reduce_124( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 478
  def _reduce_125( val, _values, result )
    interp.newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 482
  def _reduce_126( val, _values, result )
    interp.newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 490
  def _reduce_127( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 495
  def _reduce_128( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    interp.newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 500
  def _reduce_129( val, _values, result )
    interp.newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 503
  def _reduce_130( val, _values, result )
    interp.newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 131 omitted

 # reduce 132 omitted

 # reduce 133 omitted

module_eval <<'.,.,', 'grammar.ra', 515
  def _reduce_134( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 135 omitted

 # reduce 136 omitted

 # reduce 137 omitted

module_eval <<'.,.,', 'grammar.ra', 523
  def _reduce_138( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 527
  def _reduce_139( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 140 omitted

module_eval <<'.,.,', 'grammar.ra', 532
  def _reduce_141( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 536
  def _reduce_142( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 143 omitted

module_eval <<'.,.,', 'grammar.ra', 543
  def _reduce_144( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 548
  def _reduce_145( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 552
  def _reduce_146( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 554
  def _reduce_147( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 556
  def _reduce_148( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 149 omitted

module_eval <<'.,.,', 'grammar.ra', 561
  def _reduce_150( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 151 omitted

module_eval <<'.,.,', 'grammar.ra', 566
  def _reduce_152( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 153 omitted

 # reduce 154 omitted

 # reduce 155 omitted

 # reduce 156 omitted

module_eval <<'.,.,', 'grammar.ra', 573
  def _reduce_157( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 581
  def _reduce_158( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 583
  def _reduce_159( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 160 omitted

 # reduce 161 omitted

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 588
  def _reduce_163( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
