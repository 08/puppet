#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id8b4fcf8e20', 'grammar.ra', 640

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id8b4fcf8e20

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 53, :_reduce_1,
 1, 53, :_reduce_none,
 1, 54, :_reduce_none,
 2, 54, :_reduce_4,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 4, 64, :_reduce_17,
 3, 64, :_reduce_18,
 2, 64, :_reduce_19,
 1, 69, :_reduce_none,
 1, 69, :_reduce_none,
 1, 70, :_reduce_none,
 3, 70, :_reduce_23,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_31,
 1, 71, :_reduce_none,
 3, 71, :_reduce_33,
 5, 57, :_reduce_34,
 5, 57, :_reduce_35,
 5, 57, :_reduce_36,
 5, 68, :_reduce_37,
 2, 58, :_reduce_38,
 1, 88, :_reduce_39,
 2, 88, :_reduce_40,
 2, 59, :_reduce_41,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 3, 90, :_reduce_44,
 3, 90, :_reduce_45,
 1, 91, :_reduce_none,
 1, 91, :_reduce_none,
 3, 91, :_reduce_48,
 1, 92, :_reduce_none,
 3, 92, :_reduce_50,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 3, 94, :_reduce_53,
 3, 94, :_reduce_54,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 4, 97, :_reduce_57,
 1, 82, :_reduce_none,
 3, 82, :_reduce_59,
 0, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 99, :_reduce_62,
 1, 73, :_reduce_63,
 1, 75, :_reduce_64,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 1, 98, :_reduce_none,
 3, 60, :_reduce_71,
 0, 84, :_reduce_72,
 1, 84, :_reduce_73,
 3, 84, :_reduce_74,
 3, 102, :_reduce_75,
 3, 103, :_reduce_76,
 1, 104, :_reduce_none,
 1, 104, :_reduce_none,
 0, 87, :_reduce_79,
 1, 87, :_reduce_80,
 3, 87, :_reduce_81,
 1, 105, :_reduce_none,
 3, 105, :_reduce_83,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 96, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 1, 101, :_reduce_none,
 4, 77, :_reduce_100,
 3, 77, :_reduce_101,
 1, 79, :_reduce_102,
 1, 79, :_reduce_103,
 1, 76, :_reduce_104,
 4, 80, :_reduce_105,
 4, 80, :_reduce_106,
 6, 62, :_reduce_107,
 0, 108, :_reduce_none,
 4, 108, :_reduce_109,
 1, 107, :_reduce_none,
 5, 61, :_reduce_111,
 1, 109, :_reduce_none,
 2, 109, :_reduce_113,
 5, 110, :_reduce_114,
 4, 110, :_reduce_115,
 1, 111, :_reduce_none,
 3, 111, :_reduce_117,
 3, 78, :_reduce_118,
 1, 113, :_reduce_none,
 4, 113, :_reduce_120,
 1, 115, :_reduce_none,
 3, 115, :_reduce_122,
 3, 114, :_reduce_123,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_none,
 1, 112, :_reduce_131,
 1, 116, :_reduce_132,
 3, 116, :_reduce_133,
 2, 63, :_reduce_134,
 6, 65, :_reduce_135,
 5, 65, :_reduce_136,
 6, 66, :_reduce_137,
 5, 66, :_reduce_138,
 6, 67, :_reduce_139,
 5, 67, :_reduce_140,
 1, 86, :_reduce_none,
 1, 86, :_reduce_none,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 119, :_reduce_none,
 3, 119, :_reduce_146,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 1, 121, :_reduce_none,
 0, 55, :_reduce_151,
 0, 122, :_reduce_152,
 1, 117, :_reduce_none,
 3, 117, :_reduce_154,
 3, 117, :_reduce_155,
 1, 123, :_reduce_none,
 3, 123, :_reduce_157,
 3, 124, :_reduce_158,
 1, 124, :_reduce_159,
 3, 124, :_reduce_160,
 1, 124, :_reduce_161,
 1, 120, :_reduce_none,
 2, 120, :_reduce_163,
 1, 118, :_reduce_none,
 2, 118, :_reduce_165,
 1, 125, :_reduce_none,
 1, 125, :_reduce_none,
 1, 74, :_reduce_168,
 3, 100, :_reduce_169,
 2, 100, :_reduce_170,
 1, 106, :_reduce_none,
 1, 106, :_reduce_none,
 0, 85, :_reduce_none,
 1, 85, :_reduce_174 ]

racc_reduce_n = 175

racc_shift_n = 279

racc_action_table = [
    81,    60,    64,   103,   173,   165,    81,    60,    64,   145,
    37,   167,    58,  -141,    51,    97,    70,  -141,   115,   107,
   166,  -125,    70,    41,    81,    60,    64,    44,    45,    37,
   196,    51,   142,   162,   163,    63,    66,    51,    10,    72,
   130,    63,    66,   114,    10,    72,   172,    42,    68,    36,
    10,    81,    60,    64,    68,    51,     5,    10,   217,    63,
   127,   173,    46,    72,   180,    47,   251,    70,   207,    81,
    60,    64,    68,   211,   142,    81,    60,    64,   103,   250,
    44,    45,    51,   162,   163,    70,    63,    66,   197,    51,
    72,    70,   199,   200,   107,    10,    81,    60,    64,    68,
    51,   181,   245,    95,    63,    66,    51,    96,    72,   244,
    63,    66,    70,    10,    72,    46,  -130,    68,    47,    10,
    81,    60,    64,    68,   199,   262,    36,    51,   191,   159,
    36,    63,    66,     5,  -129,    72,    70,     5,  -125,    36,
    10,    58,    60,    64,    68,  -143,     5,    81,    60,    64,
    95,    51,    44,    45,   179,    63,    66,    70,   103,    72,
  -127,    54,  -124,    70,    10,    81,    60,    64,    68,    51,
   207,  -124,    51,   176,   107,   211,    63,    66,    51,   212,
    72,    70,    63,    66,    55,    10,    72,    46,   213,    68,
    47,    10,    81,    60,    64,    68,    51,    60,    64,   173,
    63,    66,   168,   103,    72,   179,   162,   163,    70,    10,
    81,    60,    64,    68,    51,  -141,    81,    60,    64,   107,
    60,    64,  -126,    51,   175,   143,    70,    63,    66,  -128,
   141,    72,    70,  -126,   139,   231,    10,    81,    60,    64,
    68,    51,   120,  -128,   234,    63,    66,    51,   235,    72,
   154,    63,    66,   130,    10,    72,    60,    64,    68,   154,
    10,   238,    60,    64,    68,   142,   120,   241,    51,   171,
  -126,   130,    63,   186,  -124,   147,    72,   130,    60,    64,
    60,    64,   101,   248,   249,    68,    51,   160,   252,    96,
    63,   186,    51,   130,    72,   130,    63,   186,   255,  -127,
    72,  -126,  -124,    68,    60,    64,    60,    64,    51,    68,
    51,  -127,    63,   186,    63,   186,    72,  -125,    72,    70,
  -129,   130,    60,    64,   193,    68,   247,    68,    60,    64,
  -125,   187,   179,    94,    51,   156,    51,   130,    63,    66,
    63,   186,    72,   130,    72,   263,    55,    10,   265,   154,
  -127,    68,    51,    68,   150,   149,    63,   186,    51,    50,
    72,    49,    63,   186,    60,    64,    72,   272,  -174,    68,
    60,    64,   273,   148,  -129,    68,    34,    58,   nil,    70,
    60,    64,   nil,   nil,   137,   130,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    51,   130,   nil,   nil,    63,    66,
    51,   nil,    72,   nil,    63,   186,    55,    10,    72,   278,
    51,    68,   nil,   nil,    63,   186,   nil,    68,    72,   nil,
    23,   nil,    55,   nil,   nil,   nil,   nil,    68,   243,   nil,
    20,   nil,    25,    27,   nil,     1,     6,   nil,    13,    23,
    18,   nil,    22,   nil,    28,   nil,   nil,     5,    10,    20,
   nil,    25,    27,   253,     1,     6,   nil,    13,   nil,    18,
   nil,    22,   nil,    28,    23,   nil,     5,    10,   nil,   nil,
   nil,   nil,   274,   nil,    20,   nil,    25,    27,   nil,     1,
     6,   nil,    13,    23,    18,   nil,    22,   nil,    28,   nil,
   nil,     5,    10,    20,   nil,    25,    27,   227,     1,     6,
   nil,    13,   nil,    18,   nil,    22,   nil,    28,    23,   nil,
     5,    10,   nil,   nil,   nil,   nil,   256,   nil,    20,   nil,
    25,    27,   nil,     1,     6,   nil,    13,    23,    18,   nil,
    22,   nil,    28,   nil,   nil,     5,    10,    20,   nil,    25,
    27,   257,     1,     6,   nil,    13,   nil,    18,   nil,    22,
   nil,    28,    23,   nil,     5,    10,   nil,   nil,   nil,   nil,
   277,   nil,    20,   nil,    25,    27,   nil,     1,     6,   nil,
    13,    23,    18,   nil,    22,   nil,    28,   nil,   nil,     5,
    10,    20,   nil,    25,    27,   270,     1,     6,   nil,    13,
   nil,    18,   nil,    22,   nil,    28,    23,   nil,     5,    10,
   nil,   nil,   nil,   nil,   215,   nil,    20,   nil,    25,    27,
   nil,     1,     6,   nil,    13,    23,    18,   nil,    22,   nil,
    28,   nil,   nil,     5,    10,    20,   nil,    25,    27,   nil,
     1,     6,   nil,    13,    23,    18,   nil,    22,   nil,    28,
   nil,   nil,     5,    10,    20,   nil,    25,    27,   nil,     1,
     6,   nil,    13,    23,    18,   nil,    22,   nil,    28,   nil,
   nil,     5,    10,    20,   nil,    25,    27,   nil,     1,     6,
   nil,    13,    23,    18,   nil,    22,   nil,    28,   nil,   nil,
     5,    10,    20,   nil,    25,    27,   nil,     1,     6,   nil,
    13,    23,    18,   nil,    22,   nil,    28,   nil,   nil,     5,
    10,    20,   nil,    25,    27,   nil,     1,     6,   nil,    13,
   nil,    18,   nil,    22,   nil,    28,   nil,   nil,     5,    10 ]

racc_action_check = [
    95,    95,    95,    41,   120,   105,    81,    81,    81,    81,
   143,   110,    66,    23,    41,    31,    95,    23,    48,    41,
   110,   133,    81,     7,    50,    50,    50,   115,   115,     2,
   143,    95,    66,   105,   105,    95,    95,    81,   143,    95,
    50,    81,    81,    48,    95,    81,   120,     7,    95,     2,
    81,   198,   198,   198,    81,    50,     2,     2,   161,    50,
    50,   127,   115,    50,   136,   115,   209,   198,   251,   173,
   173,   173,    50,   251,   127,    58,    58,    58,    42,   209,
    13,    13,   198,   161,   161,   173,   198,   198,   146,    42,
   198,    58,   146,   146,    42,   198,    34,    34,    34,   198,
   173,   138,   203,    29,   173,   173,    58,    29,   173,   203,
    58,    58,    34,   173,    58,    13,    77,   173,    13,    58,
   172,   172,   172,    58,   240,   240,   101,    34,   140,   101,
     6,    34,    34,   101,    76,    34,   172,     6,    75,    27,
    34,    18,    18,    18,    34,    18,    27,    20,    20,    20,
    74,   172,   114,   114,   131,   172,   172,    18,   164,   172,
    73,    18,    71,    20,   172,    22,    22,    22,   172,   164,
   150,   129,    18,   128,   164,   150,    18,    18,    20,   152,
    18,    22,    20,    20,    18,    18,    20,   114,   153,    18,
   114,    20,   252,   252,   252,    20,    22,   149,   149,   154,
    22,    22,   112,   103,    22,   155,   112,   112,   252,    22,
   248,   248,   248,    22,   103,    70,   238,   238,   238,   103,
    25,    25,   125,   252,   121,    67,   248,   252,   252,    78,
    65,   252,   238,    59,    57,   174,   252,   176,   176,   176,
   252,   248,   175,    53,   177,   248,   248,   238,   178,   248,
   179,   238,   238,   176,   248,   238,   166,   166,   248,   180,
   238,   183,   167,   167,   238,   186,    49,   194,   176,   116,
    83,   166,   176,   176,    85,    86,   176,   167,   148,   148,
   260,   260,    39,   207,   208,   176,   166,   102,   211,    38,
   166,   166,   167,   148,   166,   260,   167,   167,   214,   132,
   167,   220,   221,   166,   142,   142,   245,   245,   148,   167,
   260,   222,   148,   148,   260,   260,   148,   224,   260,   142,
   225,   245,   205,   205,   142,   148,   205,   260,   139,   139,
    88,   139,   237,    28,   142,    97,   245,   205,   142,   142,
   245,   245,   142,   139,   245,   243,   142,   142,   244,    96,
    87,   142,   205,   245,    93,    92,   205,   205,   139,    16,
   205,    14,   139,   139,    54,    54,   139,   261,   262,   205,
   187,   187,   263,    90,    89,   139,     1,   196,   nil,    54,
   141,   141,   nil,   nil,    54,   187,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    54,   141,   nil,   nil,    54,    54,
   187,   nil,    54,   nil,   187,   187,    54,    54,   187,   276,
   141,    54,   nil,   nil,   141,   141,   nil,   187,   141,   nil,
   276,   nil,   141,   nil,   nil,   nil,   nil,   141,   201,   nil,
   276,   nil,   276,   276,   nil,   276,   276,   nil,   276,   201,
   276,   nil,   276,   nil,   276,   nil,   nil,   276,   276,   201,
   nil,   201,   201,   212,   201,   201,   nil,   201,   nil,   201,
   nil,   201,   nil,   201,   212,   nil,   201,   201,   nil,   nil,
   nil,   nil,   265,   nil,   212,   nil,   212,   212,   nil,   212,
   212,   nil,   212,   265,   212,   nil,   212,   nil,   212,   nil,
   nil,   212,   212,   265,   nil,   265,   265,   171,   265,   265,
   nil,   265,   nil,   265,   nil,   265,   nil,   265,   171,   nil,
   265,   265,   nil,   nil,   nil,   nil,   216,   nil,   171,   nil,
   171,   171,   nil,   171,   171,   nil,   171,   216,   171,   nil,
   171,   nil,   171,   nil,   nil,   171,   171,   216,   nil,   216,
   216,   228,   216,   216,   nil,   216,   nil,   216,   nil,   216,
   nil,   216,   228,   nil,   216,   216,   nil,   nil,   nil,   nil,
   275,   nil,   228,   nil,   228,   228,   nil,   228,   228,   nil,
   228,   275,   228,   nil,   228,   nil,   228,   nil,   nil,   228,
   228,   275,   nil,   275,   275,   254,   275,   275,   nil,   275,
   nil,   275,   nil,   275,   nil,   275,   254,   nil,   275,   275,
   nil,   nil,   nil,   nil,   160,   nil,   254,   nil,   254,   254,
   nil,   254,   254,   nil,   254,   160,   254,   nil,   254,   nil,
   254,   nil,   nil,   254,   254,   160,   nil,   160,   160,   nil,
   160,   160,   nil,   160,   273,   160,   nil,   160,   nil,   160,
   nil,   nil,   160,   160,   273,   nil,   273,   273,   nil,   273,
   273,   nil,   273,   147,   273,   nil,   273,   nil,   273,   nil,
   nil,   273,   273,   147,   nil,   147,   147,   nil,   147,   147,
   nil,   147,    33,   147,   nil,   147,   nil,   147,   nil,   nil,
   147,   147,    33,   nil,    33,    33,   nil,    33,    33,   nil,
    33,     0,    33,   nil,    33,   nil,    33,   nil,   nil,    33,
    33,     0,   nil,     0,     0,   nil,     0,     0,   nil,     0,
   nil,     0,   nil,     0,   nil,     0,   nil,   nil,     0,     0 ]

racc_action_pointer = [
   673,   363,    11,   nil,   nil,   nil,    92,     4,   nil,   nil,
   nil,   nil,   nil,    77,   355,   nil,   353,   nil,   139,   nil,
   145,   nil,   163,    11,   nil,   217,   nil,   101,   291,   101,
   nil,    15,   nil,   654,    94,   nil,   nil,   nil,   283,   247,
   nil,   -19,    56,   nil,   nil,   nil,   nil,   nil,     8,   228,
    22,   nil,   nil,   222,   361,   nil,   nil,   213,    73,   212,
   nil,   nil,   nil,   nil,   nil,   220,    10,   215,   nil,   nil,
   213,   141,   nil,   139,   148,   117,   113,    95,   208,   nil,
   nil,     4,   nil,   249,   nil,   253,   269,   329,   309,   353,
   367,   nil,   345,   332,   nil,    -2,   311,   335,   nil,   nil,
   nil,    88,   281,   181,   nil,   -15,   nil,   nil,   nil,   nil,
    -4,   nil,   158,   nil,   149,    24,   263,   nil,   nil,   nil,
    -5,   214,   nil,   nil,   nil,   201,   nil,    52,   134,   150,
   nil,   144,   278,     0,   nil,   nil,    47,   nil,    78,   325,
   123,   377,   301,    -8,   nil,   nil,    83,   635,   275,   194,
   137,   nil,   173,   183,   190,   195,   nil,   nil,   nil,   nil,
   597,    35,   nil,   nil,   136,   nil,   253,   259,   nil,   nil,
   nil,   490,   118,    67,   228,   204,   235,   237,   241,   212,
   221,   nil,   nil,   252,   nil,   nil,   243,   367,   nil,   nil,
   nil,   nil,   nil,   nil,   244,   nil,   375,   nil,    49,   nil,
   nil,   421,   nil,    92,   nil,   319,   nil,   270,   261,    56,
   nil,   275,   446,   nil,   291,   nil,   509,   nil,   nil,   nil,
   280,   281,   290,   nil,   296,   299,   nil,   nil,   534,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   322,   214,   nil,
   115,   nil,   nil,   316,   342,   303,   nil,   nil,   208,   nil,
   nil,    35,   190,   nil,   578,   nil,   nil,   nil,   nil,   nil,
   277,   360,   361,   366,   nil,   465,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   616,   nil,   553,   402,   nil,   nil ]

racc_action_default = [
  -151,  -175,  -175,   -14,    -2,  -144,  -175,  -175,   -15,    -3,
  -142,   -16,    -5,  -175,  -175,    -6,  -175,    -7,   -43,    -8,
  -175,    -9,  -175,   -42,   -10,  -175,   -11,  -175,   -39,  -175,
   -12,  -175,   -13,    -1,  -175,   -38,  -143,  -141,  -175,  -151,
   -41,  -151,  -151,  -145,  -149,  -148,  -147,  -150,  -151,   -79,
   -72,  -168,  -130,   -28,  -175,   -31,   -29,  -175,  -175,   -30,
  -102,   -32,   -19,  -104,  -103,   -20,   -63,   -21,   -62,   -22,
   -64,   -24,  -131,   -25,  -175,   -26,   -27,   -99,   -98,   -96,
   -94,  -175,  -110,   -90,   -97,   -91,  -175,   -95,   -92,   -93,
  -175,  -132,  -134,  -151,   -40,  -175,   -72,  -175,    -4,   -71,
  -164,  -175,  -175,  -151,   -46,  -175,   -47,   -63,   -49,   -56,
  -175,   -55,  -175,  -162,  -175,  -175,  -175,   -77,   -78,   -80,
  -175,  -173,  -128,   -70,   -68,   -65,   -73,   -63,   -60,   -66,
   -64,  -173,   -69,   -67,   -58,  -129,  -175,   -18,  -175,  -175,
  -175,  -175,  -175,  -175,   -82,  -170,  -175,  -175,  -175,  -175,
  -152,  -153,  -175,  -175,  -175,  -173,   279,  -166,  -165,  -167,
  -175,  -175,   -52,   -51,  -175,   -45,  -175,  -175,   -44,  -163,
  -146,  -175,  -175,  -175,  -175,  -174,   -61,  -175,  -175,  -174,
   -72,   -17,  -126,  -175,  -118,  -119,   -63,  -175,  -124,  -127,
  -125,  -105,   -23,  -101,  -175,   -33,  -175,  -169,  -175,  -171,
  -172,  -175,  -112,  -175,  -116,  -175,  -133,  -161,  -175,  -175,
  -156,  -159,  -175,  -106,  -175,  -138,  -175,   -50,   -48,   -88,
   -84,   -85,   -89,   -53,   -86,   -87,   -54,  -140,  -175,   -76,
   -75,   -37,   -81,   -59,   -34,   -35,   -74,  -173,  -175,  -121,
  -173,  -100,   -83,  -108,  -175,  -175,  -113,  -111,  -175,  -154,
  -155,  -175,  -175,  -136,  -175,   -36,  -137,  -139,   -57,  -123,
  -175,  -175,  -172,  -175,  -107,  -175,  -117,  -160,  -157,  -158,
  -135,  -122,  -120,  -175,  -115,  -175,  -175,  -114,  -109 ]

racc_goto_table = [
    29,    33,    38,   131,   185,    98,   117,    53,   123,   119,
   174,    43,   134,    31,   210,    62,    39,   105,   112,   202,
   178,   218,   198,   223,   226,     4,   146,    40,    86,   264,
   205,   121,    77,    29,    77,   177,   184,    93,   128,   122,
   240,    92,   152,    53,   214,   102,    77,    48,   183,   155,
   116,   138,   239,   192,   208,   209,    59,   204,    35,   158,
   nil,   nil,   nil,    91,   100,   nil,   nil,   nil,   nil,    76,
    77,   nil,   nil,   113,   nil,   nil,   246,   nil,   nil,   161,
   nil,   nil,   nil,   nil,    82,   nil,    90,   nil,   125,   nil,
   nil,   nil,    59,    77,   nil,   nil,   183,   nil,    99,   nil,
   nil,   135,   nil,   nil,   nil,    76,   nil,    77,   nil,   nil,
   nil,   157,   169,   170,   204,   268,   260,   nil,   151,   nil,
   nil,    75,   140,   nil,   nil,   271,   258,   nil,   122,   261,
    53,    53,   117,   237,   123,   232,   236,   122,   233,   194,
   nil,   nil,   nil,   nil,   nil,   144,   nil,    29,   201,   nil,
   nil,   nil,   nil,   133,   266,   122,   122,    75,   nil,   153,
    29,   216,   nil,   nil,   nil,   122,   nil,   nil,   nil,   183,
   nil,    29,   228,    98,   nil,   nil,   122,   182,   nil,    59,
    59,   nil,   nil,    71,    77,    77,   182,   206,    98,   nil,
   135,   nil,    76,    76,   122,   nil,   nil,    73,   nil,   135,
    98,    29,   nil,   nil,   220,   220,   109,   109,   nil,   nil,
    77,   nil,    29,   254,   125,   129,    29,   225,   225,    71,
   111,   111,   nil,   nil,   nil,   182,    98,   135,    29,   132,
   nil,   nil,   nil,    73,   122,   nil,   229,   230,   135,   nil,
   nil,   nil,   190,   182,    75,    75,   nil,    98,    98,   122,
    77,   190,   nil,    56,    29,   nil,   135,   nil,   nil,   nil,
    77,   nil,   242,   nil,    77,    29,   275,   nil,   109,   224,
   224,   nil,   nil,    29,   276,    29,    29,   nil,   nil,   133,
   nil,   nil,   111,   182,   nil,   124,   nil,   nil,   nil,    56,
   190,   nil,   nil,   nil,   nil,   nil,   135,   nil,   182,   nil,
   nil,   nil,   259,   nil,   188,   nil,    71,    71,   190,   nil,
   nil,   135,   267,   188,   nil,   nil,   269,   nil,   189,   nil,
    73,    73,    61,   nil,    84,   nil,    84,   189,   nil,   109,
   nil,   221,   221,   nil,   nil,   nil,   nil,   nil,    84,   nil,
   nil,   129,   nil,   111,   nil,   222,   222,   nil,   190,   nil,
   nil,   nil,   188,   nil,   nil,   132,   nil,   nil,    61,   nil,
   nil,   nil,    84,   190,   nil,   nil,   189,   nil,   nil,   nil,
   188,   nil,   nil,   nil,   nil,   nil,    56,    56,   nil,   nil,
   nil,   nil,   nil,   nil,   189,    84,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    84,
   nil,   219,   219,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   188,   124,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   189,   188,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   189,
   nil,   nil,   nil,   nil,   nil,   nil,    61,   195,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    84,    84,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    84,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    84,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    84,   nil,   nil,   nil,    84 ]

racc_goto_check = [
    34,     2,    34,    32,    62,     4,    50,    25,    48,    52,
    33,    69,    45,     1,    72,    17,    29,    39,    39,    58,
    33,    40,    54,    44,    44,     3,    53,    38,    55,    56,
    57,    35,    47,    34,    47,    31,    61,    29,    30,    25,
    63,    64,    65,    25,    33,    66,    47,    67,    60,    32,
    68,    17,    62,    20,    70,    71,    27,    60,     5,    73,
   nil,   nil,   nil,    27,     3,   nil,   nil,   nil,   nil,    24,
    47,   nil,   nil,     3,   nil,   nil,    58,   nil,   nil,    39,
   nil,   nil,   nil,   nil,    49,   nil,    49,   nil,    27,   nil,
   nil,   nil,    27,    47,   nil,   nil,    60,   nil,    49,   nil,
   nil,    24,   nil,   nil,   nil,    24,   nil,    47,   nil,   nil,
   nil,    29,    69,    69,    60,    72,    54,   nil,     3,   nil,
   nil,    23,    49,   nil,   nil,    62,    33,   nil,    25,    33,
    25,    25,    50,    32,    48,    52,    50,    25,    45,    17,
   nil,   nil,   nil,   nil,   nil,    49,   nil,    34,     2,   nil,
   nil,   nil,   nil,    23,    60,    25,    25,    23,   nil,    49,
    34,     2,   nil,   nil,   nil,    25,   nil,   nil,   nil,    60,
   nil,    34,     2,     4,   nil,   nil,    25,    27,   nil,    27,
    27,   nil,   nil,    21,    47,    47,    27,    27,     4,   nil,
    24,   nil,    24,    24,    25,   nil,   nil,    22,   nil,    24,
     4,    34,   nil,   nil,    27,    27,    21,    21,   nil,   nil,
    47,   nil,    34,     2,    27,    21,    34,    24,    24,    21,
    22,    22,   nil,   nil,   nil,    27,     4,    24,    34,    22,
   nil,   nil,   nil,    22,    25,   nil,    49,    49,    24,   nil,
   nil,   nil,    23,    27,    23,    23,   nil,     4,     4,    25,
    47,    23,   nil,    26,    34,   nil,    24,   nil,   nil,   nil,
    47,   nil,    49,   nil,    47,    34,     2,   nil,    21,    23,
    23,   nil,   nil,    34,     2,    34,    34,   nil,   nil,    23,
   nil,   nil,    22,    27,   nil,    26,   nil,   nil,   nil,    26,
    23,   nil,   nil,   nil,   nil,   nil,    24,   nil,    27,   nil,
   nil,   nil,    49,   nil,    21,   nil,    21,    21,    23,   nil,
   nil,    24,    49,    21,   nil,   nil,    49,   nil,    22,   nil,
    22,    22,    28,   nil,    28,   nil,    28,    22,   nil,    21,
   nil,    21,    21,   nil,   nil,   nil,   nil,   nil,    28,   nil,
   nil,    21,   nil,    22,   nil,    22,    22,   nil,    23,   nil,
   nil,   nil,    21,   nil,   nil,    22,   nil,   nil,    28,   nil,
   nil,   nil,    28,    23,   nil,   nil,    22,   nil,   nil,   nil,
    21,   nil,   nil,   nil,   nil,   nil,    26,    26,   nil,   nil,
   nil,   nil,   nil,   nil,    22,    28,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    28,
   nil,    26,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    21,    26,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    22,    21,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    22,
   nil,   nil,   nil,   nil,   nil,   nil,    28,    28,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    28,    28,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    28,   nil,   nil,   nil,    28 ]

racc_goto_pointer = [
   nil,    13,     1,    25,   -28,    56,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -3,   nil,   nil,
   -88,   165,   179,   103,    51,   -11,   235,    38,   304,    10,
   -12,   -93,   -47,  -111,     0,   -18,   nil,   nil,    20,   -24,
  -143,   nil,   nil,   nil,  -143,   -38,   nil,    12,   -42,    64,
   -43,   nil,   -40,   -55,  -124,     8,  -214,  -118,  -129,   nil,
   -91,  -103,  -135,  -147,    16,   -51,     6,    34,     2,    -2,
   -96,   -95,  -136,   -42 ]

racc_goto_default = [
   nil,   nil,   nil,   104,     9,    12,    15,    17,    19,    21,
    24,    26,    30,    32,     3,     8,    11,   nil,    65,    67,
    69,    85,    87,    88,    89,    78,    80,    83,    14,    16,
   nil,   nil,   nil,   nil,    74,   nil,     2,     7,   nil,   nil,
   106,   164,   108,   110,   nil,   nil,   136,    52,    79,   nil,
   126,   118,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   203,
    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :LESSEQUAL => 14,
 :NOTEQUAL => 15,
 :DOT => 16,
 :COLON => 17,
 :TYPE => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51 }

racc_use_result_var = true

racc_nt_base = 52

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'TYPE',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectname',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'rvalue',
'param',
'addparam',
'anyparam',
'rvalues',
'comma',
'iftest',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 30
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 46
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'grammar.ra', 68
  def _reduce_17( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 74
  def _reduce_18( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_19( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_23( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_31( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 115
  def _reduce_33( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 136
  def _reduce_34( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 139
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 142
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 147
  def _reduce_37( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 174
  def _reduce_38( val, _values, result )
    type = val[0]

    if type == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect without storeconfigs being set"
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 175
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 176
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 199
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect exported resources without storeconfigs being set"
    end
    result = ast AST::Collection, args
   result
  end
.,.,

 # reduce 42 omitted

 # reduce 43 omitted

module_eval <<'.,.,', 'grammar.ra', 210
  def _reduce_44( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 218
  def _reduce_45( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 46 omitted

 # reduce 47 omitted

module_eval <<'.,.,', 'grammar.ra', 226
  def _reduce_48( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 49 omitted

module_eval <<'.,.,', 'grammar.ra', 232
  def _reduce_50( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 51 omitted

 # reduce 52 omitted

module_eval <<'.,.,', 'grammar.ra', 240
  def _reduce_53( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 245
  def _reduce_54( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 55 omitted

 # reduce 56 omitted

module_eval <<'.,.,', 'grammar.ra', 252
  def _reduce_57( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 58 omitted

module_eval <<'.,.,', 'grammar.ra', 262
  def _reduce_59( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 60 omitted

 # reduce 61 omitted

module_eval <<'.,.,', 'grammar.ra', 269
  def _reduce_62( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 273
  def _reduce_63( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 277
  def _reduce_64( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

 # reduce 69 omitted

 # reduce 70 omitted

module_eval <<'.,.,', 'grammar.ra', 293
  def _reduce_71( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 298
  def _reduce_72( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 298
  def _reduce_73( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 307
  def _reduce_74( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 311
  def _reduce_75( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 316
  def _reduce_76( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 77 omitted

 # reduce 78 omitted

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_79( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 324
  def _reduce_80( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 333
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 342
  def _reduce_83( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

 # reduce 98 omitted

 # reduce 99 omitted

module_eval <<'.,.,', 'grammar.ra', 369
  def _reduce_100( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 374
  def _reduce_101( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 378
  def _reduce_102( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 380
  def _reduce_103( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 384
  def _reduce_104( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 389
  def _reduce_105( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 391
  def _reduce_106( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 404
  def _reduce_107( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 108 omitted

module_eval <<'.,.,', 'grammar.ra', 409
  def _reduce_109( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 110 omitted

module_eval <<'.,.,', 'grammar.ra', 421
  def _reduce_111( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 112 omitted

module_eval <<'.,.,', 'grammar.ra', 431
  def _reduce_113( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 435
  def _reduce_114( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 440
  def _reduce_115( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 116 omitted

module_eval <<'.,.,', 'grammar.ra', 450
  def _reduce_117( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 454
  def _reduce_118( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 119 omitted

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_120( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 121 omitted

module_eval <<'.,.,', 'grammar.ra', 467
  def _reduce_122( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 471
  def _reduce_123( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 124 omitted

 # reduce 125 omitted

 # reduce 126 omitted

 # reduce 127 omitted

 # reduce 128 omitted

 # reduce 129 omitted

 # reduce 130 omitted

module_eval <<'.,.,', 'grammar.ra', 482
  def _reduce_131( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 484
  def _reduce_132( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 488
  def _reduce_133( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 496
  def _reduce_134( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 506
  def _reduce_135( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 510
  def _reduce_136( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 518
  def _reduce_137( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 523
  def _reduce_138( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 528
  def _reduce_139( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 531
  def _reduce_140( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 141 omitted

 # reduce 142 omitted

 # reduce 143 omitted

 # reduce 144 omitted

 # reduce 145 omitted

module_eval <<'.,.,', 'grammar.ra', 546
  def _reduce_146( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 147 omitted

 # reduce 148 omitted

 # reduce 149 omitted

 # reduce 150 omitted

module_eval <<'.,.,', 'grammar.ra', 555
  def _reduce_151( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 559
  def _reduce_152( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 153 omitted

module_eval <<'.,.,', 'grammar.ra', 564
  def _reduce_154( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 568
  def _reduce_155( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 156 omitted

module_eval <<'.,.,', 'grammar.ra', 575
  def _reduce_157( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 580
  def _reduce_158( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 584
  def _reduce_159( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 586
  def _reduce_160( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 588
  def _reduce_161( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 593
  def _reduce_163( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 164 omitted

module_eval <<'.,.,', 'grammar.ra', 598
  def _reduce_165( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 166 omitted

 # reduce 167 omitted

module_eval <<'.,.,', 'grammar.ra', 604
  def _reduce_168( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 612
  def _reduce_169( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 614
  def _reduce_170( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 171 omitted

 # reduce 172 omitted

 # reduce 173 omitted

module_eval <<'.,.,', 'grammar.ra', 619
  def _reduce_174( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
