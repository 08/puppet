#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'

module Puppet
  class ParseError < Puppet::Error; end
  class ImportError < Racc::ParseError; end
  class AlreadyImportedError < ImportError; end
end


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id6362f948d9', 'grammar.ra', 788

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id6362f948d9

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 70, :_reduce_none,
 1, 70, :_reduce_none,
 1, 71, :_reduce_3,
 2, 71, :_reduce_4,
 1, 74, :_reduce_5,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 1, 73, :_reduce_none,
 3, 88, :_reduce_20,
 3, 88, :_reduce_21,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 89, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 4, 82, :_reduce_29,
 5, 82, :_reduce_30,
 3, 82, :_reduce_31,
 2, 82, :_reduce_32,
 1, 92, :_reduce_33,
 1, 92, :_reduce_34,
 3, 92, :_reduce_35,
 3, 92, :_reduce_36,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_none,
 1, 93, :_reduce_45,
 5, 75, :_reduce_46,
 5, 75, :_reduce_47,
 5, 75, :_reduce_48,
 5, 86, :_reduce_49,
 2, 76, :_reduce_50,
 1, 109, :_reduce_51,
 2, 109, :_reduce_52,
 6, 77, :_reduce_53,
 2, 77, :_reduce_54,
 3, 110, :_reduce_55,
 3, 110, :_reduce_56,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 3, 111, :_reduce_59,
 1, 112, :_reduce_none,
 3, 112, :_reduce_61,
 1, 113, :_reduce_62,
 1, 113, :_reduce_63,
 3, 114, :_reduce_64,
 3, 114, :_reduce_65,
 1, 115, :_reduce_none,
 1, 115, :_reduce_none,
 4, 117, :_reduce_68,
 1, 103, :_reduce_69,
 3, 103, :_reduce_70,
 0, 104, :_reduce_none,
 1, 104, :_reduce_none,
 1, 119, :_reduce_73,
 1, 94, :_reduce_74,
 1, 96, :_reduce_75,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 1, 118, :_reduce_none,
 3, 78, :_reduce_83,
 3, 78, :_reduce_84,
 3, 87, :_reduce_85,
 0, 105, :_reduce_86,
 1, 105, :_reduce_87,
 3, 105, :_reduce_88,
 3, 123, :_reduce_89,
 3, 125, :_reduce_90,
 1, 126, :_reduce_none,
 1, 126, :_reduce_none,
 0, 108, :_reduce_93,
 1, 108, :_reduce_94,
 3, 108, :_reduce_95,
 1, 127, :_reduce_96,
 3, 127, :_reduce_97,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 116, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 4, 98, :_reduce_116,
 3, 98, :_reduce_117,
 1, 100, :_reduce_118,
 2, 100, :_reduce_119,
 2, 130, :_reduce_120,
 1, 131, :_reduce_121,
 2, 131, :_reduce_122,
 1, 97, :_reduce_123,
 4, 91, :_reduce_124,
 4, 91, :_reduce_125,
 2, 80, :_reduce_126,
 5, 132, :_reduce_127,
 4, 132, :_reduce_128,
 0, 133, :_reduce_none,
 2, 133, :_reduce_130,
 4, 133, :_reduce_131,
 3, 133, :_reduce_132,
 1, 121, :_reduce_none,
 3, 121, :_reduce_134,
 3, 121, :_reduce_135,
 3, 121, :_reduce_136,
 3, 121, :_reduce_137,
 3, 121, :_reduce_138,
 3, 121, :_reduce_139,
 3, 121, :_reduce_140,
 3, 121, :_reduce_141,
 3, 121, :_reduce_142,
 2, 121, :_reduce_143,
 3, 121, :_reduce_144,
 3, 121, :_reduce_145,
 3, 121, :_reduce_146,
 3, 121, :_reduce_147,
 3, 121, :_reduce_148,
 3, 121, :_reduce_149,
 2, 121, :_reduce_150,
 3, 121, :_reduce_151,
 3, 121, :_reduce_152,
 3, 121, :_reduce_153,
 5, 79, :_reduce_154,
 1, 135, :_reduce_155,
 2, 135, :_reduce_156,
 5, 136, :_reduce_157,
 4, 136, :_reduce_158,
 1, 137, :_reduce_159,
 3, 137, :_reduce_160,
 3, 99, :_reduce_161,
 1, 139, :_reduce_none,
 4, 139, :_reduce_163,
 1, 141, :_reduce_none,
 3, 141, :_reduce_165,
 3, 140, :_reduce_166,
 1, 138, :_reduce_none,
 1, 138, :_reduce_none,
 1, 138, :_reduce_none,
 1, 138, :_reduce_none,
 1, 138, :_reduce_none,
 1, 138, :_reduce_none,
 1, 138, :_reduce_none,
 1, 138, :_reduce_174,
 1, 138, :_reduce_none,
 1, 142, :_reduce_176,
 1, 143, :_reduce_none,
 3, 143, :_reduce_178,
 2, 81, :_reduce_179,
 6, 83, :_reduce_180,
 5, 83, :_reduce_181,
 7, 84, :_reduce_182,
 6, 84, :_reduce_183,
 6, 85, :_reduce_184,
 5, 85, :_reduce_185,
 1, 107, :_reduce_186,
 1, 102, :_reduce_187,
 1, 102, :_reduce_188,
 1, 102, :_reduce_189,
 1, 146, :_reduce_190,
 3, 146, :_reduce_191,
 1, 148, :_reduce_192,
 1, 149, :_reduce_193,
 1, 149, :_reduce_194,
 1, 149, :_reduce_195,
 1, 149, :_reduce_none,
 0, 72, :_reduce_197,
 0, 150, :_reduce_198,
 1, 144, :_reduce_none,
 3, 144, :_reduce_200,
 3, 144, :_reduce_201,
 1, 151, :_reduce_none,
 3, 151, :_reduce_203,
 3, 152, :_reduce_204,
 1, 152, :_reduce_205,
 3, 152, :_reduce_206,
 1, 152, :_reduce_207,
 1, 147, :_reduce_none,
 2, 147, :_reduce_209,
 1, 145, :_reduce_none,
 2, 145, :_reduce_211,
 1, 153, :_reduce_none,
 1, 153, :_reduce_none,
 1, 95, :_reduce_214,
 3, 120, :_reduce_215,
 4, 120, :_reduce_216,
 2, 120, :_reduce_217,
 1, 128, :_reduce_none,
 1, 128, :_reduce_none,
 0, 106, :_reduce_none,
 1, 106, :_reduce_221,
 1, 134, :_reduce_222,
 3, 129, :_reduce_223,
 4, 129, :_reduce_224,
 2, 129, :_reduce_225,
 1, 154, :_reduce_none,
 3, 154, :_reduce_227,
 3, 155, :_reduce_228,
 1, 156, :_reduce_229,
 1, 156, :_reduce_230,
 4, 122, :_reduce_231,
 1, 101, :_reduce_none,
 4, 101, :_reduce_233 ]

racc_reduce_n = 234

racc_shift_n = 385

racc_action_table = [
   242,   243,    55,   231,   356,   112,   157,   113,    78,   298,
    68,    71,   357,   181,   186,   326,   344,   340,    55,   295,
   114,   231,   177,   179,   182,   185,   170,   294,    68,    71,
   286,   158,   100,   285,   103,    68,    71,   291,   292,    55,
    59,   291,   292,    61,   111,   233,   180,   184,   198,   231,
   189,   172,   173,   174,   176,   178,    59,   183,   187,    61,
  -168,    66,   170,    60,   175,    79,    81,   186,   202,    88,
   112,   166,    79,   252,    74,   177,    88,    59,    84,    60,
    61,   139,    68,    71,   333,    84,   100,   117,   103,    60,
    36,  -170,    68,    71,    38,   306,    60,   307,   203,   240,
    60,    10,   203,   189,   172,   173,   174,   176,   178,   202,
   183,   187,   241,   202,   209,    66,   218,   175,   209,    79,
    81,   219,   284,    88,   309,   202,   256,   283,    74,    79,
   252,   308,    84,    88,   203,    68,    71,   310,   139,   100,
   203,   103,    84,    60,   218,   202,   256,   367,    36,   219,
   209,   202,    38,    60,    68,    71,   209,    95,   100,    10,
   103,    68,    71,    68,    71,   100,   337,   103,    66,   335,
   199,   154,    79,    81,   173,   174,    88,   183,   187,   183,
   187,    74,    99,    95,   175,    84,   175,    66,    90,   311,
   337,    79,    81,   335,    66,    88,    60,   287,    79,    81,
    74,   198,    88,   315,    84,    68,    71,    74,    99,  -172,
   213,    84,    68,    71,    90,    60,   100,    36,   103,    68,
    71,    38,    60,   100,   318,   103,    68,    71,    10,    15,
    36,  -167,   213,   355,    38,   167,    36,   313,   202,   154,
   127,    10,    79,   252,   323,    66,    88,    10,    15,    79,
    81,   139,    66,    88,   166,    84,    79,    81,    74,   202,
    88,   229,    84,    79,   252,    74,    60,    88,    49,    84,
    68,    71,   139,    60,    78,  -186,    84,    47,    48,    49,
    60,   329,    36,   170,   183,   187,   127,    60,  -169,    68,
    71,   175,    70,    10,    15,    68,    71,   161,  -171,   100,
   289,   103,  -169,    66,   291,   292,    60,    79,    81,   258,
  -167,    88,  -170,   256,   257,    72,    74,    95,  -168,    60,
    84,   156,    66,   154,    68,    71,    79,    81,    66,   122,
    88,    60,    79,    81,    72,    74,    88,  -170,  -173,    84,
  -172,    74,    99,    68,    71,    84,  -171,   100,    90,   103,
    60,   200,   334,    68,    71,   213,    60,   202,   215,   254,
   338,    79,   252,   173,   174,    88,   122,   296,   183,   187,
   139,   256,   257,   216,    84,   175,    66,   234,    68,    71,
    79,    81,   113,   117,    88,    60,   202,   217,    78,    74,
    79,   252,   353,    84,    88,    53,    68,    71,   223,   139,
   100,   260,   103,    84,    60,    43,    44,    40,    41,   358,
    52,    66,    51,   225,    60,    79,    81,  -169,   229,    88,
   365,    68,    71,    72,    74,   100,   238,   103,    84,    66,
   228,  -167,   234,    79,    81,   372,   373,    88,  -169,    60,
  -167,  -170,    74,    95,  -168,  -172,    84,    68,    71,    45,
   375,   100,   229,   103,    66,  -221,   232,    60,    79,    81,
   378,    39,    88,   -24,   -24,   -24,   -24,    74,    99,    95,
  -168,    84,   383,   384,    90,   nil,   nil,    68,    71,   nil,
    66,   100,    60,   103,    79,    81,   nil,   nil,    88,   -22,
   -22,   -22,   -22,    74,    99,   nil,   nil,    84,   nil,    95,
    90,   nil,   nil,    68,    71,   nil,   nil,   100,    60,   103,
    66,   nil,   nil,   nil,    79,    81,   nil,   nil,    88,    43,
    44,    40,    41,    74,    99,    95,   nil,    84,   nil,   nil,
    90,   nil,   nil,    68,    71,   nil,    66,   100,    60,   103,
    79,    81,   nil,   nil,    88,   nil,   nil,   nil,   nil,    74,
    99,   nil,   nil,    84,   nil,    95,    90,   nil,   nil,    68,
    71,   nil,   nil,   100,    60,   103,    66,   nil,   nil,   nil,
    79,    81,   nil,   nil,    88,   nil,   nil,    68,    71,    74,
    99,   100,   nil,    84,    68,    71,    90,   nil,   100,   nil,
   103,   nil,    66,   nil,    60,   nil,    79,    81,   nil,   nil,
    88,   nil,   nil,   nil,   nil,    74,    95,   nil,   nil,    84,
    66,   nil,   nil,   nil,    79,   144,   nil,    66,    88,   nil,
    60,    79,    81,   139,   nil,    88,   nil,    84,   nil,   nil,
    74,    99,   nil,   nil,    84,    68,    71,    90,    60,   100,
   nil,   103,   nil,   nil,   nil,    60,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    68,    71,   nil,    95,   100,   nil,
   103,    68,    71,   nil,   nil,   100,   nil,   103,    66,   nil,
   nil,   nil,    79,    81,   nil,   nil,    88,   nil,   nil,    68,
    71,    74,    99,   nil,   nil,    84,   nil,    66,    90,   nil,
   nil,    79,    81,   nil,    66,    88,    60,   nil,    79,    81,
    74,   nil,    88,   nil,    84,    68,    71,    74,   nil,   nil,
   nil,    84,   202,   nil,   nil,    60,    79,   252,   nil,   nil,
    88,   nil,    60,   nil,   nil,   139,    68,    71,   162,    84,
   100,   nil,   103,   nil,   nil,   nil,   nil,   nil,    66,   nil,
    60,   nil,    79,    81,   nil,   nil,    88,   nil,    95,   nil,
    72,    74,    68,    71,   nil,    84,   100,   nil,   103,    66,
   nil,   nil,   nil,    79,    81,   nil,    60,    88,   nil,   nil,
   nil,   nil,    74,    99,    95,   nil,    84,    68,    71,    90,
   nil,   nil,   nil,   nil,   nil,    66,   nil,    60,   nil,    79,
    81,   nil,   nil,    88,   nil,   nil,   nil,   nil,    74,    99,
   327,   nil,    84,    68,    71,    90,   nil,   100,   nil,   103,
    66,   nil,   nil,    60,    79,    81,   nil,   nil,    88,   nil,
   nil,   nil,    72,    74,   nil,    95,   nil,    84,    68,    71,
   nil,   nil,   100,   nil,   103,   nil,    66,   nil,    60,   nil,
    79,    81,    68,    71,    88,   nil,   100,   nil,   103,    74,
    99,   nil,   nil,    84,   nil,   nil,    90,   nil,   nil,   nil,
   nil,    66,   nil,   nil,    60,    79,    81,    68,    71,    88,
   nil,   100,   nil,   103,    74,    66,   nil,   nil,    84,    79,
    81,    68,    71,    88,   nil,   100,   nil,   nil,    74,    60,
   nil,   nil,    84,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    66,   nil,   nil,    60,    79,    81,   nil,   nil,    88,   nil,
   nil,    68,    71,    74,    66,   nil,   nil,    84,    79,   252,
   nil,   nil,    88,   nil,   nil,   nil,   nil,   139,    60,    68,
    71,    84,   nil,   100,   nil,   103,   nil,   nil,   nil,   nil,
   nil,   nil,    60,   nil,   202,   nil,   nil,   nil,    79,   252,
   nil,    95,    88,   nil,   nil,   nil,   nil,   139,   nil,    68,
    71,    84,    66,   100,   nil,   103,    79,    81,   nil,   nil,
    88,   nil,    60,   nil,   nil,    74,    99,   nil,   nil,    84,
   nil,    95,    90,   nil,   nil,    68,    71,   nil,   nil,   100,
    60,   103,    66,   nil,   nil,   nil,    79,    81,   nil,   nil,
    88,   nil,   nil,   nil,   nil,    74,    99,    95,   nil,    84,
   nil,   nil,    90,   nil,   nil,    68,    71,   nil,    66,   100,
    60,   103,    79,    81,   nil,   nil,    88,   nil,   nil,   nil,
   nil,    74,    99,   nil,   nil,    84,   nil,    95,    90,   nil,
   nil,    68,    71,   nil,   nil,   100,    60,   103,    66,   nil,
   nil,   nil,    79,    81,   nil,   nil,    88,   nil,   nil,   nil,
   nil,    74,    99,    95,   nil,    84,   nil,   nil,    90,   nil,
   nil,    68,    71,   nil,    66,   100,    60,   103,    79,    81,
   nil,   nil,    88,   nil,   nil,   nil,   nil,    74,    99,   nil,
   nil,    84,   nil,    95,    90,   nil,   nil,    68,    71,   nil,
   nil,   100,    60,   103,    66,   nil,   nil,   nil,    79,    81,
   nil,   nil,    88,   nil,   nil,   nil,   nil,    74,    99,    95,
   nil,    84,   nil,   nil,    90,   nil,   nil,    68,    71,   nil,
    66,   100,    60,   103,    79,    81,   nil,   nil,    88,   nil,
   nil,   nil,   nil,    74,    99,   nil,   nil,    84,   nil,    95,
    90,   nil,   nil,    68,    71,   nil,   nil,   100,    60,   103,
    66,   nil,   nil,   nil,    79,    81,   nil,   nil,    88,   nil,
   nil,   nil,   nil,    74,    99,    95,   nil,    84,    68,    71,
    90,   nil,   100,   193,   103,   nil,    66,   nil,    60,   nil,
    79,    81,   nil,   nil,    88,   nil,   nil,   nil,   nil,    74,
    99,   nil,   nil,    84,    68,    71,    90,   nil,   100,   nil,
   103,    66,   nil,   nil,    60,    79,    81,   nil,   nil,    88,
   nil,   nil,   nil,   nil,    74,   nil,    95,   nil,    84,   nil,
    68,    71,   nil,   nil,   100,   nil,   103,    66,   nil,    60,
   nil,    79,    81,   nil,   nil,    88,   nil,   nil,   nil,   nil,
    74,    99,    95,   nil,    84,   nil,   nil,    90,   nil,   nil,
   nil,   nil,   nil,    66,   nil,    60,   nil,    79,    81,   188,
   nil,    88,   nil,   nil,   nil,   nil,    74,    99,   181,   186,
    84,   nil,   nil,    90,   nil,   nil,   nil,   177,   179,   182,
   185,    60,   nil,   181,   186,   nil,   nil,   nil,   nil,   nil,
   nil,   282,   177,   179,   182,   185,   nil,   nil,   nil,   nil,
   nil,   180,   184,   nil,   nil,   189,   172,   173,   174,   176,
   178,   nil,   183,   187,   nil,   nil,   180,   184,   nil,   175,
   189,   172,   173,   174,   176,   178,   nil,   183,   187,   181,
   186,   nil,   nil,   nil,   175,   nil,   nil,   nil,   177,   179,
   182,   185,   nil,   nil,   181,   186,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   177,   179,   182,   185,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   189,   172,   173,   174,
   176,   178,   nil,   183,   187,   nil,   nil,   180,   184,   nil,
   175,   189,   172,   173,   174,   176,   178,   nil,   183,   187,
   181,   186,   nil,   nil,   nil,   175,   nil,   nil,   nil,   177,
   179,   182,   185,   nil,   nil,   181,   186,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   177,   179,   182,   185,   nil,   nil,
   nil,   nil,   nil,   180,   184,   nil,   nil,   189,   172,   173,
   174,   176,   178,   nil,   183,   187,   nil,   nil,   nil,   184,
   nil,   175,   189,   172,   173,   174,   176,   178,   nil,   183,
   187,   181,   186,   nil,   nil,   nil,   175,   nil,   nil,   nil,
   177,   179,   182,   185,   nil,   nil,   nil,   186,   nil,   189,
   172,   173,   174,   176,   178,   177,   183,   187,   nil,   nil,
   nil,   nil,   nil,   175,   180,   184,   186,   nil,   189,   172,
   173,   174,   176,   178,   177,   183,   187,   nil,   nil,   nil,
   nil,   186,   175,   189,   172,   173,   174,   176,   178,   177,
   183,   187,   nil,   nil,   nil,   nil,   nil,   175,   nil,   nil,
   nil,   nil,   189,   172,   173,   174,   176,   178,   nil,   183,
   187,   280,   nil,   nil,   nil,   nil,   175,   189,   172,   173,
   174,   176,   178,   nil,   183,   187,   nil,   nil,   nil,   nil,
   325,   175,    26,   nil,    32,     1,   nil,     8,    11,   nil,
    18,   nil,    23,   nil,    29,   nil,     2,   nil,   nil,    10,
    15,    26,   363,    32,     1,   nil,     8,    11,   nil,    18,
   nil,    23,   nil,    29,   nil,     2,   nil,   nil,    10,    15,
   nil,   382,   nil,    26,   nil,    32,     1,   nil,     8,    11,
   nil,    18,   nil,    23,   nil,    29,   nil,     2,   nil,   nil,
    10,    15,    26,   380,    32,     1,   nil,     8,    11,   nil,
    18,   nil,    23,   nil,    29,   nil,     2,   nil,   nil,    10,
    15,   nil,   376,   nil,    26,   nil,    32,     1,   nil,     8,
    11,   nil,    18,   nil,    23,   nil,    29,   nil,     2,   nil,
   nil,    10,    15,    26,   305,    32,     1,   nil,     8,    11,
   nil,    18,   nil,    23,   nil,    29,   nil,     2,   nil,   nil,
    10,    15,   nil,   nil,   nil,    26,   nil,    32,     1,   nil,
     8,    11,   nil,    18,   nil,    23,   nil,    29,   nil,     2,
   nil,   nil,    10,    15,    26,   nil,    32,     1,   nil,     8,
    11,   nil,    18,   nil,    23,   nil,    29,   nil,     2,   nil,
   nil,    10,    15,    26,   nil,    32,     1,   nil,     8,    11,
   nil,    18,   nil,    23,   nil,    29,   nil,     2,   nil,   nil,
    10,    15,    26,   nil,    32,     1,   nil,     8,    11,   nil,
    18,   nil,    23,   nil,    29,   nil,     2,   nil,   nil,    10,
    15,   189,   172,   173,   174,   176,   178,   nil,   183,   187,
   189,   172,   173,   174,   nil,   175,   nil,   183,   187,   189,
   172,   173,   174,   nil,   175,   nil,   183,   187,   nil,   nil,
   nil,   nil,   nil,   175 ]

racc_action_check = [
   164,   164,   158,   154,   301,    27,    56,    27,    81,   214,
   285,   285,   301,   164,   164,   239,   293,   285,    18,   206,
    27,   213,   164,   164,   164,   164,    81,   206,   175,   175,
   194,    56,   175,   194,   175,   368,   368,   214,   214,   157,
   158,   293,   293,   158,    27,   154,   164,   164,   285,   144,
   164,   164,   164,   164,   164,   164,    18,   164,   164,    18,
    85,   175,   144,   158,   164,   175,   175,   272,   368,   175,
    83,   261,   368,   368,   175,   272,   368,   157,   175,    18,
   157,   368,   161,   161,   261,   368,   161,   216,   161,   175,
     1,    82,   356,   356,     1,   218,   368,   219,   203,   163,
   157,     1,   114,   272,   272,   272,   272,   272,   272,   203,
   272,   272,   163,   114,   203,   161,   122,   272,   114,   161,
   161,   122,   192,   161,   221,   356,   192,   192,   161,   356,
   356,   220,   161,   356,   290,   335,   335,   221,   356,   335,
   111,   335,   356,   161,   309,   290,   331,   331,    11,   309,
   290,   111,    11,   356,   329,   329,   111,   335,   329,    11,
   329,    48,    48,   103,   103,    48,   334,    48,   335,   334,
   103,   200,   335,   335,   262,   262,   335,   263,   263,   262,
   262,   335,   335,    48,   263,   335,   262,   329,   335,   224,
   280,   329,   329,   280,    48,   329,   335,   197,    48,    48,
   329,   103,    48,   227,   329,   295,   295,    48,    48,    87,
   229,    48,   307,   307,    48,   329,   307,    33,   307,   306,
   306,    33,    48,   306,   230,   306,   299,   299,    33,    33,
   225,    80,   232,   299,   225,    77,    46,   225,   295,   234,
    46,   225,   295,   295,   235,   307,   295,    46,    46,   307,
   307,   295,   306,   307,    75,   295,   306,   306,   307,   299,
   306,   212,   307,   299,   299,   306,   295,   299,     8,   306,
    23,    23,   299,   307,    23,    74,   299,     8,     8,    66,
   306,   249,    42,   252,   264,   264,    42,   299,    65,   166,
   166,   264,    23,    42,    42,    26,    26,    64,    89,    26,
   201,    26,    94,    23,   201,   201,   187,    23,    23,   169,
   101,    23,   102,   169,   169,    23,    23,    26,   105,   183,
    23,    53,   166,    52,   294,   294,   166,   166,    26,    50,
   166,    23,    26,    26,   166,   166,    26,   143,   106,   166,
   107,    26,    26,    29,    29,    26,   108,    29,    26,    29,
   166,   110,   279,   167,   167,   113,    26,   294,   115,   167,
   283,   294,   294,   281,   281,   294,    37,   211,   281,   281,
   294,   211,   211,   116,   294,   281,    29,   288,   170,   170,
    29,    29,   119,    32,    29,   294,   167,   121,   127,    29,
   167,   167,   297,    29,   167,    17,   287,   287,   133,   167,
   287,   170,   287,   167,    29,     3,     3,     3,     3,   304,
    13,   170,    12,   134,   167,   170,   170,   136,   320,   170,
   324,   172,   172,   170,   170,   172,   159,   172,   170,   287,
   140,   141,   155,   287,   287,   337,   342,   287,   346,   170,
   347,   349,   287,   172,   350,   351,   287,    45,    45,     5,
   357,    45,   142,    45,   172,   367,   147,   287,   172,   172,
   369,     2,   172,     4,     4,     4,     4,   172,   172,    45,
   146,   172,   379,   381,   172,   nil,   nil,   173,   173,   nil,
    45,   173,   172,   173,    45,    45,   nil,   nil,    45,    31,
    31,    31,    31,    45,    45,   nil,   nil,    45,   nil,   173,
    45,   nil,   nil,    47,    47,   nil,   nil,    47,    45,    47,
   173,   nil,   nil,   nil,   173,   173,   nil,   nil,   173,     6,
     6,     6,     6,   173,   173,    47,   nil,   173,   nil,   nil,
   173,   nil,   nil,   174,   174,   nil,    47,   174,   173,   174,
    47,    47,   nil,   nil,    47,   nil,   nil,   nil,   nil,    47,
    47,   nil,   nil,    47,   nil,   174,    47,   nil,   nil,    49,
    49,   nil,   nil,    49,    47,    49,   174,   nil,   nil,   nil,
   174,   174,   nil,   nil,   174,   nil,   nil,    51,    51,   174,
   174,    51,   nil,   174,   176,   176,   174,   nil,   176,   nil,
   176,   nil,    49,   nil,   174,   nil,    49,    49,   nil,   nil,
    49,   nil,   nil,   nil,   nil,    49,   176,   nil,   nil,    49,
    51,   nil,   nil,   nil,    51,    51,   nil,   176,    51,   nil,
    49,   176,   176,    51,   nil,   176,   nil,    51,   nil,   nil,
   176,   176,   nil,   nil,   176,   177,   177,   176,    51,   177,
   nil,   177,   nil,   nil,   nil,   176,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   112,   112,   nil,   177,   112,   nil,
   112,   259,   259,   nil,   nil,   259,   nil,   259,   177,   nil,
   nil,   nil,   177,   177,   nil,   nil,   177,   nil,   nil,   254,
   254,   177,   177,   nil,   nil,   177,   nil,   112,   177,   nil,
   nil,   112,   112,   nil,   259,   112,   177,   nil,   259,   259,
   112,   nil,   259,   nil,   112,    70,    70,   259,   nil,   nil,
   nil,   259,   254,   nil,   nil,   112,   254,   254,   nil,   nil,
   254,   nil,   259,   nil,   nil,   254,   242,   242,    70,   254,
   242,   nil,   242,   nil,   nil,   nil,   nil,   nil,    70,   nil,
   254,   nil,    70,    70,   nil,   nil,    70,   nil,   242,   nil,
    70,    70,    71,    71,   nil,    70,    71,   nil,    71,   242,
   nil,   nil,   nil,   242,   242,   nil,    70,   242,   nil,   nil,
   nil,   nil,   242,   242,    71,   nil,   242,   240,   240,   242,
   nil,   nil,   nil,   nil,   nil,    71,   nil,   242,   nil,    71,
    71,   nil,   nil,    71,   nil,   nil,   nil,   nil,    71,    71,
   240,   nil,    71,   178,   178,    71,   nil,   178,   nil,   178,
   240,   nil,   nil,    71,   240,   240,   nil,   nil,   240,   nil,
   nil,   nil,   240,   240,   nil,   178,   nil,   240,   233,   233,
   nil,   nil,   233,   nil,   233,   nil,   178,   nil,   240,   nil,
   178,   178,    78,    78,   178,   nil,    78,   nil,    78,   178,
   178,   nil,   nil,   178,   nil,   nil,   178,   nil,   nil,   nil,
   nil,   233,   nil,   nil,   178,   233,   233,   231,   231,   233,
   nil,   231,   nil,   231,   233,    78,   nil,   nil,   233,    78,
    78,   228,   228,    78,   nil,   228,   nil,   nil,    78,   233,
   nil,   nil,    78,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   231,   nil,   nil,    78,   231,   231,   nil,   nil,   231,   nil,
   nil,   215,   215,   231,   228,   nil,   nil,   231,   228,   228,
   nil,   nil,   228,   nil,   nil,   nil,   nil,   228,   231,   179,
   179,   228,   nil,   179,   nil,   179,   nil,   nil,   nil,   nil,
   nil,   nil,   228,   nil,   215,   nil,   nil,   nil,   215,   215,
   nil,   179,   215,   nil,   nil,   nil,   nil,   215,   nil,   185,
   185,   215,   179,   185,   nil,   185,   179,   179,   nil,   nil,
   179,   nil,   215,   nil,   nil,   179,   179,   nil,   nil,   179,
   nil,   185,   179,   nil,   nil,   181,   181,   nil,   nil,   181,
   179,   181,   185,   nil,   nil,   nil,   185,   185,   nil,   nil,
   185,   nil,   nil,   nil,   nil,   185,   185,   181,   nil,   185,
   nil,   nil,   185,   nil,   nil,   189,   189,   nil,   181,   189,
   185,   189,   181,   181,   nil,   nil,   181,   nil,   nil,   nil,
   nil,   181,   181,   nil,   nil,   181,   nil,   189,   181,   nil,
   nil,    90,    90,   nil,   nil,    90,   181,    90,   189,   nil,
   nil,   nil,   189,   189,   nil,   nil,   189,   nil,   nil,   nil,
   nil,   189,   189,    90,   nil,   189,   nil,   nil,   189,   nil,
   nil,   182,   182,   nil,    90,   182,   189,   182,    90,    90,
   nil,   nil,    90,   nil,   nil,   nil,   nil,    90,    90,   nil,
   nil,    90,   nil,   182,    90,   nil,   nil,   184,   184,   nil,
   nil,   184,    90,   184,   182,   nil,   nil,   nil,   182,   182,
   nil,   nil,   182,   nil,   nil,   nil,   nil,   182,   182,   184,
   nil,   182,   nil,   nil,   182,   nil,   nil,    95,    95,   nil,
   184,    95,   182,    95,   184,   184,   nil,   nil,   184,   nil,
   nil,   nil,   nil,   184,   184,   nil,   nil,   184,   nil,    95,
   184,   nil,   nil,    99,    99,   nil,   nil,    99,   184,    99,
    95,   nil,   nil,   nil,    95,    95,   nil,   nil,    95,   nil,
   nil,   nil,   nil,    95,    95,    99,   nil,    95,   100,   100,
    95,   nil,   100,   100,   100,   nil,    99,   nil,    95,   nil,
    99,    99,   nil,   nil,    99,   nil,   nil,   nil,   nil,    99,
    99,   nil,   nil,    99,   186,   186,    99,   nil,   186,   nil,
   186,   100,   nil,   nil,    99,   100,   100,   nil,   nil,   100,
   nil,   nil,   nil,   nil,   100,   nil,   186,   nil,   100,   nil,
   180,   180,   nil,   nil,   180,   nil,   180,   186,   nil,   100,
   nil,   186,   186,   nil,   nil,   186,   nil,   nil,   nil,   nil,
   186,   186,   180,   nil,   186,   nil,   nil,   186,   nil,   nil,
   nil,   nil,   nil,   180,   nil,   186,   nil,   180,   180,    91,
   nil,   180,   nil,   nil,   nil,   nil,   180,   180,    91,    91,
   180,   nil,   nil,   180,   nil,   nil,   nil,    91,    91,    91,
    91,   180,   nil,   190,   190,   nil,   nil,   nil,   nil,   nil,
   nil,   190,   190,   190,   190,   190,   nil,   nil,   nil,   nil,
   nil,    91,    91,   nil,   nil,    91,    91,    91,    91,    91,
    91,   nil,    91,    91,   nil,   nil,   190,   190,   nil,    91,
   190,   190,   190,   190,   190,   190,   nil,   190,   190,   274,
   274,   nil,   nil,   nil,   190,   nil,   nil,   nil,   274,   274,
   274,   274,   nil,   nil,   132,   132,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   132,   132,   132,   132,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   274,   274,   274,   274,
   274,   274,   nil,   274,   274,   nil,   nil,   132,   132,   nil,
   274,   132,   132,   132,   132,   132,   132,   nil,   132,   132,
   131,   131,   nil,   nil,   nil,   132,   nil,   nil,   nil,   131,
   131,   131,   131,   nil,   nil,   270,   270,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   270,   270,   270,   270,   nil,   nil,
   nil,   nil,   nil,   131,   131,   nil,   nil,   131,   131,   131,
   131,   131,   131,   nil,   131,   131,   nil,   nil,   nil,   270,
   nil,   131,   270,   270,   270,   270,   270,   270,   nil,   270,
   270,   129,   129,   nil,   nil,   nil,   270,   nil,   nil,   nil,
   129,   129,   129,   129,   nil,   nil,   nil,   269,   nil,   276,
   276,   276,   276,   276,   276,   269,   276,   276,   nil,   nil,
   nil,   nil,   nil,   276,   129,   129,   275,   nil,   129,   129,
   129,   129,   129,   129,   275,   129,   129,   nil,   nil,   nil,
   nil,   271,   129,   269,   269,   269,   269,   269,   269,   271,
   269,   269,   nil,   nil,   nil,   nil,   nil,   269,   nil,   nil,
   nil,   nil,   275,   275,   275,   275,   275,   275,   nil,   275,
   275,   188,   nil,   nil,   nil,   nil,   275,   271,   271,   271,
   271,   271,   271,   nil,   271,   271,   nil,   nil,   nil,   nil,
   238,   271,   188,   nil,   188,   188,   nil,   188,   188,   nil,
   188,   nil,   188,   nil,   188,   nil,   188,   nil,   nil,   188,
   188,   238,   311,   238,   238,   nil,   238,   238,   nil,   238,
   nil,   238,   nil,   238,   nil,   238,   nil,   nil,   238,   238,
   nil,   375,   nil,   311,   nil,   311,   311,   nil,   311,   311,
   nil,   311,   nil,   311,   nil,   311,   nil,   311,   nil,   nil,
   311,   311,   375,   372,   375,   375,   nil,   375,   375,   nil,
   375,   nil,   375,   nil,   375,   nil,   375,   nil,   nil,   375,
   375,   nil,   362,   nil,   372,   nil,   372,   372,   nil,   372,
   372,   nil,   372,   nil,   372,   nil,   372,   nil,   372,   nil,
   nil,   372,   372,   362,   217,   362,   362,   nil,   362,   362,
   nil,   362,   nil,   362,   nil,   362,   nil,   362,   nil,   nil,
   362,   362,   nil,   nil,   nil,   217,   nil,   217,   217,   nil,
   217,   217,   nil,   217,   nil,   217,   nil,   217,   nil,   217,
   nil,   nil,   217,   217,     0,   nil,     0,     0,   nil,     0,
     0,   nil,     0,   nil,     0,   nil,     0,   nil,     0,   nil,
   nil,     0,     0,    20,   nil,    20,    20,   nil,    20,    20,
   nil,    20,   nil,    20,   nil,    20,   nil,    20,   nil,   nil,
    20,    20,   278,   nil,   278,   278,   nil,   278,   278,   nil,
   278,   nil,   278,   nil,   278,   nil,   278,   nil,   nil,   278,
   278,   267,   267,   267,   267,   267,   267,   nil,   267,   267,
   266,   266,   266,   266,   nil,   267,   nil,   266,   266,   268,
   268,   268,   268,   nil,   266,   nil,   268,   268,   nil,   nil,
   nil,   nil,   nil,   268 ]

racc_action_pointer = [
  1674,    54,   417,   341,   399,   434,   455,   nil,   262,   nil,
   nil,   112,   404,   402,   nil,   nil,   nil,   395,    16,   nil,
  1693,   nil,   nil,   268,   nil,   nil,   293,    -1,   nil,   341,
   nil,   425,   381,   181,   nil,   nil,   nil,   342,   nil,   nil,
   nil,   nil,   246,   nil,   nil,   445,   200,   501,   159,   557,
   305,   575,   283,   321,   nil,   nil,    -6,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   291,   265,   273,   nil,   nil,   nil,
   703,   750,   nil,   nil,   269,   242,   nil,   212,   840,   nil,
   208,     2,    68,    64,   nil,    37,   nil,   186,   nil,   275,
  1039,  1261,   nil,   nil,   279,  1125,   nil,   nil,   nil,  1151,
  1176,   287,   289,   161,   nil,   295,   315,   317,   323,   nil,
   343,   116,   652,   315,    78,   350,   361,   nil,   nil,   374,
   nil,   379,    81,   nil,   nil,   nil,   nil,   382,   nil,  1444,
   nil,  1383,  1337,   391,   376,   nil,   394,   nil,   nil,   nil,
   389,   408,   440,   314,    38,   nil,   447,   436,   nil,   nil,
   nil,   nil,   nil,   nil,    -8,   420,   nil,    37,     0,   418,
   nil,    80,   nil,    87,    -4,   nil,   287,   351,   nil,   302,
   376,   nil,   419,   475,   531,    26,   582,   633,   801,   927,
  1228,   983,  1069,   256,  1095,   957,  1202,   243,  1532,  1013,
  1276,   nil,   115,   nil,    21,   nil,   nil,   186,   nil,   nil,
   131,   254,   nil,    74,   nil,   nil,     1,   nil,   nil,   nil,
   nil,   360,   249,    10,   -13,   909,    85,  1655,    80,    82,
   106,   112,   nil,   nil,   181,   194,   nil,   194,   879,   170,
   215,   865,   192,   826,   199,   235,   nil,   nil,  1551,     8,
   775,   nil,   724,   nil,   nil,   nil,   nil,   nil,   nil,   270,
   nil,   nil,   259,   nil,   677,   nil,   nil,   nil,   nil,   659,
   nil,    59,   118,   116,   223,   nil,  1716,  1707,  1725,  1459,
  1398,  1493,    49,   nil,  1322,  1478,  1425,   nil,  1712,   343,
   159,   307,   nil,   353,   nil,     8,   nil,   394,   365,   nil,
   110,   nil,   nil,    -9,   322,   203,   nil,   383,   nil,   224,
   nil,    -8,   nil,   nil,   400,   nil,   217,   210,   nil,   109,
   nil,  1573,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   406,   nil,   nil,   nil,   411,   nil,   nil,   nil,   nil,   152,
   nil,   135,   nil,   nil,   135,   133,   nil,   427,   nil,   nil,
   nil,   nil,   427,   nil,   nil,   nil,   415,   417,   nil,   418,
   421,   422,   nil,   nil,   nil,   nil,    90,   442,   nil,   nil,
   nil,   nil,  1633,   nil,   nil,   nil,   nil,   446,    33,   451,
   nil,   nil,  1614,   nil,   nil,  1592,   nil,   nil,   nil,   463,
   nil,   464,   nil,   nil,   nil ]

racc_action_default = [
  -197,  -234,   -51,   -19,    -8,  -234,  -234,    -9,  -234,   -10,
  -188,  -189,  -234,   -23,   -11,  -186,   -12,  -234,  -234,   -13,
    -1,   -14,    -2,  -187,   -15,    -3,  -234,  -234,   -16,  -234,
   -17,    -6,  -234,  -234,   -18,    -7,  -189,  -197,  -187,   -52,
   -27,   -28,  -234,   -25,   -26,  -234,  -234,  -234,  -234,  -234,
  -197,   -86,   -93,  -234,  -196,  -194,  -197,  -190,  -192,  -193,
  -222,  -195,    -4,   -42,  -232,   -43,  -214,  -175,  -118,   -44,
  -234,  -234,   -45,   -34,   -75,   -32,   -33,  -234,  -234,  -123,
   -37,   -74,   -38,  -234,   -73,   -39,  -173,   -40,  -174,   -41,
  -234,  -234,  -126,  -108,  -104,  -234,  -112,  -133,  -113,  -234,
  -234,  -105,  -109,  -234,  -111,  -106,  -115,  -107,  -114,  -110,
   -54,  -197,  -234,   -86,  -197,  -234,  -179,  -176,  -177,  -234,
   -50,  -234,  -198,  -199,   -24,   -21,   -23,  -187,   -22,   -84,
   -20,   -83,   -85,  -234,  -197,   -79,   -76,   -87,   -82,   -75,
   -71,   -77,  -220,   -80,   -74,   -69,   -78,  -234,  -172,  -171,
   -81,   -91,   -92,   -94,  -234,  -220,   385,  -234,  -234,  -234,
  -208,  -234,   -31,  -234,  -234,  -119,  -234,  -234,   -96,  -234,
  -234,  -143,  -234,  -234,  -234,  -234,  -234,  -234,  -234,  -234,
  -234,  -234,  -234,  -234,  -234,  -234,  -234,  -234,  -234,  -234,
  -234,  -150,  -234,  -217,  -234,  -230,  -226,  -234,  -229,  -225,
   -93,  -234,  -214,  -197,   -58,   -60,  -234,   -67,   -57,   -74,
   -66,  -234,  -220,  -234,  -234,  -234,  -234,  -234,  -207,  -205,
  -234,  -234,  -202,  -231,  -234,  -234,  -210,  -234,   -72,  -221,
  -234,  -234,   -86,  -234,  -221,  -234,  -191,  -209,  -234,  -234,
  -234,   -29,  -234,  -121,  -120,   -36,   -35,  -169,  -167,  -234,
  -170,  -161,   -74,  -168,  -234,  -162,  -218,  -219,  -124,  -234,
  -117,  -234,  -138,  -140,  -139,  -134,  -141,  -145,  -142,  -147,
  -152,  -149,  -146,  -135,  -151,  -148,  -144,  -136,    -5,  -234,
  -129,  -137,  -153,  -219,  -215,  -234,  -223,  -234,  -220,   -55,
  -234,   -63,   -62,  -234,  -234,  -234,  -125,  -234,   -56,  -234,
  -155,  -234,  -159,  -178,  -234,  -181,  -234,  -234,  -200,  -234,
  -201,  -234,  -212,  -213,  -211,   -46,   -70,   -88,   -47,   -89,
  -220,   -90,   -95,   -49,  -234,  -185,  -233,   -30,  -122,  -234,
  -164,  -220,   -97,  -116,  -129,  -234,  -128,  -234,  -216,  -227,
  -224,  -228,  -234,   -59,   -61,  -102,   -98,   -99,   -64,  -103,
  -100,  -101,   -65,   -48,  -156,  -154,  -234,  -234,  -180,  -206,
  -204,  -203,  -234,  -183,   -68,  -184,  -166,  -219,  -234,  -234,
  -127,  -130,  -234,   -53,  -160,  -234,  -182,  -165,  -163,  -234,
  -132,  -234,  -158,  -131,  -157 ]

racc_goto_table = [
    27,    13,     5,    37,    62,   255,   249,    20,   118,   196,
    92,    89,   142,    50,   155,   300,    69,    63,   222,   336,
    27,    13,     5,   165,    73,    75,    57,   279,   348,   352,
   246,   151,   145,   119,   343,   150,   121,   230,    65,   149,
   299,    22,    27,   126,   138,   135,    27,   126,   201,   134,
   235,   214,   120,    87,   302,    86,   304,   244,    89,    42,
   169,   128,    46,    69,    63,   128,   136,   251,   368,   331,
   322,    73,   163,   370,   212,   125,   124,   324,   123,   130,
   124,   148,   192,    86,   116,    65,   140,   224,    56,   159,
   227,   123,   330,   249,   211,   237,   220,   160,   221,   354,
    87,   110,    86,   115,   246,   314,   194,   297,    17,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   195,   nil,
   nil,   nil,   nil,   133,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    54,   nil,   nil,   nil,   302,   nil,
   293,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   168,   nil,    89,   149,   nil,   nil,    89,    69,
    63,   nil,   288,    69,    63,   236,   nil,   245,   nil,   nil,
   nil,    73,   261,    82,   168,   226,   nil,   nil,   nil,   151,
   nil,    65,   247,   342,   nil,    65,   168,   nil,    27,    13,
     5,   339,   303,   320,   328,   374,    87,   148,    86,    86,
    87,   143,    86,   149,    80,   361,   377,   249,   317,   316,
   nil,   379,   150,   151,   381,   364,   149,    27,    13,     5,
    82,   138,   135,   nil,   nil,   nil,   369,   312,    89,   nil,
   247,   nil,   141,    69,    63,   239,   nil,   nil,    27,    13,
     5,   245,   149,   136,   nil,   148,   nil,    86,   nil,   265,
   nil,    80,   nil,   nil,   nil,    65,   nil,   nil,   148,   nil,
    86,   210,    62,   nil,   210,   nil,   nil,   nil,    85,   247,
    87,   nil,    86,    54,    54,   nil,   nil,   nil,    27,    13,
     5,   nil,   149,   149,   148,   nil,    86,   149,   345,   345,
   nil,   nil,   207,   nil,   nil,   207,   146,   nil,   nil,   273,
   195,   nil,   nil,   277,   nil,   319,   nil,   321,   nil,   346,
   346,    27,    13,     5,   247,    85,    82,   250,   362,   371,
    82,   nil,   nil,   nil,   351,   351,    86,    86,   nil,   148,
   nil,    86,   nil,   332,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   149,   nil,    62,    80,   248,   nil,
   nil,    80,   nil,   210,   nil,   nil,   149,   nil,   nil,   nil,
   nil,   341,    27,    13,     5,   250,   nil,   nil,   nil,   nil,
   nil,   247,    27,    13,     5,    27,    13,     5,   143,   nil,
   359,   360,   nil,   247,   207,   nil,   148,   nil,    86,   nil,
    82,   nil,   129,   nil,   131,   132,   248,   nil,   148,   nil,
    86,   nil,   nil,   366,   250,   nil,   nil,   nil,   nil,   141,
   nil,    85,   253,   nil,   nil,    85,   nil,   nil,   164,   nil,
   nil,    80,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   248,   nil,   171,   nil,   nil,
   210,   nil,   190,   nil,   349,   349,   191,   nil,   nil,   250,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   253,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   207,   nil,   146,   nil,   347,   347,   nil,   nil,   nil,
   248,   nil,   nil,   nil,   nil,    85,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   253,
   nil,   nil,   nil,   nil,   nil,   nil,   250,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   250,   262,
   263,   264,   nil,   266,   267,   268,   269,   270,   271,   272,
   nil,   274,   275,   276,   nil,   nil,   281,   248,   nil,   350,
   350,   nil,   nil,   nil,   253,   nil,   nil,   nil,   nil,   248,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   164,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   253,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   253 ]

racc_goto_check = [
    38,    22,    53,    33,     4,    71,    69,     2,    73,    86,
    63,    29,    36,    33,    39,    67,    32,    30,    83,    64,
    38,    22,    53,    61,    22,    23,    79,     5,    47,    47,
    24,    54,    48,    38,    43,    51,    75,    37,    31,    29,
    66,     3,    38,    22,    32,    30,    38,    22,    42,    75,
    37,    42,     6,    28,    69,    50,     5,    62,    29,    21,
    58,     6,    21,    32,    30,     6,    31,    70,    59,    72,
    57,    22,    23,    64,    36,    20,     8,     5,     3,    20,
     8,    28,    58,    50,    74,    31,    34,    76,    77,    78,
    35,     3,    71,    69,    58,    80,    81,     3,    82,    67,
    28,    41,    50,    55,    24,    84,    85,    37,     1,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    31,   nil,
   nil,   nil,   nil,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    65,   nil,   nil,   nil,    69,   nil,
    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    55,   nil,    29,    29,   nil,   nil,    29,    32,
    30,   nil,    39,    32,    30,    79,   nil,    22,   nil,   nil,
   nil,    22,    23,    26,    55,     3,   nil,   nil,   nil,    54,
   nil,    31,    31,    37,   nil,    31,    55,   nil,    38,    22,
    53,    86,    73,    36,    61,    69,    28,    28,    50,    50,
    28,    26,    50,    29,    25,    83,    71,    69,    54,    48,
   nil,     5,    51,    54,     5,    37,    29,    38,    22,    53,
    26,    32,    30,   nil,   nil,   nil,    37,    33,    29,   nil,
    31,   nil,    25,    32,    30,    55,   nil,   nil,    38,    22,
    53,    22,    29,    31,   nil,    28,   nil,    50,   nil,    55,
   nil,    25,   nil,   nil,   nil,    31,   nil,   nil,    28,   nil,
    50,    26,     4,   nil,    26,   nil,   nil,   nil,    27,    31,
    28,   nil,    50,    65,    65,   nil,   nil,   nil,    38,    22,
    53,   nil,    29,    29,    28,   nil,    50,    29,    30,    30,
   nil,   nil,    25,   nil,   nil,    25,    27,   nil,   nil,    65,
    31,   nil,   nil,    65,   nil,    55,   nil,    55,   nil,    31,
    31,    38,    22,    53,    31,    27,    26,    26,     2,    63,
    26,   nil,   nil,   nil,    28,    28,    50,    50,   nil,    28,
   nil,    50,   nil,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    29,   nil,     4,    25,    25,   nil,
   nil,    25,   nil,    26,   nil,   nil,    29,   nil,   nil,   nil,
   nil,    55,    38,    22,    53,    26,   nil,   nil,   nil,   nil,
   nil,    31,    38,    22,    53,    38,    22,    53,    26,   nil,
    55,    55,   nil,    31,    25,   nil,    28,   nil,    50,   nil,
    26,   nil,    52,   nil,    52,    52,    25,   nil,    28,   nil,
    50,   nil,   nil,    55,    26,   nil,   nil,   nil,   nil,    25,
   nil,    27,    27,   nil,   nil,    27,   nil,   nil,    52,   nil,
   nil,    25,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    25,   nil,    52,   nil,   nil,
    26,   nil,    52,   nil,    26,    26,    52,   nil,   nil,    26,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    25,   nil,    27,   nil,    25,    25,   nil,   nil,   nil,
    25,   nil,   nil,   nil,   nil,    27,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    27,
   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    26,    52,
    52,    52,   nil,    52,    52,    52,    52,    52,    52,    52,
   nil,    52,    52,    52,   nil,   nil,    52,    25,   nil,    27,
    27,   nil,   nil,   nil,    27,   nil,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    52,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    27,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    27 ]

racc_goto_pointer = [
   nil,   108,     7,    41,   -16,  -161,    19,   nil,    34,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    33,    56,     1,     2,  -136,   181,   150,   245,    30,   -12,
    -6,    15,    -7,     2,    35,   -50,   -39,  -105,     0,   -38,
   nil,    74,   -63,  -256,   nil,   nil,   nil,  -266,   -19,   nil,
    32,   -16,   347,     2,   -21,    74,   nil,  -164,   -18,  -263,
   nil,   -48,  -107,   -16,  -261,   116,  -175,  -200,   nil,  -161,
  -100,  -162,  -185,   -24,    52,    -1,   -47,    70,    33,     8,
   -63,   -26,   -24,  -104,  -120,     3,   -94,   nil ]

racc_goto_default = [
   nil,   nil,   278,   208,    25,   nil,    31,    35,     4,     7,
     9,    14,    16,    19,    21,    24,    28,    30,    34,     3,
     6,   nil,    98,   nil,    76,   101,   102,   105,   107,   108,
    93,    94,    96,    12,   nil,   nil,   nil,   nil,    83,   nil,
    33,   nil,   nil,   204,   290,   205,   206,   nil,   nil,   147,
   106,   109,    91,    64,   137,    97,   152,   153,   nil,   259,
   104,   nil,   nil,   nil,   nil,    67,   nil,   nil,   301,    77,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    58,   nil,   nil,   nil,   nil,   nil,   nil,   197 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :STRING => 2,
 :DQPRE => 3,
 :DQMID => 4,
 :DQPOST => 5,
 :LBRACK => 6,
 :RBRACK => 7,
 :LBRACE => 8,
 :RBRACE => 9,
 :SYMBOL => 10,
 :FARROW => 11,
 :COMMA => 12,
 :TRUE => 13,
 :FALSE => 14,
 :EQUALS => 15,
 :APPENDS => 16,
 :LESSEQUAL => 17,
 :NOTEQUAL => 18,
 :DOT => 19,
 :COLON => 20,
 :LLCOLLECT => 21,
 :RRCOLLECT => 22,
 :QMARK => 23,
 :LPAREN => 24,
 :RPAREN => 25,
 :ISEQUAL => 26,
 :GREATEREQUAL => 27,
 :GREATERTHAN => 28,
 :LESSTHAN => 29,
 :IF => 30,
 :ELSE => 31,
 :IMPORT => 32,
 :DEFINE => 33,
 :ELSIF => 34,
 :VARIABLE => 35,
 :CLASS => 36,
 :INHERITS => 37,
 :NODE => 38,
 :BOOLEAN => 39,
 :NAME => 40,
 :SEMIC => 41,
 :CASE => 42,
 :DEFAULT => 43,
 :AT => 44,
 :LCOLLECT => 45,
 :RCOLLECT => 46,
 :CLASSNAME => 47,
 :CLASSREF => 48,
 :NOT => 49,
 :OR => 50,
 :AND => 51,
 :UNDEF => 52,
 :PARROW => 53,
 :PLUS => 54,
 :MINUS => 55,
 :TIMES => 56,
 :DIV => 57,
 :LSHIFT => 58,
 :RSHIFT => 59,
 :UMINUS => 60,
 :MATCH => 61,
 :NOMATCH => 62,
 :REGEX => 63,
 :IN_EDGE => 64,
 :OUT_EDGE => 65,
 :IN_EDGE_SUB => 66,
 :OUT_EDGE_SUB => 67,
 :IN => 68 }

racc_use_result_var = true

racc_nt_base = 69

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'STRING',
'DQPRE',
'DQMID',
'DQPOST',
'LBRACK',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'APPENDS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'PLUS',
'MINUS',
'TIMES',
'DIV',
'LSHIFT',
'RSHIFT',
'UMINUS',
'MATCH',
'NOMATCH',
'REGEX',
'IN_EDGE',
'OUT_EDGE',
'IN_EDGE_SUB',
'OUT_EDGE_SUB',
'IN',
'$start',
'program',
'statements_and_declarations',
'nil',
'statement_or_declaration',
'statements',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement_begin',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'append',
'relationship',
'relationship_side',
'edge',
'resourceref',
'funcvalues',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'hasharrayaccesses',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'expression',
'hasharrayaccess',
'param',
'rvalue',
'addparam',
'anyparam',
'rvalues',
'comma',
'hash',
'dqrval',
'dqtail',
'ifstatement',
'else',
'regex',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'string',
'strings',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'nodename',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault',
'hashpairs',
'hashpair',
'key']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

module_eval <<'.,.,', 'grammar.ra', 36
  def _reduce_3( val, _values, result )
    result = ast AST::ASTArray, :children => (val[0] ? [val[0]] : [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 42
  def _reduce_4( val, _values, result )
    if val[1]
      val[0].push(val[1])
    end
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 54
  def _reduce_5( val, _values, result )
  val[0].each do |stmt|
    if stmt.is_a?(AST::TopLevelConstruct)
      error "Classes, definitions, and nodes may only appear at toplevel or inside other classes", \
          :line => stmt.context[:line], :file => stmt.context[:file]
    end
  end
  result = val[0]
   result
  end
.,.,

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

 # reduce 17 omitted

 # reduce 18 omitted

 # reduce 19 omitted

module_eval <<'.,.,', 'grammar.ra', 74
  def _reduce_20( val, _values, result )
  result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 77
  def _reduce_21( val, _values, result )
    result = AST::Relationship.new(val[0], val[2], val[1][:value], ast_context)
   result
  end
.,.,

 # reduce 22 omitted

 # reduce 23 omitted

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

module_eval <<'.,.,', 'grammar.ra', 89
  def _reduce_29( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 96
  def _reduce_30( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[2],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 102
  def _reduce_31( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 109
  def _reduce_32( val, _values, result )
    result = ast AST::Function,
    :name => val[0][:value],
    :line => val[0][:line],
    :arguments => val[1],
    :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 110
  def _reduce_33( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 111
  def _reduce_34( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 116
  def _reduce_35( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 120
  def _reduce_36( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

 # reduce 37 omitted

 # reduce 38 omitted

 # reduce 39 omitted

 # reduce 40 omitted

 # reduce 41 omitted

 # reduce 42 omitted

 # reduce 43 omitted

 # reduce 44 omitted

module_eval <<'.,.,', 'grammar.ra', 134
  def _reduce_45( val, _values, result )
    result = ast AST::Name, :value => val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 139
  def _reduce_46( val, _values, result )
  @lexer.commentpop
  result = ast(AST::Resource, :type => val[0], :instances => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 142
  def _reduce_47( val, _values, result )
  # This is a deprecated syntax.
  error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 146
  def _reduce_48( val, _values, result )
  # a defaults setting for a type
  @lexer.commentpop
  result = ast(AST::ResourceDefaults, :type => val[0], :parameters => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 152
  def _reduce_49( val, _values, result )
  @lexer.commentpop
  result = ast AST::ResourceOverride, :object => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 171
  def _reduce_50( val, _values, result )
  type = val[0]

  if (type == :exported and ! Puppet[:storeconfigs]) and ! Puppet[:parseonly]
    Puppet.warning addcontext("You cannot collect without storeconfigs being set")
  end

  error "Defaults are not virtualizable" if val[1].is_a? AST::ResourceDefaults

  method = type.to_s + "="

  # Just mark our resource as exported and pass it through.
  val[1].send(method, true)

  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 172
  def _reduce_51( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 173
  def _reduce_52( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 196
  def _reduce_53( val, _values, result )
  @lexer.commentpop
  Puppet.warning addcontext("Collection names must now be capitalized") if val[0] =~ /^[a-z]/
  type = val[0].downcase
  args = {:type => type}

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  args[:override] = val[3]
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 215
  def _reduce_54( val, _values, result )
    if val[0] =~ /^[a-z]/
    Puppet.warning addcontext("Collection names must now be capitalized")
  end
  type = val[0].downcase
  args = {:type => type }

  if val[1].is_a?(AST::CollExpr)
    args[:query] = val[1]
    args[:query].type = type
    args[:form] = args[:query].form
  else
    args[:form] = val[1]
  end
  if args[:form] == :exported and ! Puppet[:storeconfigs] and ! Puppet[:parseonly]
    Puppet.warning addcontext("You cannot collect exported resources without storeconfigs being set; the collection will be ignored")
  end
  result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 225
  def _reduce_55( val, _values, result )
  if val[1]
    result = val[1]
    result.form = :virtual
  else
    result = :virtual
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 233
  def _reduce_56( val, _values, result )
    if val[1]
    result = val[1]
    result.form = :exported
  else
    result = :exported
  end
   result
  end
.,.,

 # reduce 57 omitted

 # reduce 58 omitted

module_eval <<'.,.,', 'grammar.ra', 241
  def _reduce_59( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 60 omitted

module_eval <<'.,.,', 'grammar.ra', 247
  def _reduce_61( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 248
  def _reduce_62( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 249
  def _reduce_63( val, _values, result )
 result=val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 256
  def _reduce_64( val, _values, result )
  result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
  #result = ast AST::CollExpr
  #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 261
  def _reduce_65( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1][:value], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 66 omitted

 # reduce 67 omitted

module_eval <<'.,.,', 'grammar.ra', 268
  def _reduce_68( val, _values, result )
  result = ast AST::ResourceInstance, :title => val[0], :parameters => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 269
  def _reduce_69( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 274
  def _reduce_70( val, _values, result )
    val[0].push val[2]
    result = val[0]
   result
  end
.,.,

 # reduce 71 omitted

 # reduce 72 omitted

module_eval <<'.,.,', 'grammar.ra', 281
  def _reduce_73( val, _values, result )
  result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 285
  def _reduce_74( val, _values, result )
  result = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 289
  def _reduce_75( val, _values, result )
  result = ast AST::Type, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 76 omitted

 # reduce 77 omitted

 # reduce 78 omitted

 # reduce 79 omitted

 # reduce 80 omitted

 # reduce 81 omitted

 # reduce 82 omitted

module_eval <<'.,.,', 'grammar.ra', 304
  def _reduce_83( val, _values, result )
  raise Puppet::ParseError, "Cannot assign to variables in other namespaces" if val[0][:value] =~ /::/
  # this is distinct from referencing a variable
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 307
  def _reduce_84( val, _values, result )
    result = ast AST::VarDef, :name => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 312
  def _reduce_85( val, _values, result )
  variable = ast AST::Name, :value => val[0][:value], :line => val[0][:line]
  result = ast AST::VarDef, :name => variable, :value => val[2], :append => true, :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 317
  def _reduce_86( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 317
  def _reduce_87( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 322
  def _reduce_88( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 326
  def _reduce_89( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 331
  def _reduce_90( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0][:value], :line => val[0][:line], :value => val[2],
    :add => true
   result
  end
.,.,

 # reduce 91 omitted

 # reduce 92 omitted

module_eval <<'.,.,', 'grammar.ra', 339
  def _reduce_93( val, _values, result )
  result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 339
  def _reduce_94( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 344
  def _reduce_95( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 345
  def _reduce_96( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 346
  def _reduce_97( val, _values, result )
 result = val[0].push(val[2])
   result
  end
.,.,

 # reduce 98 omitted

 # reduce 99 omitted

 # reduce 100 omitted

 # reduce 101 omitted

 # reduce 102 omitted

 # reduce 103 omitted

 # reduce 104 omitted

 # reduce 105 omitted

 # reduce 106 omitted

 # reduce 107 omitted

 # reduce 108 omitted

 # reduce 109 omitted

 # reduce 110 omitted

 # reduce 111 omitted

 # reduce 112 omitted

 # reduce 113 omitted

 # reduce 114 omitted

 # reduce 115 omitted

module_eval <<'.,.,', 'grammar.ra', 375
  def _reduce_116( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => val[2],
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 380
  def _reduce_117( val, _values, result )
  result = ast AST::Function,
    :name => val[0][:value], :line => val[0][:line],
    :arguments => AST::ASTArray.new({}),
    :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 381
  def _reduce_118( val, _values, result )
 result = ast AST::String, :value => val[0][:value],                  :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 382
  def _reduce_119( val, _values, result )
 result = ast AST::Concat, :value => [ast(AST::String,val[0])]+val[1], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 384
  def _reduce_120( val, _values, result )
 result = [val[0]] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 386
  def _reduce_121( val, _values, result )
 result = [ast(AST::String,val[0])]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 387
  def _reduce_122( val, _values, result )
 result = [ast(AST::String,val[0])] + val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 392
  def _reduce_123( val, _values, result )
  result = ast AST::Boolean, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 397
  def _reduce_124( val, _values, result )
  Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
  result = ast AST::ResourceReference, :type => val[0][:value], :line => val[0][:line], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 399
  def _reduce_125( val, _values, result )
  result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 403
  def _reduce_126( val, _values, result )
  result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 415
  def _reduce_127( val, _values, result )
  @lexer.commentpop
  args = {
    :test => val[0],
    :statements => val[2]
  }

  args[:else] = val[4] if val[4]

  result = ast AST::IfStatement, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 426
  def _reduce_128( val, _values, result )
    @lexer.commentpop
    args = {
      :test => val[0],
      :statements => ast(AST::Nop)
  }

  args[:else] = val[3] if val[3]

  result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 129 omitted

module_eval <<'.,.,', 'grammar.ra', 431
  def _reduce_130( val, _values, result )
    result = ast AST::Else, :statements => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 435
  def _reduce_131( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 439
  def _reduce_132( val, _values, result )
    @lexer.commentpop
    result = ast AST::Else, :statements => ast(AST::Nop)
   result
  end
.,.,

 # reduce 133 omitted

module_eval <<'.,.,', 'grammar.ra', 456
  def _reduce_134( val, _values, result )
    result = ast AST::InOperator, :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 459
  def _reduce_135( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 462
  def _reduce_136( val, _values, result )
    result = ast AST::MatchOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 465
  def _reduce_137( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 468
  def _reduce_138( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 471
  def _reduce_139( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 474
  def _reduce_140( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 477
  def _reduce_141( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 480
  def _reduce_142( val, _values, result )
    result = ast AST::ArithmeticOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 483
  def _reduce_143( val, _values, result )
    result = ast AST::Minus, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 486
  def _reduce_144( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 489
  def _reduce_145( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 492
  def _reduce_146( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 495
  def _reduce_147( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 498
  def _reduce_148( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 501
  def _reduce_149( val, _values, result )
    result = ast AST::ComparisonOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 504
  def _reduce_150( val, _values, result )
    result = ast AST::Not, :value => val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 507
  def _reduce_151( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 510
  def _reduce_152( val, _values, result )
    result = ast AST::BooleanOperator, :operator => val[1][:value], :lval => val[0], :rval => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 513
  def _reduce_153( val, _values, result )
    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 518
  def _reduce_154( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseStatement, :test => val[1], :options => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 519
  def _reduce_155( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 524
  def _reduce_156( val, _values, result )
    val[0].push val[1]
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 529
  def _reduce_157( val, _values, result )
  @lexer.commentpop
  result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 538
  def _reduce_158( val, _values, result )
  @lexer.commentpop

    result = ast(
    AST::CaseOpt,
    :value => val[0],

    :statements => ast(AST::ASTArray)
  )
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 539
  def _reduce_159( val, _values, result )
 result = aryfy(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 544
  def _reduce_160( val, _values, result )
    val[0].push(val[2])
    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 548
  def _reduce_161( val, _values, result )
  result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 554
  def _reduce_163( val, _values, result )
    @lexer.commentpop
    result = val[1]
   result
  end
.,.,

 # reduce 164 omitted

module_eval <<'.,.,', 'grammar.ra', 564
  def _reduce_165( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
    val[0].push(val[2])
    result = val[0]
  else
    result = ast AST::ASTArray, :children => [val[0],val[2]]
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 568
  def _reduce_166( val, _values, result )
  result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 167 omitted

 # reduce 168 omitted

 # reduce 169 omitted

 # reduce 170 omitted

 # reduce 171 omitted

 # reduce 172 omitted

 # reduce 173 omitted

module_eval <<'.,.,', 'grammar.ra', 579
  def _reduce_174( val, _values, result )
    result = ast AST::Default, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

 # reduce 175 omitted

module_eval <<'.,.,', 'grammar.ra', 582
  def _reduce_176( val, _values, result )
 result = [val[0][:value]]
   result
  end
.,.,

 # reduce 177 omitted

module_eval <<'.,.,', 'grammar.ra', 584
  def _reduce_178( val, _values, result )
 result = val[0] += val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 593
  def _reduce_179( val, _values, result )
  val[1].each do |file|
    import(file)
  end

  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 605
  def _reduce_180( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :code => val[4],
                                                                       :line => val[0][:line]))
  @lexer.indefine = false

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 610
  def _reduce_181( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Definition.new(classname(val[1]),
                                               ast_context(true).merge(:arguments => val[2], :line => val[0][:line]))
  @lexer.indefine = false
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 620
  def _reduce_182( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :code => val[5], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 627
  def _reduce_183( val, _values, result )
  @lexer.commentpop
  # Our class gets defined in the parent namespace, not our own.
  @lexer.namepop
  result = Puppet::Parser::AST::Hostclass.new(classname(val[1]),
                                              ast_context(true).merge(:arguments => val[2], :parent => val[3],
                                                                      :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 634
  def _reduce_184( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1],
                                         ast_context(true).merge(:parent => val[2], :code => val[4],
                                                                 :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 637
  def _reduce_185( val, _values, result )
  @lexer.commentpop
  result = Puppet::Parser::AST::Node.new(val[1], ast_context(true).merge(:parent => val[2], :line => val[0][:line]))
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 638
  def _reduce_186( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 640
  def _reduce_187( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 641
  def _reduce_188( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 642
  def _reduce_189( val, _values, result )
 result = "class"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 649
  def _reduce_190( val, _values, result )
    result = [result]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 653
  def _reduce_191( val, _values, result )
    result = val[0]
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 657
  def _reduce_192( val, _values, result )
  result = ast AST::HostName, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 658
  def _reduce_193( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 659
  def _reduce_194( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 660
  def _reduce_195( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

 # reduce 196 omitted

module_eval <<'.,.,', 'grammar.ra', 666
  def _reduce_197( val, _values, result )
  result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 670
  def _reduce_198( val, _values, result )
  result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 199 omitted

module_eval <<'.,.,', 'grammar.ra', 675
  def _reduce_200( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 679
  def _reduce_201( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 202 omitted

module_eval <<'.,.,', 'grammar.ra', 686
  def _reduce_203( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 691
  def _reduce_204( val, _values, result )
  Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 695
  def _reduce_205( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0][:value]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 697
  def _reduce_206( val, _values, result )
  result = [val[0][:value], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 699
  def _reduce_207( val, _values, result )
  result = [val[0][:value]]
   result
  end
.,.,

 # reduce 208 omitted

module_eval <<'.,.,', 'grammar.ra', 704
  def _reduce_209( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 210 omitted

module_eval <<'.,.,', 'grammar.ra', 709
  def _reduce_211( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 212 omitted

 # reduce 213 omitted

module_eval <<'.,.,', 'grammar.ra', 715
  def _reduce_214( val, _values, result )
  result = ast AST::Variable, :value => val[0][:value], :line => val[0][:line]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 716
  def _reduce_215( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 717
  def _reduce_216( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 718
  def _reduce_217( val, _values, result )
 result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 218 omitted

 # reduce 219 omitted

 # reduce 220 omitted

module_eval <<'.,.,', 'grammar.ra', 724
  def _reduce_221( val, _values, result )
 result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 729
  def _reduce_222( val, _values, result )
  result = ast AST::Regex, :value => val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 737
  def _reduce_223( val, _values, result )
  if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 744
  def _reduce_224( val, _values, result )
    if val[1].instance_of?(AST::ASTHash)
    result = val[1]
  else
    result = ast AST::ASTHash, { :value => val[1] }
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 746
  def _reduce_225( val, _values, result )
  result = ast AST::ASTHash
   result
  end
.,.,

 # reduce 226 omitted

module_eval <<'.,.,', 'grammar.ra', 756
  def _reduce_227( val, _values, result )
    if val[0].instance_of?(AST::ASTHash)
    result = val[0].merge(val[2])
  else
    result = ast AST::ASTHash, :value => val[0]
    result.merge(val[2])
  end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 760
  def _reduce_228( val, _values, result )
  result = ast AST::ASTHash, { :value => { val[0] => val[2] } }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 761
  def _reduce_229( val, _values, result )
 result = val[0][:value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 762
  def _reduce_230( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 767
  def _reduce_231( val, _values, result )
  result = ast AST::HashOrArrayAccess, :variable => val[0][:value], :key => val[2]
   result
  end
.,.,

 # reduce 232 omitted

module_eval <<'.,.,', 'grammar.ra', 772
  def _reduce_233( val, _values, result )
    result = ast AST::HashOrArrayAccess, :variable => val[0], :key => val[2]
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
