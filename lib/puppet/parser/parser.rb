#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "grammar.ra".
#

require 'racc/parser'


require 'puppet'
require 'puppet/util/loadedfile'
require 'puppet/parser/lexer'
require 'puppet/parser/ast'
#require 'puppet/parser/interpreter'

module Puppet
    class ParseError < Puppet::Error; end
    class ImportError < Racc::ParseError; end
    class AlreadyImportedError < ImportError; end
end

Puppet[:typecheck] = true
Puppet[:paramcheck] = true


module Puppet

  module Parser

    class Parser < Racc::Parser

module_eval <<'..end grammar.ra modeval..id6c549c7b60', 'grammar.ra', 639

# It got too annoying having code in a file that needs to be compiled.
require 'puppet/parser/parser_support'

# Make emacs happy
# Local Variables:
# mode: ruby
# End:

# $Id$

..end grammar.ra modeval..id6c549c7b60

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 53, :_reduce_1,
 1, 53, :_reduce_none,
 1, 54, :_reduce_none,
 2, 54, :_reduce_4,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 4, 64, :_reduce_17,
 3, 64, :_reduce_18,
 2, 64, :_reduce_19,
 1, 69, :_reduce_none,
 1, 69, :_reduce_none,
 1, 70, :_reduce_none,
 3, 70, :_reduce_23,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_none,
 1, 72, :_reduce_31,
 1, 71, :_reduce_none,
 3, 71, :_reduce_33,
 5, 57, :_reduce_34,
 5, 57, :_reduce_35,
 5, 57, :_reduce_36,
 5, 68, :_reduce_37,
 2, 58, :_reduce_38,
 1, 88, :_reduce_39,
 2, 88, :_reduce_40,
 2, 59, :_reduce_41,
 3, 89, :_reduce_42,
 3, 89, :_reduce_43,
 1, 90, :_reduce_none,
 1, 90, :_reduce_none,
 3, 90, :_reduce_46,
 1, 91, :_reduce_none,
 3, 91, :_reduce_48,
 1, 92, :_reduce_none,
 1, 92, :_reduce_none,
 3, 93, :_reduce_51,
 3, 93, :_reduce_52,
 1, 94, :_reduce_none,
 1, 94, :_reduce_none,
 4, 96, :_reduce_55,
 1, 82, :_reduce_none,
 3, 82, :_reduce_57,
 0, 83, :_reduce_none,
 1, 83, :_reduce_none,
 1, 98, :_reduce_60,
 1, 73, :_reduce_61,
 1, 75, :_reduce_62,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 1, 97, :_reduce_none,
 3, 60, :_reduce_69,
 0, 84, :_reduce_70,
 1, 84, :_reduce_71,
 3, 84, :_reduce_72,
 3, 101, :_reduce_73,
 3, 102, :_reduce_74,
 1, 103, :_reduce_none,
 1, 103, :_reduce_none,
 0, 87, :_reduce_77,
 1, 87, :_reduce_78,
 3, 87, :_reduce_79,
 1, 104, :_reduce_none,
 3, 104, :_reduce_81,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 95, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 1, 100, :_reduce_none,
 4, 77, :_reduce_98,
 3, 77, :_reduce_99,
 1, 79, :_reduce_100,
 1, 79, :_reduce_101,
 1, 76, :_reduce_102,
 4, 80, :_reduce_103,
 4, 80, :_reduce_104,
 6, 62, :_reduce_105,
 0, 107, :_reduce_none,
 4, 107, :_reduce_107,
 1, 106, :_reduce_none,
 5, 61, :_reduce_109,
 1, 108, :_reduce_none,
 2, 108, :_reduce_111,
 5, 109, :_reduce_112,
 4, 109, :_reduce_113,
 1, 110, :_reduce_none,
 3, 110, :_reduce_115,
 3, 78, :_reduce_116,
 1, 112, :_reduce_none,
 4, 112, :_reduce_118,
 1, 114, :_reduce_none,
 3, 114, :_reduce_120,
 3, 113, :_reduce_121,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_none,
 1, 111, :_reduce_129,
 1, 115, :_reduce_130,
 3, 115, :_reduce_131,
 2, 63, :_reduce_132,
 6, 65, :_reduce_133,
 5, 65, :_reduce_134,
 6, 66, :_reduce_135,
 5, 66, :_reduce_136,
 6, 67, :_reduce_137,
 5, 67, :_reduce_138,
 1, 86, :_reduce_none,
 1, 86, :_reduce_none,
 1, 81, :_reduce_none,
 1, 81, :_reduce_none,
 1, 118, :_reduce_none,
 3, 118, :_reduce_144,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 1, 120, :_reduce_none,
 0, 55, :_reduce_149,
 0, 121, :_reduce_150,
 1, 116, :_reduce_none,
 3, 116, :_reduce_152,
 3, 116, :_reduce_153,
 1, 122, :_reduce_none,
 3, 122, :_reduce_155,
 3, 123, :_reduce_156,
 1, 123, :_reduce_157,
 3, 123, :_reduce_158,
 1, 123, :_reduce_159,
 1, 119, :_reduce_none,
 2, 119, :_reduce_161,
 1, 117, :_reduce_none,
 2, 117, :_reduce_163,
 1, 124, :_reduce_none,
 1, 124, :_reduce_none,
 1, 74, :_reduce_166,
 3, 99, :_reduce_167,
 2, 99, :_reduce_168,
 1, 105, :_reduce_none,
 1, 105, :_reduce_none,
 0, 85, :_reduce_none,
 1, 85, :_reduce_172 ]

racc_reduce_n = 173

racc_shift_n = 277

racc_action_table = [
    76,    54,    58,    52,   163,   211,    76,    54,    58,   129,
    21,   181,   197,    35,   210,    91,    64,   201,   104,    92,
     5,    91,    64,   130,    76,    54,    58,    38,    39,   209,
   186,    46,    93,    38,    39,    57,    60,    46,     9,    66,
   118,    57,    60,   102,     9,    66,   162,  -125,    62,   171,
     9,    76,    54,    58,    62,    46,    94,   206,   208,    57,
   115,   170,    40,    66,   197,    41,   244,   118,    40,   201,
   163,    41,    62,    76,    54,    58,   133,   144,    21,    76,
    54,    58,    46,   130,    38,    39,    57,   176,    46,    64,
    66,   206,   208,   148,   239,    64,   233,  -123,    35,    62,
    76,    54,    58,   232,    46,     5,     9,   238,    57,    60,
    46,  -122,    66,   144,    57,    60,    64,     9,    66,    40,
  -125,    62,    41,     9,    46,    35,    35,    62,   157,   148,
   169,    46,     5,     5,   202,    57,    60,   203,   144,    66,
    52,    54,    58,   163,     9,    54,    58,   169,    62,    46,
    76,    54,    58,   144,   148,  -122,    64,   189,   260,   166,
    48,    76,    54,    58,    46,  -124,    64,   165,   187,   148,
  -139,    46,   189,   190,   131,    57,    60,    64,  -127,    66,
  -123,    46,   219,    50,     9,    57,    60,   108,    62,    66,
    54,    58,    46,  -124,     9,   222,    57,    60,    62,   223,
    66,    76,    54,    58,   142,     9,   142,   226,   130,    62,
   212,    76,    54,    58,   206,   208,   127,    64,   229,    52,
  -126,   108,    76,    54,    58,   160,   158,    64,   236,   237,
   154,   240,    46,    99,   243,   142,    57,    60,    64,  -126,
    66,    92,    46,   138,    95,     9,    57,    60,    89,    62,
    66,   169,   137,    46,   136,     9,   261,    57,    60,    62,
   263,    66,    76,    54,    58,  -127,     9,    45,  -128,    44,
    62,  -123,    76,    54,    58,  -124,  -122,  -125,    64,    54,
    58,  -123,  -127,  -125,   270,  -172,   271,  -122,    64,    54,
    58,   135,    33,    46,   118,  -124,   nil,    57,    60,   nil,
   nil,    66,   nil,    46,   118,   nil,     9,    57,    60,    46,
    62,    66,   nil,    57,   176,   nil,     9,    66,   nil,    46,
    62,   nil,   nil,    57,   176,   nil,    62,    66,    54,    58,
    54,    58,   nil,   nil,   nil,   nil,    62,   nil,   nil,   nil,
   nil,   nil,   nil,   118,   nil,   118,    54,    58,   nil,   nil,
   nil,   nil,    54,    58,   nil,   nil,   nil,   nil,    46,   nil,
    46,   118,    57,   176,    57,   176,    66,    64,    66,   nil,
    54,    58,   183,   nil,   nil,    62,    46,    62,   nil,   nil,
    57,   176,    46,   nil,    66,   118,    57,    60,    54,    58,
    66,   177,   nil,    62,    50,     9,   nil,   nil,   nil,    62,
    46,   nil,   nil,   118,    57,   176,   nil,   nil,    66,    54,
    58,   nil,    50,   nil,   nil,    54,    58,    62,    46,   nil,
   nil,   nil,    57,   176,    64,   nil,    66,   nil,   nil,   125,
   118,   nil,   nil,    54,    58,    62,   nil,   234,   nil,    46,
   nil,   nil,   nil,    57,    60,    46,   nil,    66,   118,    57,
   176,    50,     9,    66,   nil,   255,    62,   nil,   nil,   nil,
   nil,   nil,    62,    46,   nil,   nil,    21,    57,   176,   nil,
   nil,    66,   nil,   nil,   215,   nil,    19,   nil,    24,    26,
    62,     1,     6,   nil,    12,    21,    17,   nil,    22,   nil,
    27,   nil,   nil,     5,     9,    19,   nil,    24,    26,   213,
     1,     6,   nil,    12,   nil,    17,   nil,    22,   nil,    27,
    21,   nil,     5,     9,   nil,   nil,   nil,   nil,   231,   nil,
    19,   nil,    24,    26,   nil,     1,     6,   nil,    12,    21,
    17,   nil,    22,   nil,    27,   nil,   nil,     5,     9,    19,
   nil,    24,    26,   268,     1,     6,   nil,    12,   nil,    17,
   nil,    22,   nil,    27,    21,   nil,     5,     9,   nil,   nil,
   nil,   nil,   272,   nil,    19,   nil,    24,    26,   nil,     1,
     6,   nil,    12,    21,    17,   nil,    22,   nil,    27,   nil,
   nil,     5,     9,    19,   nil,    24,    26,   275,     1,     6,
   nil,    12,   nil,    17,   nil,    22,   nil,    27,    21,   nil,
     5,     9,   nil,   nil,   nil,   nil,   254,   nil,    19,   nil,
    24,    26,   nil,     1,     6,   nil,    12,    21,    17,   nil,
    22,   nil,    27,   nil,   nil,     5,     9,    19,   nil,    24,
    26,   241,     1,     6,   nil,    12,   nil,    17,   nil,    22,
   nil,    27,    21,   nil,     5,     9,   nil,   nil,   nil,   nil,
   276,   nil,    19,   nil,    24,    26,   nil,     1,     6,   nil,
    12,    21,    17,   nil,    22,   nil,    27,   nil,   nil,     5,
     9,    19,   nil,    24,    26,   nil,     1,     6,   nil,    12,
    21,    17,   nil,    22,   nil,    27,   nil,   nil,     5,     9,
    19,   nil,    24,    26,   nil,     1,     6,   nil,    12,    21,
    17,   nil,    22,   nil,    27,   nil,   nil,     5,     9,    19,
   nil,    24,    26,   nil,     1,     6,   nil,    12,    21,    17,
   nil,    22,   nil,    27,   nil,   nil,     5,     9,    19,   nil,
    24,    26,   nil,     1,     6,   nil,    12,    21,    17,   nil,
    22,   nil,    27,   nil,   nil,     5,     9,    19,   nil,    24,
    26,   nil,     1,     6,   nil,    12,   nil,    17,   nil,    22,
   nil,    27,   nil,   nil,     5,     9 ]

racc_action_check = [
    91,    91,    91,    60,   108,   150,   188,   188,   188,    59,
   131,   128,   239,     6,   150,    28,    91,   239,    42,    28,
     6,    68,   188,    60,    45,    45,    45,    12,    12,   146,
   131,    91,    28,   102,   102,    91,    91,   188,   131,    91,
    45,   188,   188,    42,    91,   188,   108,    67,    91,   126,
   188,   166,   166,   166,   188,    45,    28,   146,   146,    45,
    45,   123,    12,    45,   138,    12,   205,   166,   102,   138,
   115,   102,    45,    76,    76,    76,    76,   207,     2,   240,
   240,   240,   166,   115,   104,   104,   166,   166,   207,    76,
   166,   205,   205,   207,   199,   240,   192,   122,     2,   166,
   236,   236,   236,   192,    76,     2,     2,   199,    76,    76,
   240,    65,    76,    94,   240,   240,   236,    76,   240,   104,
   120,    76,   104,   240,    94,    99,    26,   240,    99,    94,
   119,   236,    99,    26,   140,   236,   236,   141,   144,   236,
    17,    17,    17,   142,   236,   137,   137,   143,   236,   144,
    19,    19,    19,    93,   144,   117,    17,   228,   228,   116,
    17,    22,    22,    22,    93,   114,    19,   109,   134,    93,
    64,    17,   134,   134,    61,    17,    17,    22,    71,    17,
    69,    19,   164,    17,    17,    19,    19,   165,    17,    19,
    24,    24,    22,    53,    19,   167,    22,    22,    19,   168,
    22,    52,    52,    52,   169,    22,   170,   172,   176,    22,
   153,   226,   226,   226,   153,   153,    49,    52,   184,   186,
    47,    44,    33,    33,    33,   103,   100,   226,   197,   198,
    95,   201,    52,    37,   204,    92,    52,    52,    33,    72,
    52,    36,   226,    88,    30,    52,   226,   226,    27,    52,
   226,   225,    87,    33,    85,   226,   231,    33,    33,   226,
   232,    33,   162,   162,   162,    84,    33,    15,    83,    13,
    33,    82,   163,   163,   163,   247,   248,   250,   162,   136,
   136,   251,   252,    81,   259,   260,   261,    80,   163,   211,
   211,    79,     1,   162,   136,    77,   nil,   162,   162,   nil,
   nil,   162,   nil,   163,   211,   nil,   162,   163,   163,   136,
   162,   163,   nil,   136,   136,   nil,   163,   136,   nil,   211,
   163,   nil,   nil,   211,   211,   nil,   136,   211,   210,   210,
   233,   233,   nil,   nil,   nil,   nil,   211,   nil,   nil,   nil,
   nil,   nil,   nil,   210,   nil,   233,   258,   258,   nil,   nil,
   nil,   nil,   130,   130,   nil,   nil,   nil,   nil,   210,   nil,
   233,   258,   210,   210,   233,   233,   210,   130,   233,   nil,
   129,   129,   130,   nil,   nil,   210,   258,   233,   nil,   nil,
   258,   258,   130,   nil,   258,   129,   130,   130,   127,   127,
   130,   127,   nil,   258,   130,   130,   nil,   nil,   nil,   130,
   129,   nil,   nil,   127,   129,   129,   nil,   nil,   129,    48,
    48,   nil,   129,   nil,   nil,   177,   177,   129,   127,   nil,
   nil,   nil,   127,   127,    48,   nil,   127,   nil,   nil,    48,
   177,   nil,   nil,   194,   194,   127,   nil,   194,   nil,    48,
   nil,   nil,   nil,    48,    48,   177,   nil,    48,   194,   177,
   177,    48,    48,   177,   nil,   216,    48,   nil,   nil,   nil,
   nil,   nil,   177,   194,   nil,   nil,   216,   194,   194,   nil,
   nil,   194,   nil,   nil,   160,   nil,   216,   nil,   216,   216,
   194,   216,   216,   nil,   216,   160,   216,   nil,   216,   nil,
   216,   nil,   nil,   216,   216,   160,   nil,   160,   160,   158,
   160,   160,   nil,   160,   nil,   160,   nil,   160,   nil,   160,
   158,   nil,   160,   160,   nil,   nil,   nil,   nil,   191,   nil,
   158,   nil,   158,   158,   nil,   158,   158,   nil,   158,   191,
   158,   nil,   158,   nil,   158,   nil,   nil,   158,   158,   191,
   nil,   191,   191,   242,   191,   191,   nil,   191,   nil,   191,
   nil,   191,   nil,   191,   242,   nil,   191,   191,   nil,   nil,
   nil,   nil,   263,   nil,   242,   nil,   242,   242,   nil,   242,
   242,   nil,   242,   263,   242,   nil,   242,   nil,   242,   nil,
   nil,   242,   242,   263,   nil,   263,   263,   273,   263,   263,
   nil,   263,   nil,   263,   nil,   263,   nil,   263,   273,   nil,
   263,   263,   nil,   nil,   nil,   nil,   214,   nil,   273,   nil,
   273,   273,   nil,   273,   273,   nil,   273,   214,   273,   nil,
   273,   nil,   273,   nil,   nil,   273,   273,   214,   nil,   214,
   214,   202,   214,   214,   nil,   214,   nil,   214,   nil,   214,
   nil,   214,   202,   nil,   214,   214,   nil,   nil,   nil,   nil,
   274,   nil,   202,   nil,   202,   202,   nil,   202,   202,   nil,
   202,   274,   202,   nil,   202,   nil,   202,   nil,   nil,   202,
   202,   274,   nil,   274,   274,   nil,   274,   274,   nil,   274,
     0,   274,   nil,   274,   nil,   274,   nil,   nil,   274,   274,
     0,   nil,     0,     0,   nil,     0,     0,   nil,     0,   135,
     0,   nil,     0,   nil,     0,   nil,   nil,     0,     0,   135,
   nil,   135,   135,   nil,   135,   135,   nil,   135,   271,   135,
   nil,   135,   nil,   135,   nil,   nil,   135,   135,   271,   nil,
   271,   271,   nil,   271,   271,   nil,   271,    32,   271,   nil,
   271,   nil,   271,   nil,   nil,   271,   271,    32,   nil,    32,
    32,   nil,    32,    32,   nil,    32,   nil,    32,   nil,    32,
   nil,    32,   nil,   nil,    32,    32 ]

racc_action_pointer = [
   662,   279,    60,   nil,   nil,   nil,   -25,   nil,   nil,   nil,
   nil,   nil,    24,   263,   nil,   261,   nil,   138,   nil,   148,
   nil,   nil,   159,   nil,   187,   nil,    88,   206,    13,   nil,
   244,   nil,   719,   220,   nil,   nil,   235,   198,   nil,   nil,
   nil,   nil,     8,   nil,   183,    22,   nil,   199,   406,   195,
   nil,   nil,   199,   172,   nil,   nil,   nil,   nil,   nil,    -1,
     1,   164,   nil,   nil,   168,    90,   nil,    26,    19,   159,
   nil,   157,   218,   nil,   nil,   nil,    71,   274,   nil,   285,
   266,   262,   250,   247,   244,   248,   nil,   242,   221,   nil,
   nil,    -2,   197,   131,    91,   230,   nil,   nil,   nil,    87,
   220,   nil,    30,   219,    81,   nil,   nil,   nil,    -5,   157,
   nil,   nil,   nil,   nil,   144,    61,   120,   134,   nil,   120,
    99,   nil,    76,    44,   nil,   nil,    26,   385,     6,   367,
   349,    -8,   nil,   nil,   163,   681,   276,   142,    31,   nil,
   128,   132,   134,   137,   116,   nil,     9,   nil,   nil,   nil,
   -10,   nil,   nil,   166,   nil,   nil,   nil,   nil,   492,   nil,
   467,   nil,   260,   270,   175,   149,    49,   188,   192,   166,
   168,   nil,   198,   nil,   nil,   nil,   186,   412,   nil,   nil,
   nil,   nil,   nil,   nil,   195,   nil,   217,   nil,     4,   nil,
   nil,   511,    86,   nil,   430,   nil,   nil,   215,   206,    84,
   nil,   218,   624,   nil,   227,    43,   nil,    55,   nil,   nil,
   325,   286,   nil,   nil,   599,   nil,   448,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   241,   209,   nil,   148,   nil,
   nil,   227,   254,   327,   nil,   nil,    98,   nil,   nil,   -21,
    77,   nil,   536,   nil,   nil,   nil,   nil,   254,   255,   nil,
   256,   260,   261,   nil,   nil,   nil,   nil,   nil,   343,   277,
   278,   280,   nil,   555,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   700,   nil,   580,   643,   nil,   nil ]

racc_action_default = [
  -149,  -173,  -173,   -14,    -2,  -142,  -173,   -15,    -3,  -140,
   -16,    -5,  -173,  -173,    -6,  -173,    -7,  -141,    -8,  -173,
    -9,  -139,  -173,   -10,  -173,   -11,  -173,   -39,  -173,   -12,
  -173,   -13,    -1,  -173,   -38,  -141,  -173,  -149,  -147,  -146,
  -145,  -148,  -149,  -143,   -77,   -70,  -166,   -28,  -173,  -173,
   -31,   -29,  -173,   -30,  -100,   -32,   -19,  -102,  -101,   -20,
   -61,   -21,   -60,   -22,   -62,   -24,  -129,   -25,  -173,   -26,
  -128,   -27,   -96,   -94,  -108,   -92,  -173,   -88,   -95,  -173,
   -89,   -93,   -90,   -97,   -91,  -173,  -130,  -132,  -149,   -40,
   -41,  -173,   -70,  -149,  -149,  -173,    -4,   -69,  -162,  -173,
  -173,  -160,  -173,  -173,  -173,   -75,   -76,   -78,  -173,  -171,
  -126,   -68,   -66,   -71,   -63,   -61,   -58,   -64,   -62,  -171,
   -67,   -56,   -65,  -173,  -127,   -18,  -173,  -173,  -173,  -173,
  -173,  -173,   -80,  -168,  -173,  -173,  -173,  -173,  -150,  -151,
  -173,  -173,  -173,  -171,  -149,   -44,  -173,   -45,   -61,   -47,
  -173,   -54,   -53,  -173,   277,  -163,  -164,  -165,  -173,  -161,
  -173,  -144,  -173,  -173,  -173,  -172,   -59,  -173,  -173,  -172,
   -70,   -17,  -173,  -124,  -116,  -117,   -61,  -173,  -122,  -125,
  -123,  -103,   -23,   -99,  -173,   -33,  -173,  -167,  -173,  -169,
  -170,  -173,  -173,  -114,  -173,  -110,  -131,  -159,  -173,  -173,
  -154,  -157,  -173,  -104,  -173,  -173,   -50,  -173,   -49,   -43,
  -173,  -173,   -42,  -136,  -173,  -138,  -173,   -74,   -73,   -37,
   -79,   -57,   -34,   -35,   -72,  -171,  -173,  -119,  -171,   -98,
   -81,  -106,  -173,  -173,  -109,  -111,  -173,  -152,  -153,  -173,
  -173,  -134,  -173,   -36,   -48,   -46,   -86,   -82,   -83,   -51,
   -87,   -84,   -85,   -52,  -135,  -137,   -55,  -121,  -173,  -173,
  -170,  -173,  -105,  -173,  -115,  -158,  -155,  -156,  -133,  -120,
  -118,  -173,  -113,  -173,  -173,  -112,  -107 ]

racc_goto_table = [
    28,    32,    36,    96,   119,    53,   200,   172,   175,    56,
   188,   111,    86,   107,    51,    37,   193,     4,    71,    43,
   105,   121,   195,    30,   146,   153,   245,   164,   249,   253,
   134,    90,    28,   114,    79,    88,    53,   168,   262,   194,
   126,   109,   112,   167,   174,    51,   124,   116,   228,    71,
    87,   143,   140,   100,    98,    42,   103,   172,   227,   101,
    69,   204,   182,   198,   199,    34,   155,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   193,   205,   nil,   nil,   nil,   nil,
   235,   nil,   nil,    74,   nil,   nil,    85,   nil,   122,   nil,
   nil,    69,   nil,   nil,   nil,   nil,   nil,    97,   nil,   nil,
   nil,   nil,   nil,   nil,   258,   139,   nil,   266,   156,   159,
   nil,   161,   nil,   264,   nil,   173,   128,    53,    53,    47,
   nil,   nil,   184,   nil,   173,   196,    51,    51,   124,   225,
    71,    71,   111,   nil,   220,    28,   191,   124,   172,   269,
   132,   105,   221,   256,   nil,   224,   259,   110,   nil,   nil,
    47,   nil,   nil,   nil,   114,   141,   nil,   nil,    28,   214,
    28,   216,    96,   112,   nil,   173,   nil,   124,   nil,   nil,
   180,   nil,    69,    69,   nil,   nil,   nil,   nil,   124,   180,
   nil,   nil,   173,   nil,    55,    96,    78,    96,   nil,    78,
   nil,    28,   nil,   nil,   nil,   124,   nil,   nil,   247,   247,
    78,   nil,    28,   242,   nil,    67,   nil,   246,   246,   122,
   nil,   252,   252,    96,    28,    55,    28,   nil,   nil,    78,
   180,   173,   nil,   nil,   nil,   nil,   217,   218,   nil,   110,
   nil,    47,    47,   120,   124,   nil,    67,   180,   110,   nil,
   nil,   nil,    28,    78,    96,    96,   173,   nil,   nil,   nil,
   nil,   nil,   230,   251,   251,   nil,   nil,    65,    78,   124,
   nil,   nil,   nil,    28,   273,   nil,   nil,   nil,   110,   nil,
   nil,    28,   274,    28,    28,   nil,   180,   nil,   nil,   110,
   nil,   152,   152,   nil,   nil,   117,   nil,   nil,    65,    83,
   257,   nil,    83,   nil,   nil,   nil,   110,    55,   185,   nil,
   265,   180,   nil,    83,   267,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   110,   110,   nil,   179,   nil,    67,    67,   nil,
   nil,   nil,    83,   nil,   179,   nil,   nil,   nil,   nil,    78,
    78,   nil,   152,   151,   151,   110,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    83,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   120,    78,   nil,   nil,   nil,   nil,
   110,    83,   nil,   nil,   nil,   179,   nil,   178,   nil,    65,
    65,   nil,   nil,   nil,   nil,   nil,   178,   nil,   nil,   nil,
   nil,   nil,   179,   nil,   151,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    78,   nil,   152,   nil,   nil,   250,   250,
   nil,   nil,   nil,    78,   nil,   nil,   117,    78,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   178,   nil,   nil,
   nil,   179,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    83,    83,   178,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   179,   151,   nil,   nil,
   248,   248,   nil,   nil,   nil,   nil,   nil,   nil,    83,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   178,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    83,   nil,   178,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    83,   nil,   nil,   nil,
    83 ]

racc_goto_check = [
    34,     2,    34,     4,    32,    27,    71,    59,    61,    17,
    53,    47,    27,    51,    26,    29,    59,     3,    24,    68,
    49,    44,    57,     1,    38,    38,    39,    33,    43,    43,
    52,    37,    34,    27,    54,    29,    27,    33,    55,    56,
    17,    35,    26,    31,    60,    26,    24,    30,    62,    24,
    63,    32,    64,    65,     3,    66,    67,    59,    61,     3,
    23,    33,    20,    69,    70,     5,    72,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    59,    38,   nil,   nil,   nil,   nil,
    57,   nil,   nil,    48,   nil,   nil,    48,   nil,    23,   nil,
   nil,    23,   nil,   nil,   nil,   nil,   nil,    48,   nil,   nil,
   nil,   nil,   nil,   nil,    53,     3,   nil,    71,    29,    68,
   nil,    68,   nil,    59,   nil,    27,    48,    27,    27,    25,
   nil,   nil,    17,   nil,    27,    27,    26,    26,    24,    32,
    24,    24,    47,   nil,    51,    34,     2,    24,    59,    61,
    48,    49,    44,    33,   nil,    49,    33,    25,   nil,   nil,
    25,   nil,   nil,   nil,    27,    48,   nil,   nil,    34,     2,
    34,     2,     4,    26,   nil,    27,   nil,    24,   nil,   nil,
    23,   nil,    23,    23,   nil,   nil,   nil,   nil,    24,    23,
   nil,   nil,    27,   nil,    28,     4,    28,     4,   nil,    28,
   nil,    34,   nil,   nil,   nil,    24,   nil,   nil,    27,    27,
    28,   nil,    34,     2,   nil,    22,   nil,    26,    26,    23,
   nil,    24,    24,     4,    34,    28,    34,   nil,   nil,    28,
    23,    27,   nil,   nil,   nil,   nil,    48,    48,   nil,    25,
   nil,    25,    25,    22,    24,   nil,    22,    23,    25,   nil,
   nil,   nil,    34,    28,     4,     4,    27,   nil,   nil,   nil,
   nil,   nil,    48,    23,    23,   nil,   nil,    21,    28,    24,
   nil,   nil,   nil,    34,     2,   nil,   nil,   nil,    25,   nil,
   nil,    34,     2,    34,    34,   nil,    23,   nil,   nil,    25,
   nil,    22,    22,   nil,   nil,    21,   nil,   nil,    21,    46,
    48,   nil,    46,   nil,   nil,   nil,    25,    28,    28,   nil,
    48,    23,   nil,    46,    48,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    25,    25,   nil,    22,   nil,    22,    22,   nil,
   nil,   nil,    46,   nil,    22,   nil,   nil,   nil,   nil,    28,
    28,   nil,    22,    21,    21,    25,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    46,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    22,    28,   nil,   nil,   nil,   nil,
    25,    46,   nil,   nil,   nil,    22,   nil,    21,   nil,    21,
    21,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,   nil,
   nil,   nil,    22,   nil,    21,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    28,   nil,    22,   nil,   nil,    22,    22,
   nil,   nil,   nil,    28,   nil,   nil,    21,    28,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    21,   nil,   nil,
   nil,    22,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    46,    46,    21,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    22,    21,   nil,   nil,
    21,    21,   nil,   nil,   nil,   nil,   nil,   nil,    46,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    21,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    46,   nil,    21,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    46,   nil,   nil,   nil,
    46 ]

racc_goto_pointer = [
   nil,    23,     1,    17,   -29,    63,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    -8,   nil,   nil,
   -67,   240,   188,    43,     1,   102,    -3,   -12,   167,     9,
     2,   -73,   -41,   -82,     0,    -3,   nil,     3,   -69,  -181,
   nil,   nil,   nil,  -182,   -24,   nil,   270,   -34,    64,   -24,
   nil,   -31,   -46,  -124,    15,  -193,   -97,  -114,   nil,  -120,
   -83,  -119,  -129,    26,   -36,    16,    43,    14,     7,   -75,
   -74,  -132,   -33 ]

racc_goto_default = [
   nil,   nil,   nil,   145,     8,    11,    14,    16,    18,    20,
    23,    25,    29,    31,     3,     7,    10,   nil,    59,    61,
    63,    80,    81,    82,    84,    72,    75,    77,    13,    15,
   nil,   nil,   nil,   nil,    68,   nil,     2,   nil,   nil,   147,
   207,   149,   150,   nil,   nil,   123,    70,    73,   nil,   113,
   106,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   192,    49,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :LBRACK => 2,
 :DQTEXT => 3,
 :SQTEXT => 4,
 :RBRACK => 5,
 :LBRACE => 6,
 :RBRACE => 7,
 :SYMBOL => 8,
 :FARROW => 9,
 :COMMA => 10,
 :TRUE => 11,
 :FALSE => 12,
 :EQUALS => 13,
 :LESSEQUAL => 14,
 :NOTEQUAL => 15,
 :DOT => 16,
 :COLON => 17,
 :TYPE => 18,
 :LLCOLLECT => 19,
 :RRCOLLECT => 20,
 :QMARK => 21,
 :LPAREN => 22,
 :RPAREN => 23,
 :ISEQUAL => 24,
 :GREATEREQUAL => 25,
 :GREATERTHAN => 26,
 :LESSTHAN => 27,
 :IF => 28,
 :ELSE => 29,
 :IMPORT => 30,
 :DEFINE => 31,
 :ELSIF => 32,
 :VARIABLE => 33,
 :CLASS => 34,
 :INHERITS => 35,
 :NODE => 36,
 :BOOLEAN => 37,
 :NAME => 38,
 :SEMIC => 39,
 :CASE => 40,
 :DEFAULT => 41,
 :AT => 42,
 :LCOLLECT => 43,
 :RCOLLECT => 44,
 :CLASSNAME => 45,
 :CLASSREF => 46,
 :NOT => 47,
 :OR => 48,
 :AND => 49,
 :UNDEF => 50,
 :PARROW => 51 }

racc_use_result_var = true

racc_nt_base = 52

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'LBRACK',
'DQTEXT',
'SQTEXT',
'RBRACK',
'LBRACE',
'RBRACE',
'SYMBOL',
'FARROW',
'COMMA',
'TRUE',
'FALSE',
'EQUALS',
'LESSEQUAL',
'NOTEQUAL',
'DOT',
'COLON',
'TYPE',
'LLCOLLECT',
'RRCOLLECT',
'QMARK',
'LPAREN',
'RPAREN',
'ISEQUAL',
'GREATEREQUAL',
'GREATERTHAN',
'LESSTHAN',
'IF',
'ELSE',
'IMPORT',
'DEFINE',
'ELSIF',
'VARIABLE',
'CLASS',
'INHERITS',
'NODE',
'BOOLEAN',
'NAME',
'SEMIC',
'CASE',
'DEFAULT',
'AT',
'LCOLLECT',
'RCOLLECT',
'CLASSNAME',
'CLASSREF',
'NOT',
'OR',
'AND',
'UNDEF',
'PARROW',
'$start',
'program',
'statements',
'nil',
'statement',
'resource',
'virtualresource',
'collection',
'assignment',
'casestatement',
'ifstatement',
'import',
'fstatement',
'definition',
'hostclass',
'nodedef',
'resourceoverride',
'funcvalues',
'namestrings',
'resourcerefs',
'namestring',
'name',
'variable',
'type',
'boolean',
'funcrvalue',
'selector',
'quotedtext',
'resourceref',
'classname',
'resourceinstances',
'endsemi',
'params',
'endcomma',
'classref',
'anyparams',
'at',
'collectrhand',
'collstatements',
'collstatement',
'colljoin',
'collexpr',
'colllval',
'simplervalue',
'resourceinst',
'resourcename',
'undef',
'array',
'rvalue',
'param',
'addparam',
'anyparam',
'rvalues',
'comma',
'iftest',
'else',
'caseopts',
'caseopt',
'casevalues',
'selectlhand',
'svalues',
'selectval',
'sintvalues',
'qtexts',
'argumentlist',
'classparent',
'hostnames',
'nodeparent',
'hostname',
'nothing',
'arguments',
'argument',
'classnameordefault']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'grammar.ra', 30
  def _reduce_1( val, _values, result )
    if val[0]
        # Make sure we always return an array.
        if val[0].is_a?(AST::ASTArray)
            if val[0].children.empty?
                result = nil
            else
                result = val[0]
            end
        else
            result = aryfy(val[0])
        end
    else
        result = nil
    end
   result
  end
.,.,

 # reduce 2 omitted

 # reduce 3 omitted

module_eval <<'.,.,', 'grammar.ra', 46
  def _reduce_4( val, _values, result )
    if val[0] and val[1]
        if val[0].instance_of?(AST::ASTArray)
            val[0].push(val[1])
            result = val[0]
        else
            result = ast AST::ASTArray, :children => [val[0],val[1]]
        end
    elsif obj = (val[0] || val[1])
        result = obj
    else result = nil
    end
   result
  end
.,.,

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

 # reduce 8 omitted

 # reduce 9 omitted

 # reduce 10 omitted

 # reduce 11 omitted

 # reduce 12 omitted

 # reduce 13 omitted

 # reduce 14 omitted

 # reduce 15 omitted

 # reduce 16 omitted

module_eval <<'.,.,', 'grammar.ra', 68
  def _reduce_17( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 74
  def _reduce_18( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :statement
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 81
  def _reduce_19( val, _values, result )
    args = aryfy(val[1])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :statement
   result
  end
.,.,

 # reduce 20 omitted

 # reduce 21 omitted

 # reduce 22 omitted

module_eval <<'.,.,', 'grammar.ra', 91
  def _reduce_23( val, _values, result )
    result = aryfy(val[0], val[2])
    result.line = @lexer.line
    result.file = @lexer.file
   result
  end
.,.,

 # reduce 24 omitted

 # reduce 25 omitted

 # reduce 26 omitted

 # reduce 27 omitted

 # reduce 28 omitted

 # reduce 29 omitted

 # reduce 30 omitted

module_eval <<'.,.,', 'grammar.ra', 104
  def _reduce_31( val, _values, result )
                    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

 # reduce 32 omitted

module_eval <<'.,.,', 'grammar.ra', 115
  def _reduce_33( val, _values, result )
    unless val[0].is_a?(AST::ASTArray)
        val[0] = aryfy(val[0])
    end

    val[0].push(val[2])

    result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 136
  def _reduce_34( val, _values, result )
    array = val[2]
    if array.instance_of?(AST::ResourceInstance)
        array = [array]
    end
    result = ast AST::ASTArray

    # this iterates across each specified resourceinstance
    array.each { |instance|
        unless instance.instance_of?(AST::ResourceInstance)
            raise Puppet::Dev, "Got something that isn't an instance"
        end
        # now, i need to somehow differentiate between those things with
        # arrays in their names, and normal things
        result.push ast(AST::Resource,
            :type => val[0],
            :title => instance[0],
            :params => instance[1])
    }
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 139
  def _reduce_35( val, _values, result )
    # This is a deprecated syntax.
    error "All resource specifications require names"
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 142
  def _reduce_36( val, _values, result )
    # a defaults setting for a type
    result = ast(AST::ResourceDefaults, :type => val[0], :params => val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 147
  def _reduce_37( val, _values, result )
    result = ast AST::ResourceOverride, :object => val[0], :params => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 174
  def _reduce_38( val, _values, result )
    type = val[0]

    if type == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect without storeconfigs being set"
    end

    if val[1].is_a? AST::ResourceDefaults
        error "Defaults are not virtualizable"
    end

    method = type.to_s + "="

    # Just mark our resources as exported and pass them through.
    if val[1].instance_of?(AST::ASTArray)
        val[1].each do |obj|
            obj.send(method, true)
        end
    else
        val[1].send(method, true)
    end

    result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 175
  def _reduce_39( val, _values, result )
 result = :virtual
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 176
  def _reduce_40( val, _values, result )
 result = :exported
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 199
  def _reduce_41( val, _values, result )
    if val[0] =~ /^[a-z]/
        Puppet.warning addcontext("Collection names must now be capitalized")
    end
    type = val[0].downcase
    args = {:type => type}

    if val[1].is_a?(AST::CollExpr)
        args[:query] = val[1]
        args[:query].type = type
        args[:form] = args[:query].form
    else
        args[:form] = val[1]
    end
    if args[:form] == :exported and ! Puppet[:storeconfigs]
        error "You cannot collect exported resources without storeconfigs being set"
    end
    result = ast AST::Collection, args
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 209
  def _reduce_42( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :virtual
    else
        result = :virtual
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 217
  def _reduce_43( val, _values, result )
    if val[1]
        result = val[1]
        result.form = :exported
    else
        result = :exported
    end
   result
  end
.,.,

 # reduce 44 omitted

 # reduce 45 omitted

module_eval <<'.,.,', 'grammar.ra', 225
  def _reduce_46( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
   result
  end
.,.,

 # reduce 47 omitted

module_eval <<'.,.,', 'grammar.ra', 231
  def _reduce_48( val, _values, result )
    result = val[1]
    result.parens = true
   result
  end
.,.,

 # reduce 49 omitted

 # reduce 50 omitted

module_eval <<'.,.,', 'grammar.ra', 239
  def _reduce_51( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 244
  def _reduce_52( val, _values, result )
    result = ast AST::CollExpr, :test1 => val[0], :oper => val[1], :test2 => val[2]
    #result = ast AST::CollExpr
    #result.push *val
   result
  end
.,.,

 # reduce 53 omitted

 # reduce 54 omitted

module_eval <<'.,.,', 'grammar.ra', 251
  def _reduce_55( val, _values, result )
    result = ast AST::ResourceInstance, :children => [val[0],val[2]]
   result
  end
.,.,

 # reduce 56 omitted

module_eval <<'.,.,', 'grammar.ra', 261
  def _reduce_57( val, _values, result )
    if val[0].instance_of?(AST::ResourceInstance)
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    else
        val[0].push val[2]
        result = val[0]
    end
   result
  end
.,.,

 # reduce 58 omitted

 # reduce 59 omitted

module_eval <<'.,.,', 'grammar.ra', 268
  def _reduce_60( val, _values, result )
    result = ast AST::Undef, :value => :undef
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 272
  def _reduce_61( val, _values, result )
    result = ast AST::Name, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 276
  def _reduce_62( val, _values, result )
    result = ast AST::Type, :value => val[0]
   result
  end
.,.,

 # reduce 63 omitted

 # reduce 64 omitted

 # reduce 65 omitted

 # reduce 66 omitted

 # reduce 67 omitted

 # reduce 68 omitted

module_eval <<'.,.,', 'grammar.ra', 292
  def _reduce_69( val, _values, result )
    if val[0] =~ /::/
        raise Puppet::ParseError, "Cannot assign to variables in other namespaces"
    end
    # this is distinct from referencing a variable
    variable = ast AST::Name, :value => val[0]
    result = ast AST::VarDef, :name => variable, :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 297
  def _reduce_70( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 297
  def _reduce_71( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 306
  def _reduce_72( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 310
  def _reduce_73( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 315
  def _reduce_74( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2],
                                     :add => true
   result
  end
.,.,

 # reduce 75 omitted

 # reduce 76 omitted

module_eval <<'.,.,', 'grammar.ra', 323
  def _reduce_77( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 323
  def _reduce_78( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 332
  def _reduce_79( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 80 omitted

module_eval <<'.,.,', 'grammar.ra', 341
  def _reduce_81( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        result = val[0].push(val[2])
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

 # reduce 82 omitted

 # reduce 83 omitted

 # reduce 84 omitted

 # reduce 85 omitted

 # reduce 86 omitted

 # reduce 87 omitted

 # reduce 88 omitted

 # reduce 89 omitted

 # reduce 90 omitted

 # reduce 91 omitted

 # reduce 92 omitted

 # reduce 93 omitted

 # reduce 94 omitted

 # reduce 95 omitted

 # reduce 96 omitted

 # reduce 97 omitted

module_eval <<'.,.,', 'grammar.ra', 368
  def _reduce_98( val, _values, result )
    args = aryfy(val[2])
    result = ast AST::Function,
        :name => val[0],
        :arguments => args,
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 373
  def _reduce_99( val, _values, result )
    result = ast AST::Function,
        :name => val[0],
        :arguments => AST::ASTArray.new({}),
        :ftype => :rvalue
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 377
  def _reduce_100( val, _values, result )
    result = ast AST::String, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 379
  def _reduce_101( val, _values, result )
    result = ast AST::FlatString, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 383
  def _reduce_102( val, _values, result )
    result = ast AST::Boolean, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 388
  def _reduce_103( val, _values, result )
    Puppet.warning addcontext("Deprecation notice:  Resource references should now be capitalized")
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 390
  def _reduce_104( val, _values, result )
    result = ast AST::ResourceReference, :type => val[0], :title => val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 403
  def _reduce_105( val, _values, result )
    args = {
        :test => val[1],
        :statements => val[3]
    }

    if val[5]
        args[:else] = val[5]
    end

    result = ast AST::IfStatement, args
   result
  end
.,.,

 # reduce 106 omitted

module_eval <<'.,.,', 'grammar.ra', 408
  def _reduce_107( val, _values, result )
    result = ast AST::Else, :statements => val[2]
   result
  end
.,.,

 # reduce 108 omitted

module_eval <<'.,.,', 'grammar.ra', 420
  def _reduce_109( val, _values, result )
    options = val[3]
    unless options.instance_of?(AST::ASTArray)
        options = ast AST::ASTArray, :children => [val[3]]
    end
    result = ast AST::CaseStatement, :test => val[1], :options => options
   result
  end
.,.,

 # reduce 110 omitted

module_eval <<'.,.,', 'grammar.ra', 430
  def _reduce_111( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push val[1]
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0], val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 434
  def _reduce_112( val, _values, result )
    result = ast AST::CaseOpt, :value => val[0], :statements => val[3]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 439
  def _reduce_113( val, _values, result )
    result = ast(AST::CaseOpt,
        :value => val[0],
        :statements => ast(AST::ASTArray)
    )
   result
  end
.,.,

 # reduce 114 omitted

module_eval <<'.,.,', 'grammar.ra', 449
  def _reduce_115( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 453
  def _reduce_116( val, _values, result )
    result = ast AST::Selector, :param => val[0], :values => val[2]
   result
  end
.,.,

 # reduce 117 omitted

module_eval <<'.,.,', 'grammar.ra', 455
  def _reduce_118( val, _values, result )
 result = val[1]
   result
  end
.,.,

 # reduce 119 omitted

module_eval <<'.,.,', 'grammar.ra', 466
  def _reduce_120( val, _values, result )
    if val[0].instance_of?(AST::ASTArray)
        val[0].push(val[2])
        result = val[0]
    else
        result = ast AST::ASTArray, :children => [val[0],val[2]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 470
  def _reduce_121( val, _values, result )
    result = ast AST::ResourceParam, :param => val[0], :value => val[2]
   result
  end
.,.,

 # reduce 122 omitted

 # reduce 123 omitted

 # reduce 124 omitted

 # reduce 125 omitted

 # reduce 126 omitted

 # reduce 127 omitted

 # reduce 128 omitted

module_eval <<'.,.,', 'grammar.ra', 481
  def _reduce_129( val, _values, result )
    result = ast AST::Default, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 483
  def _reduce_130( val, _values, result )
 result = [val[0].value]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 487
  def _reduce_131( val, _values, result )
    results = val[0] << val[2].value
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 495
  def _reduce_132( val, _values, result )
    val[1].each do |file|
        import(file)
    end

    result = AST::ASTArray.new(:children => [])
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 505
  def _reduce_133( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2], :code => val[4]
    @lexer.indefine = false
    result = nil

#}           | DEFINE NAME argumentlist parent LBRACE RBRACE {
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 509
  def _reduce_134( val, _values, result )
    newdefine classname(val[1]), :arguments => val[2]
    @lexer.indefine = false
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 517
  def _reduce_135( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :code => val[4], :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 522
  def _reduce_136( val, _values, result )
    # Our class gets defined in the parent namespace, not our own.
    @lexer.namepop
    newclass classname(val[1]), :parent => val[2]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 527
  def _reduce_137( val, _values, result )
    newnode val[1], :parent => val[2], :code => val[4]
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 530
  def _reduce_138( val, _values, result )
    newnode val[1], :parent => val[2]
    result = nil
   result
  end
.,.,

 # reduce 139 omitted

 # reduce 140 omitted

 # reduce 141 omitted

 # reduce 142 omitted

 # reduce 143 omitted

module_eval <<'.,.,', 'grammar.ra', 545
  def _reduce_144( val, _values, result )
    result = val[0]
    result = [result] unless result.is_a?(Array)
    result << val[2]
   result
  end
.,.,

 # reduce 145 omitted

 # reduce 146 omitted

 # reduce 147 omitted

 # reduce 148 omitted

module_eval <<'.,.,', 'grammar.ra', 554
  def _reduce_149( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 558
  def _reduce_150( val, _values, result )
    result = ast AST::ASTArray, :children => []
   result
  end
.,.,

 # reduce 151 omitted

module_eval <<'.,.,', 'grammar.ra', 563
  def _reduce_152( val, _values, result )
    result = nil
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 567
  def _reduce_153( val, _values, result )
    result = val[1]
    result = [result] unless result[0].is_a?(Array)
   result
  end
.,.,

 # reduce 154 omitted

module_eval <<'.,.,', 'grammar.ra', 574
  def _reduce_155( val, _values, result )
    result = val[0]
    result = [result] unless result[0].is_a?(Array)
    result << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 579
  def _reduce_156( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 583
  def _reduce_157( val, _values, result )
    Puppet.warning addcontext("Deprecation notice: must now include '$' in prototype")
    result = [val[0]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 585
  def _reduce_158( val, _values, result )
    result = [val[0], val[2]]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 587
  def _reduce_159( val, _values, result )
    result = [val[0]]
   result
  end
.,.,

 # reduce 160 omitted

module_eval <<'.,.,', 'grammar.ra', 592
  def _reduce_161( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 162 omitted

module_eval <<'.,.,', 'grammar.ra', 597
  def _reduce_163( val, _values, result )
    result = val[1]
   result
  end
.,.,

 # reduce 164 omitted

 # reduce 165 omitted

module_eval <<'.,.,', 'grammar.ra', 603
  def _reduce_166( val, _values, result )
    result = ast AST::Variable, :value => val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 611
  def _reduce_167( val, _values, result )
    if val[1].instance_of?(AST::ASTArray)
        result = val[1]
    else
        result = ast AST::ASTArray, :children => [val[1]]
    end
   result
  end
.,.,

module_eval <<'.,.,', 'grammar.ra', 613
  def _reduce_168( val, _values, result )
    result = ast AST::ASTArray
   result
  end
.,.,

 # reduce 169 omitted

 # reduce 170 omitted

 # reduce 171 omitted

module_eval <<'.,.,', 'grammar.ra', 618
  def _reduce_172( val, _values, result )
 result = nil
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

    end   # class Parser

  end   # module Parser

end   # module Puppet
